                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.0.0 #11528 (Mac OS X x86_64)
                                      4 ;--------------------------------------------------------
                                      5 	.module radio
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _spi_transfer
                                     12 	.globl ___memcpy
                                     13 	.globl _RFRDY
                                     14 	.globl _rfcsn
                                     15 	.globl _rfce
                                     16 	.globl _ien1
                                     17 	.globl _ien0
                                     18 	.globl _REGXC
                                     19 	.globl _REGXL
                                     20 	.globl _REGXH
                                     21 	.globl _TICKDV
                                     22 	.globl _RFDAT
                                     23 	.globl _P0DIR
                                     24 	.globl _P0
                                     25 	.globl _AESIA1
                                     26 	.globl _AESIV
                                     27 	.globl _usbcon
                                     28 	.globl _rfcon
                                     29 	.globl _rfctl
                                     30 	.globl _handle_radio_request_PARM_2
                                     31 	.globl _crc_update_PARM_3
                                     32 	.globl _crc_update_PARM_2
                                     33 	.globl _write_register_byte_PARM_2
                                     34 	.globl _spi_read_PARM_3
                                     35 	.globl _spi_read_PARM_2
                                     36 	.globl _spi_write_PARM_3
                                     37 	.globl _spi_write_PARM_2
                                     38 	.globl _configure_phy_PARM_3
                                     39 	.globl _configure_phy_PARM_2
                                     40 	.globl _configure_mac_PARM_3
                                     41 	.globl _configure_mac_PARM_2
                                     42 	.globl _configure_address_PARM_2
                                     43 	.globl _enter_promiscuous_mode_generic_PARM_4
                                     44 	.globl _enter_promiscuous_mode_generic_PARM_3
                                     45 	.globl _enter_promiscuous_mode_generic_PARM_2
                                     46 	.globl _enter_promiscuous_mode_PARM_2
                                     47 	.globl _setupbuf
                                     48 	.globl _out1buf
                                     49 	.globl _in1buf
                                     50 	.globl _in0buf
                                     51 	.globl _enter_promiscuous_mode
                                     52 	.globl _enter_promiscuous_mode_generic
                                     53 	.globl _configure_address
                                     54 	.globl _configure_mac
                                     55 	.globl _configure_phy
                                     56 	.globl _spi_write
                                     57 	.globl _spi_read
                                     58 	.globl _write_register_byte
                                     59 	.globl _read_register_byte
                                     60 	.globl _crc_update
                                     61 	.globl _handle_radio_request
                                     62 ;--------------------------------------------------------
                                     63 ; special function registers
                                     64 ;--------------------------------------------------------
                                     65 	.area RSEG    (ABS,DATA)
      000000                         66 	.org 0x0000
                           0000E6    67 _rfctl	=	0x00e6
                           000090    68 _rfcon	=	0x0090
                           0000A0    69 _usbcon	=	0x00a0
                           0000F2    70 _AESIV	=	0x00f2
                           0000F5    71 _AESIA1	=	0x00f5
                           000080    72 _P0	=	0x0080
                           000094    73 _P0DIR	=	0x0094
                           0000E5    74 _RFDAT	=	0x00e5
                           0000AB    75 _TICKDV	=	0x00ab
                           0000AB    76 _REGXH	=	0x00ab
                           0000AC    77 _REGXL	=	0x00ac
                           0000AD    78 _REGXC	=	0x00ad
                           0000A8    79 _ien0	=	0x00a8
                           0000B8    80 _ien1	=	0x00b8
                                     81 ;--------------------------------------------------------
                                     82 ; special function bits
                                     83 ;--------------------------------------------------------
                                     84 	.area RSEG    (ABS,DATA)
      000000                         85 	.org 0x0000
                           000090    86 _rfce	=	0x0090
                           000091    87 _rfcsn	=	0x0091
                           0000C0    88 _RFRDY	=	0x00c0
                                     89 ;--------------------------------------------------------
                                     90 ; overlayable register banks
                                     91 ;--------------------------------------------------------
                                     92 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         93 	.ds 8
                                     94 ;--------------------------------------------------------
                                     95 ; internal ram data
                                     96 ;--------------------------------------------------------
                                     97 	.area DSEG    (DATA)
      000000                         98 _enter_promiscuous_mode_sloc0_1_0:
      000000                         99 	.ds 3
      000003                        100 _enter_promiscuous_mode_sloc1_1_0:
      000003                        101 	.ds 2
      000005                        102 _enter_promiscuous_mode_generic_sloc0_1_0:
      000005                        103 	.ds 3
      000008                        104 _enter_promiscuous_mode_generic_sloc1_1_0:
      000008                        105 	.ds 2
      00000A                        106 _spi_read_sloc0_1_0:
      00000A                        107 	.ds 3
      00000D                        108 _handle_radio_request_sloc0_1_0:
      00000D                        109 	.ds 1
      00000E                        110 _handle_radio_request_sloc1_1_0:
      00000E                        111 	.ds 3
      000011                        112 _handle_radio_request_sloc2_1_0:
      000011                        113 	.ds 2
                                    114 ;--------------------------------------------------------
                                    115 ; overlayable items in internal ram 
                                    116 ;--------------------------------------------------------
                                    117 ;--------------------------------------------------------
                                    118 ; indirectly addressable internal ram data
                                    119 ;--------------------------------------------------------
                                    120 	.area ISEG    (DATA)
                                    121 ;--------------------------------------------------------
                                    122 ; absolute internal ram data
                                    123 ;--------------------------------------------------------
                                    124 	.area IABS    (ABS,DATA)
                                    125 	.area IABS    (ABS,DATA)
                                    126 ;--------------------------------------------------------
                                    127 ; bit data
                                    128 ;--------------------------------------------------------
                                    129 	.area BSEG    (BIT)
                                    130 ;--------------------------------------------------------
                                    131 ; paged external ram data
                                    132 ;--------------------------------------------------------
                                    133 	.area PSEG    (PAG,XDATA)
                                    134 ;--------------------------------------------------------
                                    135 ; external ram data
                                    136 ;--------------------------------------------------------
                                    137 	.area XSEG    (XDATA)
                           00C700   138 _in0buf	=	0xc700
                           00C680   139 _in1buf	=	0xc680
                           00C640   140 _out1buf	=	0xc640
                           00C7E8   141 _setupbuf	=	0xc7e8
      000000                        142 _configured:
      000000                        143 	.ds 1
      000001                        144 _radio_mode:
      000001                        145 	.ds 1
      000002                        146 _pm_prefix_length:
      000002                        147 	.ds 2
      000004                        148 _pm_prefix:
      000004                        149 	.ds 5
      000009                        150 _pm_payload_length:
      000009                        151 	.ds 1
      00000A                        152 _enter_promiscuous_mode_PARM_2:
      00000A                        153 	.ds 1
      00000B                        154 _enter_promiscuous_mode_prefix_65536_38:
      00000B                        155 	.ds 3
      00000E                        156 _enter_promiscuous_mode_address_131072_41:
      00000E                        157 	.ds 2
      000010                        158 _enter_promiscuous_mode_generic_PARM_2:
      000010                        159 	.ds 1
      000011                        160 _enter_promiscuous_mode_generic_PARM_3:
      000011                        161 	.ds 1
      000012                        162 _enter_promiscuous_mode_generic_PARM_4:
      000012                        163 	.ds 1
      000013                        164 _enter_promiscuous_mode_generic_prefix_65536_42:
      000013                        165 	.ds 3
      000016                        166 _enter_promiscuous_mode_generic_address_131072_45:
      000016                        167 	.ds 2
      000018                        168 _configure_address_PARM_2:
      000018                        169 	.ds 1
      000019                        170 _configure_address_address_65536_47:
      000019                        171 	.ds 3
      00001C                        172 _configure_mac_PARM_2:
      00001C                        173 	.ds 1
      00001D                        174 _configure_mac_PARM_3:
      00001D                        175 	.ds 1
      00001E                        176 _configure_mac_feature_65536_49:
      00001E                        177 	.ds 1
      00001F                        178 _configure_phy_PARM_2:
      00001F                        179 	.ds 1
      000020                        180 _configure_phy_PARM_3:
      000020                        181 	.ds 1
      000021                        182 _configure_phy_config_65536_51:
      000021                        183 	.ds 1
      000022                        184 _spi_transfer_byte_65536_53:
      000022                        185 	.ds 1
      000023                        186 _spi_write_PARM_2:
      000023                        187 	.ds 3
      000026                        188 _spi_write_PARM_3:
      000026                        189 	.ds 1
      000027                        190 _spi_write_command_65536_55:
      000027                        191 	.ds 1
      000028                        192 _spi_read_PARM_2:
      000028                        193 	.ds 3
      00002B                        194 _spi_read_PARM_3:
      00002B                        195 	.ds 1
      00002C                        196 _spi_read_command_65536_58:
      00002C                        197 	.ds 1
      00002D                        198 _write_register_byte_PARM_2:
      00002D                        199 	.ds 1
      00002E                        200 _write_register_byte_reg_65536_61:
      00002E                        201 	.ds 1
      00002F                        202 _read_register_byte_reg_65536_63:
      00002F                        203 	.ds 1
      000030                        204 _read_register_byte_value_65536_64:
      000030                        205 	.ds 1
      000031                        206 _crc_update_PARM_2:
      000031                        207 	.ds 1
      000032                        208 _crc_update_PARM_3:
      000032                        209 	.ds 1
      000033                        210 _crc_update_crc_65536_65:
      000033                        211 	.ds 2
      000035                        212 _handle_radio_request_PARM_2:
      000035                        213 	.ds 3
      000038                        214 _handle_radio_request_request_65536_67:
      000038                        215 	.ds 1
      000039                        216 _handle_radio_request_command_131072_70:
      000039                        217 	.ds 9
      000042                        218 _handle_radio_request_value_131072_79:
      000042                        219 	.ds 1
      000043                        220 _handle_radio_request_crc_262144_84:
      000043                        221 	.ds 2
      000045                        222 _handle_radio_request_crc_given_262144_84:
      000045                        223 	.ds 2
      000047                        224 _handle_radio_request_payload_262144_84:
      000047                        225 	.ds 37
      00006C                        226 _handle_radio_request_payload_262144_95:
      00006C                        227 	.ds 37
                                    228 ;--------------------------------------------------------
                                    229 ; absolute external ram data
                                    230 ;--------------------------------------------------------
                                    231 	.area XABS    (ABS,XDATA)
                                    232 ;--------------------------------------------------------
                                    233 ; external initialized ram data
                                    234 ;--------------------------------------------------------
                                    235 	.area XISEG   (XDATA)
      000000                        236 _nordic_bootloader:
      000000                        237 	.ds 2
      000002                        238 _logitech_bootloader:
      000002                        239 	.ds 2
      000004                        240 _promiscuous_address:
      000004                        241 	.ds 2
                                    242 	.area HOME    (CODE)
                                    243 	.area GSINIT0 (CODE)
                                    244 	.area GSINIT1 (CODE)
                                    245 	.area GSINIT2 (CODE)
                                    246 	.area GSINIT3 (CODE)
                                    247 	.area GSINIT4 (CODE)
                                    248 	.area GSINIT5 (CODE)
                                    249 	.area GSINIT  (CODE)
                                    250 	.area GSFINAL (CODE)
                                    251 	.area CSEG    (CODE)
                                    252 ;--------------------------------------------------------
                                    253 ; global & static initialisations
                                    254 ;--------------------------------------------------------
                                    255 	.area HOME    (CODE)
                                    256 	.area GSINIT  (CODE)
                                    257 	.area GSFINAL (CODE)
                                    258 	.area GSINIT  (CODE)
                                    259 ;--------------------------------------------------------
                                    260 ; Home
                                    261 ;--------------------------------------------------------
                                    262 	.area HOME    (CODE)
                                    263 	.area HOME    (CODE)
                                    264 ;--------------------------------------------------------
                                    265 ; code
                                    266 ;--------------------------------------------------------
                                    267 	.area CSEG    (CODE)
                                    268 ;------------------------------------------------------------
                                    269 ;Allocation info for local variables in function 'enter_promiscuous_mode'
                                    270 ;------------------------------------------------------------
                                    271 ;sloc0                     Allocated with name '_enter_promiscuous_mode_sloc0_1_0'
                                    272 ;sloc1                     Allocated with name '_enter_promiscuous_mode_sloc1_1_0'
                                    273 ;prefix_length             Allocated with name '_enter_promiscuous_mode_PARM_2'
                                    274 ;prefix                    Allocated with name '_enter_promiscuous_mode_prefix_65536_38'
                                    275 ;x                         Allocated with name '_enter_promiscuous_mode_x_65536_39'
                                    276 ;address                   Allocated with name '_enter_promiscuous_mode_address_131072_41'
                                    277 ;------------------------------------------------------------
                                    278 ;	src/radio.c:9: void enter_promiscuous_mode(uint8_t * prefix, uint8_t prefix_length)
                                    279 ;	-----------------------------------------
                                    280 ;	 function enter_promiscuous_mode
                                    281 ;	-----------------------------------------
      000000                        282 _enter_promiscuous_mode:
                           000007   283 	ar7 = 0x07
                           000006   284 	ar6 = 0x06
                           000005   285 	ar5 = 0x05
                           000004   286 	ar4 = 0x04
                           000003   287 	ar3 = 0x03
                           000002   288 	ar2 = 0x02
                           000001   289 	ar1 = 0x01
                           000000   290 	ar0 = 0x00
      000000 AF F0            [24]  291 	mov	r7,b
      000002 AE 83            [24]  292 	mov	r6,dph
      000004 E5 82            [12]  293 	mov	a,dpl
      000006 90r00r0B         [24]  294 	mov	dptr,#_enter_promiscuous_mode_prefix_65536_38
      000009 F0               [24]  295 	movx	@dptr,a
      00000A EE               [12]  296 	mov	a,r6
      00000B A3               [24]  297 	inc	dptr
      00000C F0               [24]  298 	movx	@dptr,a
      00000D EF               [12]  299 	mov	a,r7
      00000E A3               [24]  300 	inc	dptr
      00000F F0               [24]  301 	movx	@dptr,a
                                    302 ;	src/radio.c:13: for(x = 0; x < prefix_length; x++) pm_prefix[prefix_length - 1 - x] = prefix[x];
      000010 90r00r0B         [24]  303 	mov	dptr,#_enter_promiscuous_mode_prefix_65536_38
      000013 E0               [24]  304 	movx	a,@dptr
      000014 F5*00            [12]  305 	mov	_enter_promiscuous_mode_sloc0_1_0,a
      000016 A3               [24]  306 	inc	dptr
      000017 E0               [24]  307 	movx	a,@dptr
      000018 F5*01            [12]  308 	mov	(_enter_promiscuous_mode_sloc0_1_0 + 1),a
      00001A A3               [24]  309 	inc	dptr
      00001B E0               [24]  310 	movx	a,@dptr
      00001C F5*02            [12]  311 	mov	(_enter_promiscuous_mode_sloc0_1_0 + 2),a
      00001E 90r00r0A         [24]  312 	mov	dptr,#_enter_promiscuous_mode_PARM_2
      000021 E0               [24]  313 	movx	a,@dptr
      000022 FC               [12]  314 	mov	r4,a
      000023 7A 00            [12]  315 	mov	r2,#0x00
      000025 7B 00            [12]  316 	mov	r3,#0x00
      000027                        317 00109$:
      000027 8C 00            [24]  318 	mov	ar0,r4
      000029 79 00            [12]  319 	mov	r1,#0x00
      00002B C3               [12]  320 	clr	c
      00002C EA               [12]  321 	mov	a,r2
      00002D 98               [12]  322 	subb	a,r0
      00002E EB               [12]  323 	mov	a,r3
      00002F 64 80            [12]  324 	xrl	a,#0x80
      000031 89 F0            [24]  325 	mov	b,r1
      000033 63 F0 80         [24]  326 	xrl	b,#0x80
      000036 95 F0            [12]  327 	subb	a,b
      000038 50 3C            [24]  328 	jnc	00101$
      00003A 8C 07            [24]  329 	mov	ar7,r4
      00003C 1F               [12]  330 	dec	r7
      00003D 8A 06            [24]  331 	mov	ar6,r2
      00003F EF               [12]  332 	mov	a,r7
      000040 C3               [12]  333 	clr	c
      000041 9E               [12]  334 	subb	a,r6
      000042 FF               [12]  335 	mov	r7,a
      000043 33               [12]  336 	rlc	a
      000044 95 E0            [12]  337 	subb	a,acc
      000046 FE               [12]  338 	mov	r6,a
      000047 EF               [12]  339 	mov	a,r7
      000048 24r04            [12]  340 	add	a,#_pm_prefix
      00004A F5*03            [12]  341 	mov	_enter_promiscuous_mode_sloc1_1_0,a
      00004C EE               [12]  342 	mov	a,r6
      00004D 34s00            [12]  343 	addc	a,#(_pm_prefix >> 8)
      00004F F5*04            [12]  344 	mov	(_enter_promiscuous_mode_sloc1_1_0 + 1),a
      000051 C0 04            [24]  345 	push	ar4
      000053 EA               [12]  346 	mov	a,r2
      000054 25*00            [12]  347 	add	a,_enter_promiscuous_mode_sloc0_1_0
      000056 FC               [12]  348 	mov	r4,a
      000057 EB               [12]  349 	mov	a,r3
      000058 35*01            [12]  350 	addc	a,(_enter_promiscuous_mode_sloc0_1_0 + 1)
      00005A FD               [12]  351 	mov	r5,a
      00005B AF*02            [24]  352 	mov	r7,(_enter_promiscuous_mode_sloc0_1_0 + 2)
      00005D 8C 82            [24]  353 	mov	dpl,r4
      00005F 8D 83            [24]  354 	mov	dph,r5
      000061 8F F0            [24]  355 	mov	b,r7
      000063 12r00r00         [24]  356 	lcall	__gptrget
      000066 85*03 82         [24]  357 	mov	dpl,_enter_promiscuous_mode_sloc1_1_0
      000069 85*04 83         [24]  358 	mov	dph,(_enter_promiscuous_mode_sloc1_1_0 + 1)
      00006C F0               [24]  359 	movx	@dptr,a
      00006D 0A               [12]  360 	inc	r2
      00006E BA 00 01         [24]  361 	cjne	r2,#0x00,00143$
      000071 0B               [12]  362 	inc	r3
      000072                        363 00143$:
      000072 D0 04            [24]  364 	pop	ar4
      000074 80 B1            [24]  365 	sjmp	00109$
      000076                        366 00101$:
                                    367 ;	src/radio.c:14: pm_prefix_length = prefix_length > 5 ? 5 : prefix_length;
      000076 EC               [12]  368 	mov	a,r4
      000077 24 FA            [12]  369 	add	a,#0xff - 0x05
      000079 50 06            [24]  370 	jnc	00113$
      00007B 7E 05            [12]  371 	mov	r6,#0x05
      00007D 7F 00            [12]  372 	mov	r7,#0x00
      00007F 80 04            [24]  373 	sjmp	00114$
      000081                        374 00113$:
      000081 88 06            [24]  375 	mov	ar6,r0
      000083 89 07            [24]  376 	mov	ar7,r1
      000085                        377 00114$:
      000085 90r00r02         [24]  378 	mov	dptr,#_pm_prefix_length
      000088 EE               [12]  379 	mov	a,r6
      000089 F0               [24]  380 	movx	@dptr,a
      00008A EF               [12]  381 	mov	a,r7
      00008B A3               [24]  382 	inc	dptr
      00008C F0               [24]  383 	movx	@dptr,a
                                    384 ;	src/radio.c:15: radio_mode = promiscuous;
      00008D 90r00r01         [24]  385 	mov	dptr,#_radio_mode
      000090 74 01            [12]  386 	mov	a,#0x01
      000092 F0               [24]  387 	movx	@dptr,a
                                    388 ;	src/radio.c:16: pm_payload_length = 32;
      000093 90r00r09         [24]  389 	mov	dptr,#_pm_payload_length
      000096 74 20            [12]  390 	mov	a,#0x20
      000098 F0               [24]  391 	movx	@dptr,a
                                    392 ;	src/radio.c:19: rfce = 0;
                                    393 ;	assignBit
      000099 C2 90            [12]  394 	clr	_rfce
                                    395 ;	src/radio.c:22: write_register_byte(EN_RXADDR, ENRX_P0);
      00009B 90r00r2D         [24]  396 	mov	dptr,#_write_register_byte_PARM_2
      00009E 74 01            [12]  397 	mov	a,#0x01
      0000A0 F0               [24]  398 	movx	@dptr,a
      0000A1 75 82 02         [24]  399 	mov	dpl,#0x02
      0000A4 12r04r88         [24]  400 	lcall	_write_register_byte
                                    401 ;	src/radio.c:25: if(pm_prefix_length == 0) configure_address(promiscuous_address, 2);
      0000A7 90r00r02         [24]  402 	mov	dptr,#_pm_prefix_length
      0000AA E0               [24]  403 	movx	a,@dptr
      0000AB FE               [12]  404 	mov	r6,a
      0000AC A3               [24]  405 	inc	dptr
      0000AD E0               [24]  406 	movx	a,@dptr
      0000AE FF               [12]  407 	mov	r7,a
      0000AF 4E               [12]  408 	orl	a,r6
      0000B0 70 11            [24]  409 	jnz	00106$
      0000B2 90r00r18         [24]  410 	mov	dptr,#_configure_address_PARM_2
      0000B5 74 02            [12]  411 	mov	a,#0x02
      0000B7 F0               [24]  412 	movx	@dptr,a
      0000B8 90r00r04         [24]  413 	mov	dptr,#_promiscuous_address
      0000BB 75 F0 00         [24]  414 	mov	b,#0x00
      0000BE 12r02rB6         [24]  415 	lcall	_configure_address
      0000C1 80 4C            [24]  416 	sjmp	00107$
      0000C3                        417 00106$:
                                    418 ;	src/radio.c:28: else if(pm_prefix_length == 1)
      0000C3 BE 01 3B         [24]  419 	cjne	r6,#0x01,00103$
      0000C6 BF 00 38         [24]  420 	cjne	r7,#0x00,00103$
                                    421 ;	src/radio.c:30: uint8_t address[2] = { pm_prefix[0], (pm_prefix[0] & 0x80) == 0x80 ? 0xAA : 0x55 };
      0000C9 90r00r04         [24]  422 	mov	dptr,#_pm_prefix
      0000CC E0               [24]  423 	movx	a,@dptr
      0000CD 90r00r0E         [24]  424 	mov	dptr,#_enter_promiscuous_mode_address_131072_41
      0000D0 F0               [24]  425 	movx	@dptr,a
      0000D1 90r00r04         [24]  426 	mov	dptr,#_pm_prefix
      0000D4 E0               [24]  427 	movx	a,@dptr
      0000D5 FD               [12]  428 	mov	r5,a
      0000D6 53 05 80         [24]  429 	anl	ar5,#0x80
      0000D9 7C 00            [12]  430 	mov	r4,#0x00
      0000DB BD 80 09         [24]  431 	cjne	r5,#0x80,00115$
      0000DE BC 00 06         [24]  432 	cjne	r4,#0x00,00115$
      0000E1 7C AA            [12]  433 	mov	r4,#0xaa
      0000E3 7D 00            [12]  434 	mov	r5,#0x00
      0000E5 80 04            [24]  435 	sjmp	00116$
      0000E7                        436 00115$:
      0000E7 7C 55            [12]  437 	mov	r4,#0x55
      0000E9 7D 00            [12]  438 	mov	r5,#0x00
      0000EB                        439 00116$:
      0000EB 90r00r0F         [24]  440 	mov	dptr,#(_enter_promiscuous_mode_address_131072_41 + 0x0001)
      0000EE EC               [12]  441 	mov	a,r4
      0000EF F0               [24]  442 	movx	@dptr,a
                                    443 ;	src/radio.c:31: configure_address(address, 2);
      0000F0 90r00r18         [24]  444 	mov	dptr,#_configure_address_PARM_2
      0000F3 74 02            [12]  445 	mov	a,#0x02
      0000F5 F0               [24]  446 	movx	@dptr,a
      0000F6 90r00r0E         [24]  447 	mov	dptr,#_enter_promiscuous_mode_address_131072_41
      0000F9 75 F0 00         [24]  448 	mov	b,#0x00
      0000FC 12r02rB6         [24]  449 	lcall	_configure_address
      0000FF 80 0E            [24]  450 	sjmp	00107$
      000101                        451 00103$:
                                    452 ;	src/radio.c:35: else configure_address(pm_prefix, pm_prefix_length);
      000101 90r00r18         [24]  453 	mov	dptr,#_configure_address_PARM_2
      000104 EE               [12]  454 	mov	a,r6
      000105 F0               [24]  455 	movx	@dptr,a
      000106 90r00r04         [24]  456 	mov	dptr,#_pm_prefix
      000109 75 F0 00         [24]  457 	mov	b,#0x00
      00010C 12r02rB6         [24]  458 	lcall	_configure_address
      00010F                        459 00107$:
                                    460 ;	src/radio.c:38: configure_mac(0, 0, ENAA_NONE);
      00010F 90r00r1C         [24]  461 	mov	dptr,#_configure_mac_PARM_2
      000112 E4               [12]  462 	clr	a
      000113 F0               [24]  463 	movx	@dptr,a
      000114 90r00r1D         [24]  464 	mov	dptr,#_configure_mac_PARM_3
      000117 F0               [24]  465 	movx	@dptr,a
      000118 75 82 00         [24]  466 	mov	dpl,#0x00
      00011B 12r03r2F         [24]  467 	lcall	_configure_mac
                                    468 ;	src/radio.c:41: configure_phy(PRIM_RX | PWR_UP, RATE_2M, pm_payload_length);
      00011E 90r00r09         [24]  469 	mov	dptr,#_pm_payload_length
      000121 E0               [24]  470 	movx	a,@dptr
      000122 FF               [12]  471 	mov	r7,a
      000123 90r00r1F         [24]  472 	mov	dptr,#_configure_phy_PARM_2
      000126 74 08            [12]  473 	mov	a,#0x08
      000128 F0               [24]  474 	movx	@dptr,a
      000129 90r00r20         [24]  475 	mov	dptr,#_configure_phy_PARM_3
      00012C EF               [12]  476 	mov	a,r7
      00012D F0               [24]  477 	movx	@dptr,a
      00012E 75 82 03         [24]  478 	mov	dpl,#0x03
      000131 12r03r5C         [24]  479 	lcall	_configure_phy
                                    480 ;	src/radio.c:44: rfce = 1;
                                    481 ;	assignBit
      000134 D2 90            [12]  482 	setb	_rfce
                                    483 ;	src/radio.c:45: in1bc = 0;
      000136 90 C7 B7         [24]  484 	mov	dptr,#0xc7b7
      000139 E4               [12]  485 	clr	a
      00013A F0               [24]  486 	movx	@dptr,a
                                    487 ;	src/radio.c:46: }
      00013B 22               [24]  488 	ret
                                    489 ;------------------------------------------------------------
                                    490 ;Allocation info for local variables in function 'enter_promiscuous_mode_generic'
                                    491 ;------------------------------------------------------------
                                    492 ;sloc0                     Allocated with name '_enter_promiscuous_mode_generic_sloc0_1_0'
                                    493 ;sloc1                     Allocated with name '_enter_promiscuous_mode_generic_sloc1_1_0'
                                    494 ;prefix_length             Allocated with name '_enter_promiscuous_mode_generic_PARM_2'
                                    495 ;rate                      Allocated with name '_enter_promiscuous_mode_generic_PARM_3'
                                    496 ;payload_length            Allocated with name '_enter_promiscuous_mode_generic_PARM_4'
                                    497 ;prefix                    Allocated with name '_enter_promiscuous_mode_generic_prefix_65536_42'
                                    498 ;x                         Allocated with name '_enter_promiscuous_mode_generic_x_65536_43'
                                    499 ;address                   Allocated with name '_enter_promiscuous_mode_generic_address_131072_45'
                                    500 ;------------------------------------------------------------
                                    501 ;	src/radio.c:49: void enter_promiscuous_mode_generic(uint8_t * prefix, uint8_t prefix_length, uint8_t rate, uint8_t payload_length)
                                    502 ;	-----------------------------------------
                                    503 ;	 function enter_promiscuous_mode_generic
                                    504 ;	-----------------------------------------
      00013C                        505 _enter_promiscuous_mode_generic:
      00013C AF F0            [24]  506 	mov	r7,b
      00013E AE 83            [24]  507 	mov	r6,dph
      000140 E5 82            [12]  508 	mov	a,dpl
      000142 90r00r13         [24]  509 	mov	dptr,#_enter_promiscuous_mode_generic_prefix_65536_42
      000145 F0               [24]  510 	movx	@dptr,a
      000146 EE               [12]  511 	mov	a,r6
      000147 A3               [24]  512 	inc	dptr
      000148 F0               [24]  513 	movx	@dptr,a
      000149 EF               [12]  514 	mov	a,r7
      00014A A3               [24]  515 	inc	dptr
      00014B F0               [24]  516 	movx	@dptr,a
                                    517 ;	src/radio.c:53: for(x = 0; x < prefix_length; x++) pm_prefix[prefix_length - 1 - x] = prefix[x];
      00014C 90r00r13         [24]  518 	mov	dptr,#_enter_promiscuous_mode_generic_prefix_65536_42
      00014F E0               [24]  519 	movx	a,@dptr
      000150 F5*05            [12]  520 	mov	_enter_promiscuous_mode_generic_sloc0_1_0,a
      000152 A3               [24]  521 	inc	dptr
      000153 E0               [24]  522 	movx	a,@dptr
      000154 F5*06            [12]  523 	mov	(_enter_promiscuous_mode_generic_sloc0_1_0 + 1),a
      000156 A3               [24]  524 	inc	dptr
      000157 E0               [24]  525 	movx	a,@dptr
      000158 F5*07            [12]  526 	mov	(_enter_promiscuous_mode_generic_sloc0_1_0 + 2),a
      00015A 90r00r10         [24]  527 	mov	dptr,#_enter_promiscuous_mode_generic_PARM_2
      00015D E0               [24]  528 	movx	a,@dptr
      00015E FC               [12]  529 	mov	r4,a
      00015F 7A 00            [12]  530 	mov	r2,#0x00
      000161 7B 00            [12]  531 	mov	r3,#0x00
      000163                        532 00113$:
      000163 8C 00            [24]  533 	mov	ar0,r4
      000165 79 00            [12]  534 	mov	r1,#0x00
      000167 C3               [12]  535 	clr	c
      000168 EA               [12]  536 	mov	a,r2
      000169 98               [12]  537 	subb	a,r0
      00016A EB               [12]  538 	mov	a,r3
      00016B 64 80            [12]  539 	xrl	a,#0x80
      00016D 89 F0            [24]  540 	mov	b,r1
      00016F 63 F0 80         [24]  541 	xrl	b,#0x80
      000172 95 F0            [12]  542 	subb	a,b
      000174 50 3C            [24]  543 	jnc	00101$
      000176 8C 07            [24]  544 	mov	ar7,r4
      000178 1F               [12]  545 	dec	r7
      000179 8A 06            [24]  546 	mov	ar6,r2
      00017B EF               [12]  547 	mov	a,r7
      00017C C3               [12]  548 	clr	c
      00017D 9E               [12]  549 	subb	a,r6
      00017E FF               [12]  550 	mov	r7,a
      00017F 33               [12]  551 	rlc	a
      000180 95 E0            [12]  552 	subb	a,acc
      000182 FE               [12]  553 	mov	r6,a
      000183 EF               [12]  554 	mov	a,r7
      000184 24r04            [12]  555 	add	a,#_pm_prefix
      000186 F5*08            [12]  556 	mov	_enter_promiscuous_mode_generic_sloc1_1_0,a
      000188 EE               [12]  557 	mov	a,r6
      000189 34s00            [12]  558 	addc	a,#(_pm_prefix >> 8)
      00018B F5*09            [12]  559 	mov	(_enter_promiscuous_mode_generic_sloc1_1_0 + 1),a
      00018D C0 04            [24]  560 	push	ar4
      00018F EA               [12]  561 	mov	a,r2
      000190 25*05            [12]  562 	add	a,_enter_promiscuous_mode_generic_sloc0_1_0
      000192 FC               [12]  563 	mov	r4,a
      000193 EB               [12]  564 	mov	a,r3
      000194 35*06            [12]  565 	addc	a,(_enter_promiscuous_mode_generic_sloc0_1_0 + 1)
      000196 FD               [12]  566 	mov	r5,a
      000197 AF*07            [24]  567 	mov	r7,(_enter_promiscuous_mode_generic_sloc0_1_0 + 2)
      000199 8C 82            [24]  568 	mov	dpl,r4
      00019B 8D 83            [24]  569 	mov	dph,r5
      00019D 8F F0            [24]  570 	mov	b,r7
      00019F 12r00r00         [24]  571 	lcall	__gptrget
      0001A2 85*08 82         [24]  572 	mov	dpl,_enter_promiscuous_mode_generic_sloc1_1_0
      0001A5 85*09 83         [24]  573 	mov	dph,(_enter_promiscuous_mode_generic_sloc1_1_0 + 1)
      0001A8 F0               [24]  574 	movx	@dptr,a
      0001A9 0A               [12]  575 	inc	r2
      0001AA BA 00 01         [24]  576 	cjne	r2,#0x00,00155$
      0001AD 0B               [12]  577 	inc	r3
      0001AE                        578 00155$:
      0001AE D0 04            [24]  579 	pop	ar4
      0001B0 80 B1            [24]  580 	sjmp	00113$
      0001B2                        581 00101$:
                                    582 ;	src/radio.c:54: pm_prefix_length = prefix_length > 5 ? 5 : prefix_length;
      0001B2 EC               [12]  583 	mov	a,r4
      0001B3 24 FA            [12]  584 	add	a,#0xff - 0x05
      0001B5 50 06            [24]  585 	jnc	00117$
      0001B7 7E 05            [12]  586 	mov	r6,#0x05
      0001B9 7F 00            [12]  587 	mov	r7,#0x00
      0001BB 80 04            [24]  588 	sjmp	00118$
      0001BD                        589 00117$:
      0001BD 88 06            [24]  590 	mov	ar6,r0
      0001BF 89 07            [24]  591 	mov	ar7,r1
      0001C1                        592 00118$:
      0001C1 90r00r02         [24]  593 	mov	dptr,#_pm_prefix_length
      0001C4 EE               [12]  594 	mov	a,r6
      0001C5 F0               [24]  595 	movx	@dptr,a
      0001C6 EF               [12]  596 	mov	a,r7
      0001C7 A3               [24]  597 	inc	dptr
      0001C8 F0               [24]  598 	movx	@dptr,a
                                    599 ;	src/radio.c:55: radio_mode = promiscuous_generic;
      0001C9 90r00r01         [24]  600 	mov	dptr,#_radio_mode
      0001CC 74 02            [12]  601 	mov	a,#0x02
      0001CE F0               [24]  602 	movx	@dptr,a
                                    603 ;	src/radio.c:56: pm_payload_length = payload_length;
      0001CF 90r00r12         [24]  604 	mov	dptr,#_enter_promiscuous_mode_generic_PARM_4
      0001D2 E0               [24]  605 	movx	a,@dptr
      0001D3 90r00r09         [24]  606 	mov	dptr,#_pm_payload_length
      0001D6 F0               [24]  607 	movx	@dptr,a
                                    608 ;	src/radio.c:59: rfce = 0;
                                    609 ;	assignBit
      0001D7 C2 90            [12]  610 	clr	_rfce
                                    611 ;	src/radio.c:62: write_register_byte(EN_RXADDR, ENRX_P0);
      0001D9 90r00r2D         [24]  612 	mov	dptr,#_write_register_byte_PARM_2
      0001DC 74 01            [12]  613 	mov	a,#0x01
      0001DE F0               [24]  614 	movx	@dptr,a
      0001DF 75 82 02         [24]  615 	mov	dpl,#0x02
      0001E2 12r04r88         [24]  616 	lcall	_write_register_byte
                                    617 ;	src/radio.c:65: if(pm_prefix_length == 0) configure_address(promiscuous_address, 2);
      0001E5 90r00r02         [24]  618 	mov	dptr,#_pm_prefix_length
      0001E8 E0               [24]  619 	movx	a,@dptr
      0001E9 FE               [12]  620 	mov	r6,a
      0001EA A3               [24]  621 	inc	dptr
      0001EB E0               [24]  622 	movx	a,@dptr
      0001EC FF               [12]  623 	mov	r7,a
      0001ED 4E               [12]  624 	orl	a,r6
      0001EE 70 11            [24]  625 	jnz	00106$
      0001F0 90r00r18         [24]  626 	mov	dptr,#_configure_address_PARM_2
      0001F3 74 02            [12]  627 	mov	a,#0x02
      0001F5 F0               [24]  628 	movx	@dptr,a
      0001F6 90r00r04         [24]  629 	mov	dptr,#_promiscuous_address
      0001F9 75 F0 00         [24]  630 	mov	b,#0x00
      0001FC 12r02rB6         [24]  631 	lcall	_configure_address
      0001FF 80 4C            [24]  632 	sjmp	00107$
      000201                        633 00106$:
                                    634 ;	src/radio.c:68: else if(pm_prefix_length == 1)
      000201 BE 01 3B         [24]  635 	cjne	r6,#0x01,00103$
      000204 BF 00 38         [24]  636 	cjne	r7,#0x00,00103$
                                    637 ;	src/radio.c:70: uint8_t address[2] = { pm_prefix[0], (pm_prefix[0] & 0x80) == 0x80 ? 0xAA : 0x55 };
      000207 90r00r04         [24]  638 	mov	dptr,#_pm_prefix
      00020A E0               [24]  639 	movx	a,@dptr
      00020B 90r00r16         [24]  640 	mov	dptr,#_enter_promiscuous_mode_generic_address_131072_45
      00020E F0               [24]  641 	movx	@dptr,a
      00020F 90r00r04         [24]  642 	mov	dptr,#_pm_prefix
      000212 E0               [24]  643 	movx	a,@dptr
      000213 FD               [12]  644 	mov	r5,a
      000214 53 05 80         [24]  645 	anl	ar5,#0x80
      000217 7C 00            [12]  646 	mov	r4,#0x00
      000219 BD 80 09         [24]  647 	cjne	r5,#0x80,00119$
      00021C BC 00 06         [24]  648 	cjne	r4,#0x00,00119$
      00021F 7C AA            [12]  649 	mov	r4,#0xaa
      000221 7D 00            [12]  650 	mov	r5,#0x00
      000223 80 04            [24]  651 	sjmp	00120$
      000225                        652 00119$:
      000225 7C 55            [12]  653 	mov	r4,#0x55
      000227 7D 00            [12]  654 	mov	r5,#0x00
      000229                        655 00120$:
      000229 90r00r17         [24]  656 	mov	dptr,#(_enter_promiscuous_mode_generic_address_131072_45 + 0x0001)
      00022C EC               [12]  657 	mov	a,r4
      00022D F0               [24]  658 	movx	@dptr,a
                                    659 ;	src/radio.c:71: configure_address(address, 2);
      00022E 90r00r18         [24]  660 	mov	dptr,#_configure_address_PARM_2
      000231 74 02            [12]  661 	mov	a,#0x02
      000233 F0               [24]  662 	movx	@dptr,a
      000234 90r00r16         [24]  663 	mov	dptr,#_enter_promiscuous_mode_generic_address_131072_45
      000237 75 F0 00         [24]  664 	mov	b,#0x00
      00023A 12r02rB6         [24]  665 	lcall	_configure_address
      00023D 80 0E            [24]  666 	sjmp	00107$
      00023F                        667 00103$:
                                    668 ;	src/radio.c:75: else configure_address(pm_prefix, pm_prefix_length);
      00023F 90r00r18         [24]  669 	mov	dptr,#_configure_address_PARM_2
      000242 EE               [12]  670 	mov	a,r6
      000243 F0               [24]  671 	movx	@dptr,a
      000244 90r00r04         [24]  672 	mov	dptr,#_pm_prefix
      000247 75 F0 00         [24]  673 	mov	b,#0x00
      00024A 12r02rB6         [24]  674 	lcall	_configure_address
      00024D                        675 00107$:
                                    676 ;	src/radio.c:78: configure_mac(0, 0, ENAA_NONE);
      00024D 90r00r1C         [24]  677 	mov	dptr,#_configure_mac_PARM_2
      000250 E4               [12]  678 	clr	a
      000251 F0               [24]  679 	movx	@dptr,a
      000252 90r00r1D         [24]  680 	mov	dptr,#_configure_mac_PARM_3
      000255 F0               [24]  681 	movx	@dptr,a
      000256 75 82 00         [24]  682 	mov	dpl,#0x00
      000259 12r03r2F         [24]  683 	lcall	_configure_mac
                                    684 ;	src/radio.c:81: switch(rate)
      00025C 90r00r11         [24]  685 	mov	dptr,#_enter_promiscuous_mode_generic_PARM_3
      00025F E0               [24]  686 	movx	a,@dptr
      000260 FF               [12]  687 	mov	r7,a
      000261 60 05            [24]  688 	jz	00108$
                                    689 ;	src/radio.c:83: case 0:  configure_phy(PRIM_RX | PWR_UP, RF_PWR_4 | RATE_250K, pm_payload_length); break;
      000263 BF 01 32         [24]  690 	cjne	r7,#0x01,00110$
      000266 80 18            [24]  691 	sjmp	00109$
      000268                        692 00108$:
      000268 90r00r09         [24]  693 	mov	dptr,#_pm_payload_length
      00026B E0               [24]  694 	movx	a,@dptr
      00026C FF               [12]  695 	mov	r7,a
      00026D 90r00r1F         [24]  696 	mov	dptr,#_configure_phy_PARM_2
      000270 74 26            [12]  697 	mov	a,#0x26
      000272 F0               [24]  698 	movx	@dptr,a
      000273 90r00r20         [24]  699 	mov	dptr,#_configure_phy_PARM_3
      000276 EF               [12]  700 	mov	a,r7
      000277 F0               [24]  701 	movx	@dptr,a
      000278 75 82 03         [24]  702 	mov	dpl,#0x03
      00027B 12r03r5C         [24]  703 	lcall	_configure_phy
                                    704 ;	src/radio.c:84: case 1:  configure_phy(PRIM_RX | PWR_UP, RF_PWR_4 | RATE_1M, pm_payload_length); break;
      00027E 80 2E            [24]  705 	sjmp	00111$
      000280                        706 00109$:
      000280 90r00r09         [24]  707 	mov	dptr,#_pm_payload_length
      000283 E0               [24]  708 	movx	a,@dptr
      000284 FF               [12]  709 	mov	r7,a
      000285 90r00r1F         [24]  710 	mov	dptr,#_configure_phy_PARM_2
      000288 74 06            [12]  711 	mov	a,#0x06
      00028A F0               [24]  712 	movx	@dptr,a
      00028B 90r00r20         [24]  713 	mov	dptr,#_configure_phy_PARM_3
      00028E EF               [12]  714 	mov	a,r7
      00028F F0               [24]  715 	movx	@dptr,a
      000290 75 82 03         [24]  716 	mov	dpl,#0x03
      000293 12r03r5C         [24]  717 	lcall	_configure_phy
                                    718 ;	src/radio.c:85: default: configure_phy(PRIM_RX | PWR_UP, RF_PWR_4 | RATE_2M, pm_payload_length); break;
      000296 80 16            [24]  719 	sjmp	00111$
      000298                        720 00110$:
      000298 90r00r09         [24]  721 	mov	dptr,#_pm_payload_length
      00029B E0               [24]  722 	movx	a,@dptr
      00029C FF               [12]  723 	mov	r7,a
      00029D 90r00r1F         [24]  724 	mov	dptr,#_configure_phy_PARM_2
      0002A0 74 0E            [12]  725 	mov	a,#0x0e
      0002A2 F0               [24]  726 	movx	@dptr,a
      0002A3 90r00r20         [24]  727 	mov	dptr,#_configure_phy_PARM_3
      0002A6 EF               [12]  728 	mov	a,r7
      0002A7 F0               [24]  729 	movx	@dptr,a
      0002A8 75 82 03         [24]  730 	mov	dpl,#0x03
      0002AB 12r03r5C         [24]  731 	lcall	_configure_phy
                                    732 ;	src/radio.c:86: }
      0002AE                        733 00111$:
                                    734 ;	src/radio.c:89: rfce = 1;
                                    735 ;	assignBit
      0002AE D2 90            [12]  736 	setb	_rfce
                                    737 ;	src/radio.c:90: in1bc = 0;
      0002B0 90 C7 B7         [24]  738 	mov	dptr,#0xc7b7
      0002B3 E4               [12]  739 	clr	a
      0002B4 F0               [24]  740 	movx	@dptr,a
                                    741 ;	src/radio.c:91: }
      0002B5 22               [24]  742 	ret
                                    743 ;------------------------------------------------------------
                                    744 ;Allocation info for local variables in function 'configure_address'
                                    745 ;------------------------------------------------------------
                                    746 ;length                    Allocated with name '_configure_address_PARM_2'
                                    747 ;address                   Allocated with name '_configure_address_address_65536_47'
                                    748 ;------------------------------------------------------------
                                    749 ;	src/radio.c:94: void configure_address(uint8_t * address, uint8_t length)
                                    750 ;	-----------------------------------------
                                    751 ;	 function configure_address
                                    752 ;	-----------------------------------------
      0002B6                        753 _configure_address:
      0002B6 AF F0            [24]  754 	mov	r7,b
      0002B8 AE 83            [24]  755 	mov	r6,dph
      0002BA E5 82            [12]  756 	mov	a,dpl
      0002BC 90r00r19         [24]  757 	mov	dptr,#_configure_address_address_65536_47
      0002BF F0               [24]  758 	movx	@dptr,a
      0002C0 EE               [12]  759 	mov	a,r6
      0002C1 A3               [24]  760 	inc	dptr
      0002C2 F0               [24]  761 	movx	@dptr,a
      0002C3 EF               [12]  762 	mov	a,r7
      0002C4 A3               [24]  763 	inc	dptr
      0002C5 F0               [24]  764 	movx	@dptr,a
                                    765 ;	src/radio.c:96: write_register_byte(EN_RXADDR, ENRX_P0);
      0002C6 90r00r2D         [24]  766 	mov	dptr,#_write_register_byte_PARM_2
      0002C9 74 01            [12]  767 	mov	a,#0x01
      0002CB F0               [24]  768 	movx	@dptr,a
      0002CC 75 82 02         [24]  769 	mov	dpl,#0x02
      0002CF 12r04r88         [24]  770 	lcall	_write_register_byte
                                    771 ;	src/radio.c:97: write_register_byte(SETUP_AW, length - 2);
      0002D2 90r00r18         [24]  772 	mov	dptr,#_configure_address_PARM_2
      0002D5 E0               [24]  773 	movx	a,@dptr
      0002D6 FF               [12]  774 	mov	r7,a
      0002D7 FE               [12]  775 	mov	r6,a
      0002D8 1E               [12]  776 	dec	r6
      0002D9 1E               [12]  777 	dec	r6
      0002DA 90r00r2D         [24]  778 	mov	dptr,#_write_register_byte_PARM_2
      0002DD EE               [12]  779 	mov	a,r6
      0002DE F0               [24]  780 	movx	@dptr,a
      0002DF 75 82 03         [24]  781 	mov	dpl,#0x03
      0002E2 C0 07            [24]  782 	push	ar7
      0002E4 12r04r88         [24]  783 	lcall	_write_register_byte
      0002E7 D0 07            [24]  784 	pop	ar7
                                    785 ;	src/radio.c:98: write_register(TX_ADDR, address, length);
      0002E9 90r00r19         [24]  786 	mov	dptr,#_configure_address_address_65536_47
      0002EC E0               [24]  787 	movx	a,@dptr
      0002ED FC               [12]  788 	mov	r4,a
      0002EE A3               [24]  789 	inc	dptr
      0002EF E0               [24]  790 	movx	a,@dptr
      0002F0 FD               [12]  791 	mov	r5,a
      0002F1 A3               [24]  792 	inc	dptr
      0002F2 E0               [24]  793 	movx	a,@dptr
      0002F3 FE               [12]  794 	mov	r6,a
      0002F4 90r00r23         [24]  795 	mov	dptr,#_spi_write_PARM_2
      0002F7 EC               [12]  796 	mov	a,r4
      0002F8 F0               [24]  797 	movx	@dptr,a
      0002F9 ED               [12]  798 	mov	a,r5
      0002FA A3               [24]  799 	inc	dptr
      0002FB F0               [24]  800 	movx	@dptr,a
      0002FC EE               [12]  801 	mov	a,r6
      0002FD A3               [24]  802 	inc	dptr
      0002FE F0               [24]  803 	movx	@dptr,a
      0002FF 90r00r26         [24]  804 	mov	dptr,#_spi_write_PARM_3
      000302 EF               [12]  805 	mov	a,r7
      000303 F0               [24]  806 	movx	@dptr,a
      000304 75 82 30         [24]  807 	mov	dpl,#0x30
      000307 C0 07            [24]  808 	push	ar7
      000309 12r03r9B         [24]  809 	lcall	_spi_write
      00030C D0 07            [24]  810 	pop	ar7
                                    811 ;	src/radio.c:99: write_register(RX_ADDR_P0, address, length);
      00030E 90r00r19         [24]  812 	mov	dptr,#_configure_address_address_65536_47
      000311 E0               [24]  813 	movx	a,@dptr
      000312 FC               [12]  814 	mov	r4,a
      000313 A3               [24]  815 	inc	dptr
      000314 E0               [24]  816 	movx	a,@dptr
      000315 FD               [12]  817 	mov	r5,a
      000316 A3               [24]  818 	inc	dptr
      000317 E0               [24]  819 	movx	a,@dptr
      000318 FE               [12]  820 	mov	r6,a
      000319 90r00r23         [24]  821 	mov	dptr,#_spi_write_PARM_2
      00031C EC               [12]  822 	mov	a,r4
      00031D F0               [24]  823 	movx	@dptr,a
      00031E ED               [12]  824 	mov	a,r5
      00031F A3               [24]  825 	inc	dptr
      000320 F0               [24]  826 	movx	@dptr,a
      000321 EE               [12]  827 	mov	a,r6
      000322 A3               [24]  828 	inc	dptr
      000323 F0               [24]  829 	movx	@dptr,a
      000324 90r00r26         [24]  830 	mov	dptr,#_spi_write_PARM_3
      000327 EF               [12]  831 	mov	a,r7
      000328 F0               [24]  832 	movx	@dptr,a
      000329 75 82 2A         [24]  833 	mov	dpl,#0x2a
                                    834 ;	src/radio.c:100: }
      00032C 02r03r9B         [24]  835 	ljmp	_spi_write
                                    836 ;------------------------------------------------------------
                                    837 ;Allocation info for local variables in function 'configure_mac'
                                    838 ;------------------------------------------------------------
                                    839 ;dynpd                     Allocated with name '_configure_mac_PARM_2'
                                    840 ;en_aa                     Allocated with name '_configure_mac_PARM_3'
                                    841 ;feature                   Allocated with name '_configure_mac_feature_65536_49'
                                    842 ;------------------------------------------------------------
                                    843 ;	src/radio.c:103: void configure_mac(uint8_t feature, uint8_t dynpd, uint8_t en_aa)
                                    844 ;	-----------------------------------------
                                    845 ;	 function configure_mac
                                    846 ;	-----------------------------------------
      00032F                        847 _configure_mac:
      00032F E5 82            [12]  848 	mov	a,dpl
      000331 90r00r1E         [24]  849 	mov	dptr,#_configure_mac_feature_65536_49
      000334 F0               [24]  850 	movx	@dptr,a
                                    851 ;	src/radio.c:105: write_register_byte(FEATURE, feature);
      000335 E0               [24]  852 	movx	a,@dptr
      000336 90r00r2D         [24]  853 	mov	dptr,#_write_register_byte_PARM_2
      000339 F0               [24]  854 	movx	@dptr,a
      00033A 75 82 1D         [24]  855 	mov	dpl,#0x1d
      00033D 12r04r88         [24]  856 	lcall	_write_register_byte
                                    857 ;	src/radio.c:106: write_register_byte(DYNPD, dynpd);
      000340 90r00r1C         [24]  858 	mov	dptr,#_configure_mac_PARM_2
      000343 E0               [24]  859 	movx	a,@dptr
      000344 90r00r2D         [24]  860 	mov	dptr,#_write_register_byte_PARM_2
      000347 F0               [24]  861 	movx	@dptr,a
      000348 75 82 1C         [24]  862 	mov	dpl,#0x1c
      00034B 12r04r88         [24]  863 	lcall	_write_register_byte
                                    864 ;	src/radio.c:107: write_register_byte(EN_AA, en_aa);
      00034E 90r00r1D         [24]  865 	mov	dptr,#_configure_mac_PARM_3
      000351 E0               [24]  866 	movx	a,@dptr
      000352 90r00r2D         [24]  867 	mov	dptr,#_write_register_byte_PARM_2
      000355 F0               [24]  868 	movx	@dptr,a
      000356 75 82 01         [24]  869 	mov	dpl,#0x01
                                    870 ;	src/radio.c:108: }
      000359 02r04r88         [24]  871 	ljmp	_write_register_byte
                                    872 ;------------------------------------------------------------
                                    873 ;Allocation info for local variables in function 'configure_phy'
                                    874 ;------------------------------------------------------------
                                    875 ;rf_setup                  Allocated with name '_configure_phy_PARM_2'
                                    876 ;rx_pw                     Allocated with name '_configure_phy_PARM_3'
                                    877 ;config                    Allocated with name '_configure_phy_config_65536_51'
                                    878 ;------------------------------------------------------------
                                    879 ;	src/radio.c:111: void configure_phy(uint8_t config, uint8_t rf_setup, uint8_t rx_pw)
                                    880 ;	-----------------------------------------
                                    881 ;	 function configure_phy
                                    882 ;	-----------------------------------------
      00035C                        883 _configure_phy:
      00035C E5 82            [12]  884 	mov	a,dpl
      00035E 90r00r21         [24]  885 	mov	dptr,#_configure_phy_config_65536_51
      000361 F0               [24]  886 	movx	@dptr,a
                                    887 ;	src/radio.c:113: write_register_byte(CONFIG, config);
      000362 E0               [24]  888 	movx	a,@dptr
      000363 90r00r2D         [24]  889 	mov	dptr,#_write_register_byte_PARM_2
      000366 F0               [24]  890 	movx	@dptr,a
      000367 75 82 00         [24]  891 	mov	dpl,#0x00
      00036A 12r04r88         [24]  892 	lcall	_write_register_byte
                                    893 ;	src/radio.c:114: write_register_byte(RF_SETUP, rf_setup);
      00036D 90r00r1F         [24]  894 	mov	dptr,#_configure_phy_PARM_2
      000370 E0               [24]  895 	movx	a,@dptr
      000371 90r00r2D         [24]  896 	mov	dptr,#_write_register_byte_PARM_2
      000374 F0               [24]  897 	movx	@dptr,a
      000375 75 82 06         [24]  898 	mov	dpl,#0x06
      000378 12r04r88         [24]  899 	lcall	_write_register_byte
                                    900 ;	src/radio.c:115: write_register_byte(RX_PW_P0, rx_pw);
      00037B 90r00r20         [24]  901 	mov	dptr,#_configure_phy_PARM_3
      00037E E0               [24]  902 	movx	a,@dptr
      00037F 90r00r2D         [24]  903 	mov	dptr,#_write_register_byte_PARM_2
      000382 F0               [24]  904 	movx	@dptr,a
      000383 75 82 11         [24]  905 	mov	dpl,#0x11
                                    906 ;	src/radio.c:116: }
      000386 02r04r88         [24]  907 	ljmp	_write_register_byte
                                    908 ;------------------------------------------------------------
                                    909 ;Allocation info for local variables in function 'spi_transfer'
                                    910 ;------------------------------------------------------------
                                    911 ;byte                      Allocated with name '_spi_transfer_byte_65536_53'
                                    912 ;------------------------------------------------------------
                                    913 ;	src/radio.c:119: uint8_t spi_transfer(uint8_t byte)
                                    914 ;	-----------------------------------------
                                    915 ;	 function spi_transfer
                                    916 ;	-----------------------------------------
      000389                        917 _spi_transfer:
      000389 E5 82            [12]  918 	mov	a,dpl
      00038B 90r00r22         [24]  919 	mov	dptr,#_spi_transfer_byte_65536_53
      00038E F0               [24]  920 	movx	@dptr,a
                                    921 ;	src/radio.c:121: RFDAT = byte;
      00038F E0               [24]  922 	movx	a,@dptr
      000390 F5 E5            [12]  923 	mov	_RFDAT,a
                                    924 ;	src/radio.c:122: RFRDY = 0;
                                    925 ;	assignBit
      000392 C2 C0            [12]  926 	clr	_RFRDY
                                    927 ;	src/radio.c:123: while(!RFRDY);
      000394                        928 00101$:
      000394 30 C0 FD         [24]  929 	jnb	_RFRDY,00101$
                                    930 ;	src/radio.c:124: return RFDAT;
      000397 85 E5 82         [24]  931 	mov	dpl,_RFDAT
                                    932 ;	src/radio.c:125: }
      00039A 22               [24]  933 	ret
                                    934 ;------------------------------------------------------------
                                    935 ;Allocation info for local variables in function 'spi_write'
                                    936 ;------------------------------------------------------------
                                    937 ;buffer                    Allocated with name '_spi_write_PARM_2'
                                    938 ;length                    Allocated with name '_spi_write_PARM_3'
                                    939 ;command                   Allocated with name '_spi_write_command_65536_55'
                                    940 ;x                         Allocated with name '_spi_write_x_65536_56'
                                    941 ;------------------------------------------------------------
                                    942 ;	src/radio.c:128: void spi_write(uint8_t command, uint8_t * buffer, uint8_t length)
                                    943 ;	-----------------------------------------
                                    944 ;	 function spi_write
                                    945 ;	-----------------------------------------
      00039B                        946 _spi_write:
      00039B E5 82            [12]  947 	mov	a,dpl
      00039D 90r00r27         [24]  948 	mov	dptr,#_spi_write_command_65536_55
      0003A0 F0               [24]  949 	movx	@dptr,a
                                    950 ;	src/radio.c:131: rfcsn = 0;
                                    951 ;	assignBit
      0003A1 C2 91            [12]  952 	clr	_rfcsn
                                    953 ;	src/radio.c:132: spi_transfer(command);
      0003A3 90r00r27         [24]  954 	mov	dptr,#_spi_write_command_65536_55
      0003A6 E0               [24]  955 	movx	a,@dptr
      0003A7 F5 82            [12]  956 	mov	dpl,a
      0003A9 12r03r89         [24]  957 	lcall	_spi_transfer
                                    958 ;	src/radio.c:133: for(x = 0; x < length; x++) spi_transfer(buffer[x]);
      0003AC 90r00r23         [24]  959 	mov	dptr,#_spi_write_PARM_2
      0003AF E0               [24]  960 	movx	a,@dptr
      0003B0 FD               [12]  961 	mov	r5,a
      0003B1 A3               [24]  962 	inc	dptr
      0003B2 E0               [24]  963 	movx	a,@dptr
      0003B3 FE               [12]  964 	mov	r6,a
      0003B4 A3               [24]  965 	inc	dptr
      0003B5 E0               [24]  966 	movx	a,@dptr
      0003B6 FF               [12]  967 	mov	r7,a
      0003B7 90r00r26         [24]  968 	mov	dptr,#_spi_write_PARM_3
      0003BA E0               [24]  969 	movx	a,@dptr
      0003BB FC               [12]  970 	mov	r4,a
      0003BC 7A 00            [12]  971 	mov	r2,#0x00
      0003BE 7B 00            [12]  972 	mov	r3,#0x00
      0003C0                        973 00103$:
      0003C0 8C 00            [24]  974 	mov	ar0,r4
      0003C2 79 00            [12]  975 	mov	r1,#0x00
      0003C4 C3               [12]  976 	clr	c
      0003C5 EA               [12]  977 	mov	a,r2
      0003C6 98               [12]  978 	subb	a,r0
      0003C7 EB               [12]  979 	mov	a,r3
      0003C8 64 80            [12]  980 	xrl	a,#0x80
      0003CA 89 F0            [24]  981 	mov	b,r1
      0003CC 63 F0 80         [24]  982 	xrl	b,#0x80
      0003CF 95 F0            [12]  983 	subb	a,b
      0003D1 50 39            [24]  984 	jnc	00101$
      0003D3 C0 04            [24]  985 	push	ar4
      0003D5 EA               [12]  986 	mov	a,r2
      0003D6 2D               [12]  987 	add	a,r5
      0003D7 F8               [12]  988 	mov	r0,a
      0003D8 EB               [12]  989 	mov	a,r3
      0003D9 3E               [12]  990 	addc	a,r6
      0003DA F9               [12]  991 	mov	r1,a
      0003DB 8F 04            [24]  992 	mov	ar4,r7
      0003DD 88 82            [24]  993 	mov	dpl,r0
      0003DF 89 83            [24]  994 	mov	dph,r1
      0003E1 8C F0            [24]  995 	mov	b,r4
      0003E3 12r00r00         [24]  996 	lcall	__gptrget
      0003E6 F5 82            [12]  997 	mov	dpl,a
      0003E8 C0 07            [24]  998 	push	ar7
      0003EA C0 06            [24]  999 	push	ar6
      0003EC C0 05            [24] 1000 	push	ar5
      0003EE C0 04            [24] 1001 	push	ar4
      0003F0 C0 03            [24] 1002 	push	ar3
      0003F2 C0 02            [24] 1003 	push	ar2
      0003F4 12r03r89         [24] 1004 	lcall	_spi_transfer
      0003F7 D0 02            [24] 1005 	pop	ar2
      0003F9 D0 03            [24] 1006 	pop	ar3
      0003FB D0 04            [24] 1007 	pop	ar4
      0003FD D0 05            [24] 1008 	pop	ar5
      0003FF D0 06            [24] 1009 	pop	ar6
      000401 D0 07            [24] 1010 	pop	ar7
      000403 0A               [12] 1011 	inc	r2
      000404 BA 00 01         [24] 1012 	cjne	r2,#0x00,00117$
      000407 0B               [12] 1013 	inc	r3
      000408                       1014 00117$:
      000408 D0 04            [24] 1015 	pop	ar4
      00040A 80 B4            [24] 1016 	sjmp	00103$
      00040C                       1017 00101$:
                                   1018 ;	src/radio.c:134: rfcsn = 1;
                                   1019 ;	assignBit
      00040C D2 91            [12] 1020 	setb	_rfcsn
                                   1021 ;	src/radio.c:135: }
      00040E 22               [24] 1022 	ret
                                   1023 ;------------------------------------------------------------
                                   1024 ;Allocation info for local variables in function 'spi_read'
                                   1025 ;------------------------------------------------------------
                                   1026 ;sloc0                     Allocated with name '_spi_read_sloc0_1_0'
                                   1027 ;buffer                    Allocated with name '_spi_read_PARM_2'
                                   1028 ;length                    Allocated with name '_spi_read_PARM_3'
                                   1029 ;command                   Allocated with name '_spi_read_command_65536_58'
                                   1030 ;x                         Allocated with name '_spi_read_x_65536_59'
                                   1031 ;------------------------------------------------------------
                                   1032 ;	src/radio.c:138: void spi_read(uint8_t command, uint8_t * buffer, uint8_t length)
                                   1033 ;	-----------------------------------------
                                   1034 ;	 function spi_read
                                   1035 ;	-----------------------------------------
      00040F                       1036 _spi_read:
      00040F E5 82            [12] 1037 	mov	a,dpl
      000411 90r00r2C         [24] 1038 	mov	dptr,#_spi_read_command_65536_58
      000414 F0               [24] 1039 	movx	@dptr,a
                                   1040 ;	src/radio.c:141: rfcsn = 0;
                                   1041 ;	assignBit
      000415 C2 91            [12] 1042 	clr	_rfcsn
                                   1043 ;	src/radio.c:142: spi_transfer(command);
      000417 90r00r2C         [24] 1044 	mov	dptr,#_spi_read_command_65536_58
      00041A E0               [24] 1045 	movx	a,@dptr
      00041B F5 82            [12] 1046 	mov	dpl,a
      00041D 12r03r89         [24] 1047 	lcall	_spi_transfer
                                   1048 ;	src/radio.c:143: for(x = 0; x < length; x++) buffer[x] = spi_transfer(0xFF);
      000420 90r00r28         [24] 1049 	mov	dptr,#_spi_read_PARM_2
      000423 E0               [24] 1050 	movx	a,@dptr
      000424 FD               [12] 1051 	mov	r5,a
      000425 A3               [24] 1052 	inc	dptr
      000426 E0               [24] 1053 	movx	a,@dptr
      000427 FE               [12] 1054 	mov	r6,a
      000428 A3               [24] 1055 	inc	dptr
      000429 E0               [24] 1056 	movx	a,@dptr
      00042A FF               [12] 1057 	mov	r7,a
      00042B 90r00r2B         [24] 1058 	mov	dptr,#_spi_read_PARM_3
      00042E E0               [24] 1059 	movx	a,@dptr
      00042F FC               [12] 1060 	mov	r4,a
      000430 7A 00            [12] 1061 	mov	r2,#0x00
      000432 7B 00            [12] 1062 	mov	r3,#0x00
      000434                       1063 00103$:
      000434 8C 00            [24] 1064 	mov	ar0,r4
      000436 79 00            [12] 1065 	mov	r1,#0x00
      000438 C3               [12] 1066 	clr	c
      000439 EA               [12] 1067 	mov	a,r2
      00043A 98               [12] 1068 	subb	a,r0
      00043B EB               [12] 1069 	mov	a,r3
      00043C 64 80            [12] 1070 	xrl	a,#0x80
      00043E 89 F0            [24] 1071 	mov	b,r1
      000440 63 F0 80         [24] 1072 	xrl	b,#0x80
      000443 95 F0            [12] 1073 	subb	a,b
      000445 50 3E            [24] 1074 	jnc	00101$
      000447 C0 04            [24] 1075 	push	ar4
      000449 EA               [12] 1076 	mov	a,r2
      00044A 2D               [12] 1077 	add	a,r5
      00044B F5*0A            [12] 1078 	mov	_spi_read_sloc0_1_0,a
      00044D EB               [12] 1079 	mov	a,r3
      00044E 3E               [12] 1080 	addc	a,r6
      00044F F5*0B            [12] 1081 	mov	(_spi_read_sloc0_1_0 + 1),a
      000451 8F*0C            [24] 1082 	mov	(_spi_read_sloc0_1_0 + 2),r7
      000453 75 82 FF         [24] 1083 	mov	dpl,#0xff
      000456 C0 07            [24] 1084 	push	ar7
      000458 C0 06            [24] 1085 	push	ar6
      00045A C0 05            [24] 1086 	push	ar5
      00045C C0 03            [24] 1087 	push	ar3
      00045E C0 02            [24] 1088 	push	ar2
      000460 12r03r89         [24] 1089 	lcall	_spi_transfer
      000463 AC 82            [24] 1090 	mov	r4,dpl
      000465 D0 02            [24] 1091 	pop	ar2
      000467 D0 03            [24] 1092 	pop	ar3
      000469 D0 05            [24] 1093 	pop	ar5
      00046B D0 06            [24] 1094 	pop	ar6
      00046D D0 07            [24] 1095 	pop	ar7
      00046F 85*0A 82         [24] 1096 	mov	dpl,_spi_read_sloc0_1_0
      000472 85*0B 83         [24] 1097 	mov	dph,(_spi_read_sloc0_1_0 + 1)
      000475 85*0C F0         [24] 1098 	mov	b,(_spi_read_sloc0_1_0 + 2)
      000478 EC               [12] 1099 	mov	a,r4
      000479 12r00r00         [24] 1100 	lcall	__gptrput
      00047C 0A               [12] 1101 	inc	r2
      00047D BA 00 01         [24] 1102 	cjne	r2,#0x00,00117$
      000480 0B               [12] 1103 	inc	r3
      000481                       1104 00117$:
      000481 D0 04            [24] 1105 	pop	ar4
      000483 80 AF            [24] 1106 	sjmp	00103$
      000485                       1107 00101$:
                                   1108 ;	src/radio.c:144: rfcsn = 1;
                                   1109 ;	assignBit
      000485 D2 91            [12] 1110 	setb	_rfcsn
                                   1111 ;	src/radio.c:145: }
      000487 22               [24] 1112 	ret
                                   1113 ;------------------------------------------------------------
                                   1114 ;Allocation info for local variables in function 'write_register_byte'
                                   1115 ;------------------------------------------------------------
                                   1116 ;byte                      Allocated with name '_write_register_byte_PARM_2'
                                   1117 ;reg                       Allocated with name '_write_register_byte_reg_65536_61'
                                   1118 ;------------------------------------------------------------
                                   1119 ;	src/radio.c:148: void write_register_byte(uint8_t reg, uint8_t byte)
                                   1120 ;	-----------------------------------------
                                   1121 ;	 function write_register_byte
                                   1122 ;	-----------------------------------------
      000488                       1123 _write_register_byte:
      000488 E5 82            [12] 1124 	mov	a,dpl
      00048A 90r00r2E         [24] 1125 	mov	dptr,#_write_register_byte_reg_65536_61
      00048D F0               [24] 1126 	movx	@dptr,a
                                   1127 ;	src/radio.c:150: write_register(reg, &byte, 1);
      00048E E0               [24] 1128 	movx	a,@dptr
      00048F 44 20            [12] 1129 	orl	a,#0x20
      000491 FF               [12] 1130 	mov	r7,a
      000492 90r00r23         [24] 1131 	mov	dptr,#_spi_write_PARM_2
      000495 74r2D            [12] 1132 	mov	a,#_write_register_byte_PARM_2
      000497 F0               [24] 1133 	movx	@dptr,a
      000498 74s00            [12] 1134 	mov	a,#(_write_register_byte_PARM_2 >> 8)
      00049A A3               [24] 1135 	inc	dptr
      00049B F0               [24] 1136 	movx	@dptr,a
      00049C E4               [12] 1137 	clr	a
      00049D A3               [24] 1138 	inc	dptr
      00049E F0               [24] 1139 	movx	@dptr,a
      00049F 90r00r26         [24] 1140 	mov	dptr,#_spi_write_PARM_3
      0004A2 04               [12] 1141 	inc	a
      0004A3 F0               [24] 1142 	movx	@dptr,a
      0004A4 8F 82            [24] 1143 	mov	dpl,r7
                                   1144 ;	src/radio.c:151: }
      0004A6 02r03r9B         [24] 1145 	ljmp	_spi_write
                                   1146 ;------------------------------------------------------------
                                   1147 ;Allocation info for local variables in function 'read_register_byte'
                                   1148 ;------------------------------------------------------------
                                   1149 ;reg                       Allocated with name '_read_register_byte_reg_65536_63'
                                   1150 ;value                     Allocated with name '_read_register_byte_value_65536_64'
                                   1151 ;------------------------------------------------------------
                                   1152 ;	src/radio.c:154: uint8_t read_register_byte(uint8_t reg)
                                   1153 ;	-----------------------------------------
                                   1154 ;	 function read_register_byte
                                   1155 ;	-----------------------------------------
      0004A9                       1156 _read_register_byte:
      0004A9 E5 82            [12] 1157 	mov	a,dpl
      0004AB 90r00r2F         [24] 1158 	mov	dptr,#_read_register_byte_reg_65536_63
      0004AE F0               [24] 1159 	movx	@dptr,a
                                   1160 ;	src/radio.c:157: read_register(reg, &value, 1);
      0004AF E0               [24] 1161 	movx	a,@dptr
      0004B0 FF               [12] 1162 	mov	r7,a
      0004B1 90r00r28         [24] 1163 	mov	dptr,#_spi_read_PARM_2
      0004B4 74r30            [12] 1164 	mov	a,#_read_register_byte_value_65536_64
      0004B6 F0               [24] 1165 	movx	@dptr,a
      0004B7 74s00            [12] 1166 	mov	a,#(_read_register_byte_value_65536_64 >> 8)
      0004B9 A3               [24] 1167 	inc	dptr
      0004BA F0               [24] 1168 	movx	@dptr,a
      0004BB E4               [12] 1169 	clr	a
      0004BC A3               [24] 1170 	inc	dptr
      0004BD F0               [24] 1171 	movx	@dptr,a
      0004BE 90r00r2B         [24] 1172 	mov	dptr,#_spi_read_PARM_3
      0004C1 04               [12] 1173 	inc	a
      0004C2 F0               [24] 1174 	movx	@dptr,a
      0004C3 8F 82            [24] 1175 	mov	dpl,r7
      0004C5 12r04r0F         [24] 1176 	lcall	_spi_read
                                   1177 ;	src/radio.c:158: return value;
      0004C8 90r00r30         [24] 1178 	mov	dptr,#_read_register_byte_value_65536_64
      0004CB E0               [24] 1179 	movx	a,@dptr
                                   1180 ;	src/radio.c:159: }
      0004CC F5 82            [12] 1181 	mov	dpl,a
      0004CE 22               [24] 1182 	ret
                                   1183 ;------------------------------------------------------------
                                   1184 ;Allocation info for local variables in function 'crc_update'
                                   1185 ;------------------------------------------------------------
                                   1186 ;byte                      Allocated with name '_crc_update_PARM_2'
                                   1187 ;bits                      Allocated with name '_crc_update_PARM_3'
                                   1188 ;crc                       Allocated with name '_crc_update_crc_65536_65'
                                   1189 ;------------------------------------------------------------
                                   1190 ;	src/radio.c:162: uint16_t crc_update(uint16_t crc, uint8_t byte, uint8_t bits)
                                   1191 ;	-----------------------------------------
                                   1192 ;	 function crc_update
                                   1193 ;	-----------------------------------------
      0004CF                       1194 _crc_update:
      0004CF AF 83            [24] 1195 	mov	r7,dph
      0004D1 E5 82            [12] 1196 	mov	a,dpl
      0004D3 90r00r33         [24] 1197 	mov	dptr,#_crc_update_crc_65536_65
      0004D6 F0               [24] 1198 	movx	@dptr,a
      0004D7 EF               [12] 1199 	mov	a,r7
      0004D8 A3               [24] 1200 	inc	dptr
      0004D9 F0               [24] 1201 	movx	@dptr,a
                                   1202 ;	src/radio.c:164: crc = crc ^ (byte << 8);
      0004DA 90r00r31         [24] 1203 	mov	dptr,#_crc_update_PARM_2
      0004DD E0               [24] 1204 	movx	a,@dptr
      0004DE FE               [12] 1205 	mov	r6,a
      0004DF 7F 00            [12] 1206 	mov	r7,#0x00
      0004E1 90r00r33         [24] 1207 	mov	dptr,#_crc_update_crc_65536_65
      0004E4 E0               [24] 1208 	movx	a,@dptr
      0004E5 FC               [12] 1209 	mov	r4,a
      0004E6 A3               [24] 1210 	inc	dptr
      0004E7 E0               [24] 1211 	movx	a,@dptr
      0004E8 FD               [12] 1212 	mov	r5,a
      0004E9 EF               [12] 1213 	mov	a,r7
      0004EA 62 04            [12] 1214 	xrl	ar4,a
      0004EC EE               [12] 1215 	mov	a,r6
      0004ED 62 05            [12] 1216 	xrl	ar5,a
      0004EF 90r00r33         [24] 1217 	mov	dptr,#_crc_update_crc_65536_65
      0004F2 EC               [12] 1218 	mov	a,r4
      0004F3 F0               [24] 1219 	movx	@dptr,a
      0004F4 ED               [12] 1220 	mov	a,r5
      0004F5 A3               [24] 1221 	inc	dptr
      0004F6 F0               [24] 1222 	movx	@dptr,a
                                   1223 ;	src/radio.c:165: while(bits--)
      0004F7 90r00r32         [24] 1224 	mov	dptr,#_crc_update_PARM_3
      0004FA E0               [24] 1225 	movx	a,@dptr
      0004FB FF               [12] 1226 	mov	r7,a
      0004FC                       1227 00104$:
      0004FC 8F 06            [24] 1228 	mov	ar6,r7
      0004FE 1F               [12] 1229 	dec	r7
      0004FF EE               [12] 1230 	mov	a,r6
      000500 60 3D            [24] 1231 	jz	00106$
                                   1232 ;	src/radio.c:166: if((crc & 0x8000) == 0x8000) crc = (crc << 1) ^ 0x1021;
      000502 90r00r33         [24] 1233 	mov	dptr,#_crc_update_crc_65536_65
      000505 E0               [24] 1234 	movx	a,@dptr
      000506 FD               [12] 1235 	mov	r5,a
      000507 A3               [24] 1236 	inc	dptr
      000508 E0               [24] 1237 	movx	a,@dptr
      000509 FE               [12] 1238 	mov	r6,a
      00050A 8D 03            [24] 1239 	mov	ar3,r5
      00050C 8E 04            [24] 1240 	mov	ar4,r6
      00050E 7B 00            [12] 1241 	mov	r3,#0x00
      000510 53 04 80         [24] 1242 	anl	ar4,#0x80
      000513 BB 00 19         [24] 1243 	cjne	r3,#0x00,00102$
      000516 BC 80 16         [24] 1244 	cjne	r4,#0x80,00102$
      000519 ED               [12] 1245 	mov	a,r5
      00051A 2D               [12] 1246 	add	a,r5
      00051B FB               [12] 1247 	mov	r3,a
      00051C EE               [12] 1248 	mov	a,r6
      00051D 33               [12] 1249 	rlc	a
      00051E FC               [12] 1250 	mov	r4,a
      00051F 63 03 21         [24] 1251 	xrl	ar3,#0x21
      000522 63 04 10         [24] 1252 	xrl	ar4,#0x10
      000525 90r00r33         [24] 1253 	mov	dptr,#_crc_update_crc_65536_65
      000528 EB               [12] 1254 	mov	a,r3
      000529 F0               [24] 1255 	movx	@dptr,a
      00052A EC               [12] 1256 	mov	a,r4
      00052B A3               [24] 1257 	inc	dptr
      00052C F0               [24] 1258 	movx	@dptr,a
      00052D 80 CD            [24] 1259 	sjmp	00104$
      00052F                       1260 00102$:
                                   1261 ;	src/radio.c:167: else crc = crc << 1;
      00052F ED               [12] 1262 	mov	a,r5
      000530 2D               [12] 1263 	add	a,r5
      000531 FD               [12] 1264 	mov	r5,a
      000532 EE               [12] 1265 	mov	a,r6
      000533 33               [12] 1266 	rlc	a
      000534 FE               [12] 1267 	mov	r6,a
      000535 90r00r33         [24] 1268 	mov	dptr,#_crc_update_crc_65536_65
      000538 ED               [12] 1269 	mov	a,r5
      000539 F0               [24] 1270 	movx	@dptr,a
      00053A EE               [12] 1271 	mov	a,r6
      00053B A3               [24] 1272 	inc	dptr
      00053C F0               [24] 1273 	movx	@dptr,a
      00053D 80 BD            [24] 1274 	sjmp	00104$
      00053F                       1275 00106$:
                                   1276 ;	src/radio.c:168: crc = crc & 0xFFFF;
      00053F 90r00r33         [24] 1277 	mov	dptr,#_crc_update_crc_65536_65
      000542 E0               [24] 1278 	movx	a,@dptr
      000543 FE               [12] 1279 	mov	r6,a
      000544 A3               [24] 1280 	inc	dptr
      000545 E0               [24] 1281 	movx	a,@dptr
      000546 FF               [12] 1282 	mov	r7,a
      000547 90r00r33         [24] 1283 	mov	dptr,#_crc_update_crc_65536_65
      00054A EE               [12] 1284 	mov	a,r6
      00054B F0               [24] 1285 	movx	@dptr,a
      00054C EF               [12] 1286 	mov	a,r7
      00054D A3               [24] 1287 	inc	dptr
      00054E F0               [24] 1288 	movx	@dptr,a
                                   1289 ;	src/radio.c:169: return crc;
      00054F 90r00r33         [24] 1290 	mov	dptr,#_crc_update_crc_65536_65
      000552 E0               [24] 1291 	movx	a,@dptr
      000553 FE               [12] 1292 	mov	r6,a
      000554 A3               [24] 1293 	inc	dptr
      000555 E0               [24] 1294 	movx	a,@dptr
                                   1295 ;	src/radio.c:170: }
      000556 8E 82            [24] 1296 	mov	dpl,r6
      000558 F5 83            [12] 1297 	mov	dph,a
      00055A 22               [24] 1298 	ret
                                   1299 ;------------------------------------------------------------
                                   1300 ;Allocation info for local variables in function 'handle_radio_request'
                                   1301 ;------------------------------------------------------------
                                   1302 ;sloc0                     Allocated with name '_handle_radio_request_sloc0_1_0'
                                   1303 ;sloc1                     Allocated with name '_handle_radio_request_sloc1_1_0'
                                   1304 ;sloc2                     Allocated with name '_handle_radio_request_sloc2_1_0'
                                   1305 ;data                      Allocated with name '_handle_radio_request_PARM_2'
                                   1306 ;request                   Allocated with name '_handle_radio_request_request_65536_67'
                                   1307 ;command                   Allocated with name '_handle_radio_request_command_131072_70'
                                   1308 ;command_length            Allocated with name '_handle_radio_request_command_length_131072_70'
                                   1309 ;x                         Allocated with name '_handle_radio_request_x_131072_70'
                                   1310 ;value                     Allocated with name '_handle_radio_request_value_131072_79'
                                   1311 ;x                         Allocated with name '_handle_radio_request_x_262144_84'
                                   1312 ;offset                    Allocated with name '_handle_radio_request_offset_262144_84'
                                   1313 ;payload_length            Allocated with name '_handle_radio_request_payload_length_262144_84'
                                   1314 ;crc                       Allocated with name '_handle_radio_request_crc_262144_84'
                                   1315 ;crc_given                 Allocated with name '_handle_radio_request_crc_given_262144_84'
                                   1316 ;payload                   Allocated with name '_handle_radio_request_payload_262144_84'
                                   1317 ;x                         Allocated with name '_handle_radio_request_x_262144_95'
                                   1318 ;payload                   Allocated with name '_handle_radio_request_payload_262144_95'
                                   1319 ;elapsed                   Allocated with name '_handle_radio_request_elapsed_131072_98'
                                   1320 ;status                    Allocated with name '_handle_radio_request_status_131072_98'
                                   1321 ;__2621440005              Allocated with name '_handle_radio_request___2621440005_262144_108'
                                   1322 ;us                        Allocated with name '_handle_radio_request_us_327680_109'
                                   1323 ;__1966080007              Allocated with name '_handle_radio_request___1966080007_196608_111'
                                   1324 ;us                        Allocated with name '_handle_radio_request_us_262144_112'
                                   1325 ;address_start             Allocated with name '_handle_radio_request_address_start_131072_105'
                                   1326 ;__1966080009              Allocated with name '_handle_radio_request___1966080009_196608_114'
                                   1327 ;us                        Allocated with name '_handle_radio_request_us_262144_115'
                                   1328 ;------------------------------------------------------------
                                   1329 ;	src/radio.c:173: void handle_radio_request(uint8_t request, uint8_t * data)
                                   1330 ;	-----------------------------------------
                                   1331 ;	 function handle_radio_request
                                   1332 ;	-----------------------------------------
      00055B                       1333 _handle_radio_request:
      00055B E5 82            [12] 1334 	mov	a,dpl
      00055D 90r00r38         [24] 1335 	mov	dptr,#_handle_radio_request_request_65536_67
      000560 F0               [24] 1336 	movx	@dptr,a
                                   1337 ;	src/radio.c:176: if(request == LAUNCH_NORDIC_BOOTLOADER)
      000561 E0               [24] 1338 	movx	a,@dptr
      000562 FF               [12] 1339 	mov	r7,a
      000563 BF FF 0E         [24] 1340 	cjne	r7,#0xff,00102$
                                   1341 ;	src/radio.c:178: nordic_bootloader();
      000566 90r00r00         [24] 1342 	mov	dptr,#_nordic_bootloader
      000569 E0               [24] 1343 	movx	a,@dptr
      00056A F8               [12] 1344 	mov	r0,a
      00056B A3               [24] 1345 	inc	dptr
      00056C E0               [24] 1346 	movx	a,@dptr
      00056D F5 83            [12] 1347 	mov	dph,a
      00056F 88 82            [24] 1348 	mov	dpl,r0
                                   1349 ;	src/radio.c:179: return;
      000571 02r00r00         [24] 1350 	ljmp	__sdcc_call_dptr
      000574                       1351 00102$:
                                   1352 ;	src/radio.c:183: if(request == LAUNCH_LOGITECH_BOOTLOADER)
      000574 BF FE 69         [24] 1353 	cjne	r7,#0xfe,00210$
                                   1354 ;	src/radio.c:185: const uint8_t command[9] = {'E', 'n', 't', 'e', 'r', ' ', 'I', 'C', 'P'};
      000577 90r00r39         [24] 1355 	mov	dptr,#_handle_radio_request_command_131072_70
      00057A 74 45            [12] 1356 	mov	a,#0x45
      00057C F0               [24] 1357 	movx	@dptr,a
      00057D 90r00r3A         [24] 1358 	mov	dptr,#(_handle_radio_request_command_131072_70 + 0x0001)
      000580 74 6E            [12] 1359 	mov	a,#0x6e
      000582 F0               [24] 1360 	movx	@dptr,a
      000583 90r00r3B         [24] 1361 	mov	dptr,#(_handle_radio_request_command_131072_70 + 0x0002)
      000586 74 74            [12] 1362 	mov	a,#0x74
      000588 F0               [24] 1363 	movx	@dptr,a
      000589 90r00r3C         [24] 1364 	mov	dptr,#(_handle_radio_request_command_131072_70 + 0x0003)
      00058C 74 65            [12] 1365 	mov	a,#0x65
      00058E F0               [24] 1366 	movx	@dptr,a
      00058F 90r00r3D         [24] 1367 	mov	dptr,#(_handle_radio_request_command_131072_70 + 0x0004)
      000592 74 72            [12] 1368 	mov	a,#0x72
      000594 F0               [24] 1369 	movx	@dptr,a
      000595 90r00r3E         [24] 1370 	mov	dptr,#(_handle_radio_request_command_131072_70 + 0x0005)
      000598 74 20            [12] 1371 	mov	a,#0x20
      00059A F0               [24] 1372 	movx	@dptr,a
      00059B 90r00r3F         [24] 1373 	mov	dptr,#(_handle_radio_request_command_131072_70 + 0x0006)
      00059E 74 49            [12] 1374 	mov	a,#0x49
      0005A0 F0               [24] 1375 	movx	@dptr,a
      0005A1 90r00r40         [24] 1376 	mov	dptr,#(_handle_radio_request_command_131072_70 + 0x0007)
      0005A4 74 43            [12] 1377 	mov	a,#0x43
      0005A6 F0               [24] 1378 	movx	@dptr,a
      0005A7 90r00r41         [24] 1379 	mov	dptr,#(_handle_radio_request_command_131072_70 + 0x0008)
      0005AA 74 50            [12] 1380 	mov	a,#0x50
      0005AC F0               [24] 1381 	movx	@dptr,a
                                   1382 ;	src/radio.c:188: for(x = 0; x < command_length; x++)
      0005AD 7D 00            [12] 1383 	mov	r5,#0x00
      0005AF 7E 00            [12] 1384 	mov	r6,#0x00
      0005B1                       1385 00225$:
      0005B1 C3               [12] 1386 	clr	c
      0005B2 ED               [12] 1387 	mov	a,r5
      0005B3 94 09            [12] 1388 	subb	a,#0x09
      0005B5 EE               [12] 1389 	mov	a,r6
      0005B6 64 80            [12] 1390 	xrl	a,#0x80
      0005B8 94 80            [12] 1391 	subb	a,#0x80
      0005BA 50 16            [24] 1392 	jnc	00103$
                                   1393 ;	src/radio.c:190: AESIA1 = x;
                                   1394 ;	src/radio.c:191: AESIV = command[x];
      0005BC ED               [12] 1395 	mov	a,r5
      0005BD F5 F5            [12] 1396 	mov	_AESIA1,a
      0005BF 24r39            [12] 1397 	add	a,#_handle_radio_request_command_131072_70
      0005C1 F5 82            [12] 1398 	mov	dpl,a
      0005C3 EE               [12] 1399 	mov	a,r6
      0005C4 34s00            [12] 1400 	addc	a,#(_handle_radio_request_command_131072_70 >> 8)
      0005C6 F5 83            [12] 1401 	mov	dph,a
      0005C8 E0               [24] 1402 	movx	a,@dptr
      0005C9 F5 F2            [12] 1403 	mov	_AESIV,a
                                   1404 ;	src/radio.c:188: for(x = 0; x < command_length; x++)
      0005CB 0D               [12] 1405 	inc	r5
      0005CC BD 00 E2         [24] 1406 	cjne	r5,#0x00,00225$
      0005CF 0E               [12] 1407 	inc	r6
      0005D0 80 DF            [24] 1408 	sjmp	00225$
      0005D2                       1409 00103$:
                                   1410 ;	src/radio.c:193: logitech_bootloader();
      0005D2 90r00r02         [24] 1411 	mov	dptr,#_logitech_bootloader
      0005D5 E0               [24] 1412 	movx	a,@dptr
      0005D6 F8               [12] 1413 	mov	r0,a
      0005D7 A3               [24] 1414 	inc	dptr
      0005D8 E0               [24] 1415 	movx	a,@dptr
      0005D9 F5 83            [12] 1416 	mov	dph,a
      0005DB 88 82            [24] 1417 	mov	dpl,r0
                                   1418 ;	src/radio.c:194: return;
      0005DD 02r00r00         [24] 1419 	ljmp	__sdcc_call_dptr
      0005E0                       1420 00210$:
                                   1421 ;	src/radio.c:198: else if(request == ENABLE_LNA)
      0005E0 BF 0B 0C         [24] 1422 	cjne	r7,#0x0b,00207$
                                   1423 ;	src/radio.c:200: P0DIR &= ~0x10;
      0005E3 53 94 EF         [24] 1424 	anl	_P0DIR,#0xef
                                   1425 ;	src/radio.c:201: P0 |= 0x10;
      0005E6 43 80 10         [24] 1426 	orl	_P0,#0x10
                                   1427 ;	src/radio.c:202: in1bc = 0;
      0005E9 90 C7 B7         [24] 1428 	mov	dptr,#0xc7b7
      0005EC E4               [12] 1429 	clr	a
      0005ED F0               [24] 1430 	movx	@dptr,a
                                   1431 ;	src/radio.c:203: return;
      0005EE 22               [24] 1432 	ret
      0005EF                       1433 00207$:
                                   1434 ;	src/radio.c:207: else if(request == SET_CHANNEL)
      0005EF BF 09 68         [24] 1435 	cjne	r7,#0x09,00204$
                                   1436 ;	src/radio.c:209: rfce = 0;
                                   1437 ;	assignBit
      0005F2 C2 90            [12] 1438 	clr	_rfce
                                   1439 ;	src/radio.c:210: write_register_byte(RF_CH, data[0]);
      0005F4 90r00r35         [24] 1440 	mov	dptr,#_handle_radio_request_PARM_2
      0005F7 E0               [24] 1441 	movx	a,@dptr
      0005F8 FC               [12] 1442 	mov	r4,a
      0005F9 A3               [24] 1443 	inc	dptr
      0005FA E0               [24] 1444 	movx	a,@dptr
      0005FB FD               [12] 1445 	mov	r5,a
      0005FC A3               [24] 1446 	inc	dptr
      0005FD E0               [24] 1447 	movx	a,@dptr
      0005FE FE               [12] 1448 	mov	r6,a
      0005FF 8C 82            [24] 1449 	mov	dpl,r4
      000601 8D 83            [24] 1450 	mov	dph,r5
      000603 8E F0            [24] 1451 	mov	b,r6
      000605 12r00r00         [24] 1452 	lcall	__gptrget
      000608 90r00r2D         [24] 1453 	mov	dptr,#_write_register_byte_PARM_2
      00060B F0               [24] 1454 	movx	@dptr,a
      00060C 75 82 05         [24] 1455 	mov	dpl,#0x05
      00060F C0 06            [24] 1456 	push	ar6
      000611 C0 05            [24] 1457 	push	ar5
      000613 C0 04            [24] 1458 	push	ar4
      000615 12r04r88         [24] 1459 	lcall	_write_register_byte
      000618 D0 04            [24] 1460 	pop	ar4
      00061A D0 05            [24] 1461 	pop	ar5
      00061C D0 06            [24] 1462 	pop	ar6
                                   1463 ;	src/radio.c:211: in1bc = 1;
      00061E 90 C7 B7         [24] 1464 	mov	dptr,#0xc7b7
      000621 74 01            [12] 1465 	mov	a,#0x01
      000623 F0               [24] 1466 	movx	@dptr,a
                                   1467 ;	src/radio.c:212: in1buf[0] = data[0];
      000624 8C 82            [24] 1468 	mov	dpl,r4
      000626 8D 83            [24] 1469 	mov	dph,r5
      000628 8E F0            [24] 1470 	mov	b,r6
      00062A 12r00r00         [24] 1471 	lcall	__gptrget
      00062D 90 C6 80         [24] 1472 	mov	dptr,#_in1buf
      000630 F0               [24] 1473 	movx	@dptr,a
                                   1474 ;	src/radio.c:213: flush_rx();
      000631 90r00r23         [24] 1475 	mov	dptr,#_spi_write_PARM_2
      000634 E4               [12] 1476 	clr	a
      000635 F0               [24] 1477 	movx	@dptr,a
      000636 A3               [24] 1478 	inc	dptr
      000637 F0               [24] 1479 	movx	@dptr,a
      000638 A3               [24] 1480 	inc	dptr
      000639 F0               [24] 1481 	movx	@dptr,a
      00063A 90r00r26         [24] 1482 	mov	dptr,#_spi_write_PARM_3
      00063D F0               [24] 1483 	movx	@dptr,a
      00063E 75 82 E2         [24] 1484 	mov	dpl,#0xe2
      000641 12r03r9B         [24] 1485 	lcall	_spi_write
                                   1486 ;	src/radio.c:214: flush_tx();
      000644 90r00r23         [24] 1487 	mov	dptr,#_spi_write_PARM_2
      000647 E4               [12] 1488 	clr	a
      000648 F0               [24] 1489 	movx	@dptr,a
      000649 A3               [24] 1490 	inc	dptr
      00064A F0               [24] 1491 	movx	@dptr,a
      00064B A3               [24] 1492 	inc	dptr
      00064C F0               [24] 1493 	movx	@dptr,a
      00064D 90r00r26         [24] 1494 	mov	dptr,#_spi_write_PARM_3
      000650 F0               [24] 1495 	movx	@dptr,a
      000651 75 82 E1         [24] 1496 	mov	dpl,#0xe1
      000654 12r03r9B         [24] 1497 	lcall	_spi_write
                                   1498 ;	src/radio.c:215: rfce = 1;
                                   1499 ;	assignBit
      000657 D2 90            [12] 1500 	setb	_rfce
                                   1501 ;	src/radio.c:216: return;
      000659 22               [24] 1502 	ret
      00065A                       1503 00204$:
                                   1504 ;	src/radio.c:220: else if(request == GET_CHANNEL)
      00065A BF 0A 1F         [24] 1505 	cjne	r7,#0x0a,00201$
                                   1506 ;	src/radio.c:222: spi_read(RF_CH, in1buf, 1);
      00065D 90r00r28         [24] 1507 	mov	dptr,#_spi_read_PARM_2
      000660 74 80            [12] 1508 	mov	a,#_in1buf
      000662 F0               [24] 1509 	movx	@dptr,a
      000663 74 C6            [12] 1510 	mov	a,#(_in1buf >> 8)
      000665 A3               [24] 1511 	inc	dptr
      000666 F0               [24] 1512 	movx	@dptr,a
      000667 E4               [12] 1513 	clr	a
      000668 A3               [24] 1514 	inc	dptr
      000669 F0               [24] 1515 	movx	@dptr,a
      00066A 90r00r2B         [24] 1516 	mov	dptr,#_spi_read_PARM_3
      00066D 04               [12] 1517 	inc	a
      00066E F0               [24] 1518 	movx	@dptr,a
      00066F 75 82 05         [24] 1519 	mov	dpl,#0x05
      000672 12r04r0F         [24] 1520 	lcall	_spi_read
                                   1521 ;	src/radio.c:223: in1bc = 1;
      000675 90 C7 B7         [24] 1522 	mov	dptr,#0xc7b7
      000678 74 01            [12] 1523 	mov	a,#0x01
      00067A F0               [24] 1524 	movx	@dptr,a
                                   1525 ;	src/radio.c:224: return;
      00067B 22               [24] 1526 	ret
      00067C                       1527 00201$:
                                   1528 ;	src/radio.c:228: else if(request == ENTER_PROMISCUOUS_MODE)
      00067C BF 06 2A         [24] 1529 	cjne	r7,#0x06,00198$
                                   1530 ;	src/radio.c:230: enter_promiscuous_mode(&data[1] /* address prefix */, data[0] /* prefix length */);
      00067F 90r00r35         [24] 1531 	mov	dptr,#_handle_radio_request_PARM_2
      000682 E0               [24] 1532 	movx	a,@dptr
      000683 FC               [12] 1533 	mov	r4,a
      000684 A3               [24] 1534 	inc	dptr
      000685 E0               [24] 1535 	movx	a,@dptr
      000686 FD               [12] 1536 	mov	r5,a
      000687 A3               [24] 1537 	inc	dptr
      000688 E0               [24] 1538 	movx	a,@dptr
      000689 FE               [12] 1539 	mov	r6,a
      00068A 74 01            [12] 1540 	mov	a,#0x01
      00068C 2C               [12] 1541 	add	a,r4
      00068D F9               [12] 1542 	mov	r1,a
      00068E E4               [12] 1543 	clr	a
      00068F 3D               [12] 1544 	addc	a,r5
      000690 FA               [12] 1545 	mov	r2,a
      000691 8E 03            [24] 1546 	mov	ar3,r6
      000693 8C 82            [24] 1547 	mov	dpl,r4
      000695 8D 83            [24] 1548 	mov	dph,r5
      000697 8E F0            [24] 1549 	mov	b,r6
      000699 12r00r00         [24] 1550 	lcall	__gptrget
      00069C 90r00r0A         [24] 1551 	mov	dptr,#_enter_promiscuous_mode_PARM_2
      00069F F0               [24] 1552 	movx	@dptr,a
      0006A0 89 82            [24] 1553 	mov	dpl,r1
      0006A2 8A 83            [24] 1554 	mov	dph,r2
      0006A4 8B F0            [24] 1555 	mov	b,r3
      0006A6 02r00r00         [24] 1556 	ljmp	_enter_promiscuous_mode
      0006A9                       1557 00198$:
                                   1558 ;	src/radio.c:234: else if(request == ENTER_PROMISCUOUS_MODE_GENERIC)
      0006A9 BF 0D 61         [24] 1559 	cjne	r7,#0x0d,00195$
                                   1560 ;	src/radio.c:236: enter_promiscuous_mode_generic(&data[3] /* address prefix */, data[0] /* prefix length */, data[1] /* rate */, data[2] /* payload length */);
      0006AC 90r00r35         [24] 1561 	mov	dptr,#_handle_radio_request_PARM_2
      0006AF E0               [24] 1562 	movx	a,@dptr
      0006B0 FC               [12] 1563 	mov	r4,a
      0006B1 A3               [24] 1564 	inc	dptr
      0006B2 E0               [24] 1565 	movx	a,@dptr
      0006B3 FD               [12] 1566 	mov	r5,a
      0006B4 A3               [24] 1567 	inc	dptr
      0006B5 E0               [24] 1568 	movx	a,@dptr
      0006B6 FE               [12] 1569 	mov	r6,a
      0006B7 74 03            [12] 1570 	mov	a,#0x03
      0006B9 2C               [12] 1571 	add	a,r4
      0006BA F5*0E            [12] 1572 	mov	_handle_radio_request_sloc1_1_0,a
      0006BC E4               [12] 1573 	clr	a
      0006BD 3D               [12] 1574 	addc	a,r5
      0006BE F5*0F            [12] 1575 	mov	(_handle_radio_request_sloc1_1_0 + 1),a
      0006C0 8E*10            [24] 1576 	mov	(_handle_radio_request_sloc1_1_0 + 2),r6
      0006C2 8C 82            [24] 1577 	mov	dpl,r4
      0006C4 8D 83            [24] 1578 	mov	dph,r5
      0006C6 8E F0            [24] 1579 	mov	b,r6
      0006C8 12r00r00         [24] 1580 	lcall	__gptrget
      0006CB F5*0D            [12] 1581 	mov	_handle_radio_request_sloc0_1_0,a
      0006CD 74 01            [12] 1582 	mov	a,#0x01
      0006CF 2C               [12] 1583 	add	a,r4
      0006D0 F8               [12] 1584 	mov	r0,a
      0006D1 E4               [12] 1585 	clr	a
      0006D2 3D               [12] 1586 	addc	a,r5
      0006D3 FA               [12] 1587 	mov	r2,a
      0006D4 8E 03            [24] 1588 	mov	ar3,r6
      0006D6 88 82            [24] 1589 	mov	dpl,r0
      0006D8 8A 83            [24] 1590 	mov	dph,r2
      0006DA 8B F0            [24] 1591 	mov	b,r3
      0006DC 12r00r00         [24] 1592 	lcall	__gptrget
      0006DF F8               [12] 1593 	mov	r0,a
      0006E0 74 02            [12] 1594 	mov	a,#0x02
      0006E2 2C               [12] 1595 	add	a,r4
      0006E3 FC               [12] 1596 	mov	r4,a
      0006E4 E4               [12] 1597 	clr	a
      0006E5 3D               [12] 1598 	addc	a,r5
      0006E6 FD               [12] 1599 	mov	r5,a
      0006E7 8C 82            [24] 1600 	mov	dpl,r4
      0006E9 8D 83            [24] 1601 	mov	dph,r5
      0006EB 8E F0            [24] 1602 	mov	b,r6
      0006ED 12r00r00         [24] 1603 	lcall	__gptrget
      0006F0 FC               [12] 1604 	mov	r4,a
      0006F1 90r00r10         [24] 1605 	mov	dptr,#_enter_promiscuous_mode_generic_PARM_2
      0006F4 E5*0D            [12] 1606 	mov	a,_handle_radio_request_sloc0_1_0
      0006F6 F0               [24] 1607 	movx	@dptr,a
      0006F7 90r00r11         [24] 1608 	mov	dptr,#_enter_promiscuous_mode_generic_PARM_3
      0006FA E8               [12] 1609 	mov	a,r0
      0006FB F0               [24] 1610 	movx	@dptr,a
      0006FC 90r00r12         [24] 1611 	mov	dptr,#_enter_promiscuous_mode_generic_PARM_4
      0006FF EC               [12] 1612 	mov	a,r4
      000700 F0               [24] 1613 	movx	@dptr,a
      000701 85*0E 82         [24] 1614 	mov	dpl,_handle_radio_request_sloc1_1_0
      000704 85*0F 83         [24] 1615 	mov	dph,(_handle_radio_request_sloc1_1_0 + 1)
      000707 85*10 F0         [24] 1616 	mov	b,(_handle_radio_request_sloc1_1_0 + 2)
      00070A 02r01r3C         [24] 1617 	ljmp	_enter_promiscuous_mode_generic
      00070D                       1618 00195$:
                                   1619 ;	src/radio.c:240: else if(request == ENTER_TONE_TEST_MODE)
      00070D BF 07 17         [24] 1620 	cjne	r7,#0x07,00192$
                                   1621 ;	src/radio.c:242: configure_phy(PWR_UP, CONT_WAVE | PLL_LOCK, 0);
      000710 90r00r1F         [24] 1622 	mov	dptr,#_configure_phy_PARM_2
      000713 74 90            [12] 1623 	mov	a,#0x90
      000715 F0               [24] 1624 	movx	@dptr,a
      000716 90r00r20         [24] 1625 	mov	dptr,#_configure_phy_PARM_3
      000719 E4               [12] 1626 	clr	a
      00071A F0               [24] 1627 	movx	@dptr,a
      00071B 75 82 02         [24] 1628 	mov	dpl,#0x02
      00071E 12r03r5C         [24] 1629 	lcall	_configure_phy
                                   1630 ;	src/radio.c:243: in1bc = 0;
      000721 90 C7 B7         [24] 1631 	mov	dptr,#0xc7b7
      000724 E4               [12] 1632 	clr	a
      000725 F0               [24] 1633 	movx	@dptr,a
                                   1634 ;	src/radio.c:244: return;
      000726 22               [24] 1635 	ret
      000727                       1636 00192$:
                                   1637 ;	src/radio.c:248: else if(request == RECEIVE_PACKET)
      000727 BF 12 02         [24] 1638 	cjne	r7,#0x12,00528$
      00072A 80 03            [24] 1639 	sjmp	00529$
      00072C                       1640 00528$:
      00072C 02r0BrF2         [24] 1641 	ljmp	00189$
      00072F                       1642 00529$:
                                   1643 ;	src/radio.c:253: read_register(FIFO_STATUS, &value, 1);
      00072F 90r00r28         [24] 1644 	mov	dptr,#_spi_read_PARM_2
      000732 74r42            [12] 1645 	mov	a,#_handle_radio_request_value_131072_79
      000734 F0               [24] 1646 	movx	@dptr,a
      000735 74s00            [12] 1647 	mov	a,#(_handle_radio_request_value_131072_79 >> 8)
      000737 A3               [24] 1648 	inc	dptr
      000738 F0               [24] 1649 	movx	@dptr,a
      000739 E4               [12] 1650 	clr	a
      00073A A3               [24] 1651 	inc	dptr
      00073B F0               [24] 1652 	movx	@dptr,a
      00073C 90r00r2B         [24] 1653 	mov	dptr,#_spi_read_PARM_3
      00073F 04               [12] 1654 	inc	a
      000740 F0               [24] 1655 	movx	@dptr,a
      000741 75 82 17         [24] 1656 	mov	dpl,#0x17
      000744 12r04r0F         [24] 1657 	lcall	_spi_read
                                   1658 ;	src/radio.c:254: if((value & 1) == 0)
      000747 90r00r42         [24] 1659 	mov	dptr,#_handle_radio_request_value_131072_79
      00074A E0               [24] 1660 	movx	a,@dptr
      00074B 30 E0 03         [24] 1661 	jnb	acc.0,00530$
      00074E 02r0BrE5         [24] 1662 	ljmp	00133$
      000751                       1663 00530$:
                                   1664 ;	src/radio.c:257: if(radio_mode == sniffer)
      000751 90r00r01         [24] 1665 	mov	dptr,#_radio_mode
      000754 E0               [24] 1666 	movx	a,@dptr
      000755 FE               [12] 1667 	mov	r6,a
      000756 70 7B            [24] 1668 	jnz	00130$
                                   1669 ;	src/radio.c:260: read_register(R_RX_PL_WID, &value, 1);
      000758 90r00r28         [24] 1670 	mov	dptr,#_spi_read_PARM_2
      00075B 74r42            [12] 1671 	mov	a,#_handle_radio_request_value_131072_79
      00075D F0               [24] 1672 	movx	@dptr,a
      00075E 74s00            [12] 1673 	mov	a,#(_handle_radio_request_value_131072_79 >> 8)
      000760 A3               [24] 1674 	inc	dptr
      000761 F0               [24] 1675 	movx	@dptr,a
      000762 E4               [12] 1676 	clr	a
      000763 A3               [24] 1677 	inc	dptr
      000764 F0               [24] 1678 	movx	@dptr,a
      000765 90r00r2B         [24] 1679 	mov	dptr,#_spi_read_PARM_3
      000768 04               [12] 1680 	inc	a
      000769 F0               [24] 1681 	movx	@dptr,a
      00076A 75 82 60         [24] 1682 	mov	dpl,#0x60
      00076D 12r04r0F         [24] 1683 	lcall	_spi_read
                                   1684 ;	src/radio.c:261: if(value <= 32)
      000770 90r00r42         [24] 1685 	mov	dptr,#_handle_radio_request_value_131072_79
      000773 E0               [24] 1686 	movx	a,@dptr
      000774 FD               [12] 1687 	mov  r5,a
      000775 24 DF            [12] 1688 	add	a,#0xff - 0x20
      000777 40 3B            [24] 1689 	jc	00105$
                                   1690 ;	src/radio.c:264: read_register(R_RX_PAYLOAD, &in1buf[1], value);
      000779 90r00r28         [24] 1691 	mov	dptr,#_spi_read_PARM_2
      00077C 74 81            [12] 1692 	mov	a,#(_in1buf + 0x0001)
      00077E F0               [24] 1693 	movx	@dptr,a
      00077F 74 C6            [12] 1694 	mov	a,#((_in1buf + 0x0001) >> 8)
      000781 A3               [24] 1695 	inc	dptr
      000782 F0               [24] 1696 	movx	@dptr,a
      000783 E4               [12] 1697 	clr	a
      000784 A3               [24] 1698 	inc	dptr
      000785 F0               [24] 1699 	movx	@dptr,a
      000786 90r00r2B         [24] 1700 	mov	dptr,#_spi_read_PARM_3
      000789 ED               [12] 1701 	mov	a,r5
      00078A F0               [24] 1702 	movx	@dptr,a
      00078B 75 82 61         [24] 1703 	mov	dpl,#0x61
      00078E 12r04r0F         [24] 1704 	lcall	_spi_read
                                   1705 ;	src/radio.c:265: in1buf[0] = 0;
      000791 90 C6 80         [24] 1706 	mov	dptr,#_in1buf
      000794 E4               [12] 1707 	clr	a
      000795 F0               [24] 1708 	movx	@dptr,a
                                   1709 ;	src/radio.c:266: in1bc = value + 1;
      000796 90r00r42         [24] 1710 	mov	dptr,#_handle_radio_request_value_131072_79
      000799 E0               [24] 1711 	movx	a,@dptr
      00079A FD               [12] 1712 	mov	r5,a
      00079B 0D               [12] 1713 	inc	r5
      00079C 90 C7 B7         [24] 1714 	mov	dptr,#0xc7b7
      00079F ED               [12] 1715 	mov	a,r5
      0007A0 F0               [24] 1716 	movx	@dptr,a
                                   1717 ;	src/radio.c:267: flush_rx();
      0007A1 90r00r23         [24] 1718 	mov	dptr,#_spi_write_PARM_2
      0007A4 E4               [12] 1719 	clr	a
      0007A5 F0               [24] 1720 	movx	@dptr,a
      0007A6 A3               [24] 1721 	inc	dptr
      0007A7 F0               [24] 1722 	movx	@dptr,a
      0007A8 A3               [24] 1723 	inc	dptr
      0007A9 F0               [24] 1724 	movx	@dptr,a
      0007AA 90r00r26         [24] 1725 	mov	dptr,#_spi_write_PARM_3
      0007AD F0               [24] 1726 	movx	@dptr,a
      0007AE 75 82 E2         [24] 1727 	mov	dpl,#0xe2
                                   1728 ;	src/radio.c:268: return;
      0007B1 02r03r9B         [24] 1729 	ljmp	_spi_write
      0007B4                       1730 00105$:
                                   1731 ;	src/radio.c:273: in1bc = 1;
      0007B4 90 C7 B7         [24] 1732 	mov	dptr,#0xc7b7
      0007B7 74 01            [12] 1733 	mov	a,#0x01
      0007B9 F0               [24] 1734 	movx	@dptr,a
                                   1735 ;	src/radio.c:274: in1buf[0] = 0xFF;
      0007BA 90 C6 80         [24] 1736 	mov	dptr,#_in1buf
      0007BD 74 FF            [12] 1737 	mov	a,#0xff
      0007BF F0               [24] 1738 	movx	@dptr,a
                                   1739 ;	src/radio.c:275: flush_rx();
      0007C0 90r00r23         [24] 1740 	mov	dptr,#_spi_write_PARM_2
      0007C3 E4               [12] 1741 	clr	a
      0007C4 F0               [24] 1742 	movx	@dptr,a
      0007C5 A3               [24] 1743 	inc	dptr
      0007C6 F0               [24] 1744 	movx	@dptr,a
      0007C7 A3               [24] 1745 	inc	dptr
      0007C8 F0               [24] 1746 	movx	@dptr,a
      0007C9 90r00r26         [24] 1747 	mov	dptr,#_spi_write_PARM_3
      0007CC F0               [24] 1748 	movx	@dptr,a
      0007CD 75 82 E2         [24] 1749 	mov	dpl,#0xe2
                                   1750 ;	src/radio.c:276: return;
      0007D0 02r03r9B         [24] 1751 	ljmp	_spi_write
      0007D3                       1752 00130$:
                                   1753 ;	src/radio.c:281: else if(radio_mode == promiscuous)
      0007D3 BE 01 02         [24] 1754 	cjne	r6,#0x01,00533$
      0007D6 80 03            [24] 1755 	sjmp	00534$
      0007D8                       1756 00533$:
      0007D8 02r0Br2D         [24] 1757 	ljmp	00127$
      0007DB                       1758 00534$:
                                   1759 ;	src/radio.c:289: for(x = 0; x < pm_prefix_length; x++) payload[pm_prefix_length - x - 1] = pm_prefix[x];
      0007DB 7C 00            [12] 1760 	mov	r4,#0x00
      0007DD 7D 00            [12] 1761 	mov	r5,#0x00
      0007DF                       1762 00228$:
      0007DF 90r00r02         [24] 1763 	mov	dptr,#_pm_prefix_length
      0007E2 E0               [24] 1764 	movx	a,@dptr
      0007E3 FA               [12] 1765 	mov	r2,a
      0007E4 A3               [24] 1766 	inc	dptr
      0007E5 E0               [24] 1767 	movx	a,@dptr
      0007E6 FB               [12] 1768 	mov	r3,a
      0007E7 C3               [12] 1769 	clr	c
      0007E8 EC               [12] 1770 	mov	a,r4
      0007E9 9A               [12] 1771 	subb	a,r2
      0007EA ED               [12] 1772 	mov	a,r5
      0007EB 64 80            [12] 1773 	xrl	a,#0x80
      0007ED 8B F0            [24] 1774 	mov	b,r3
      0007EF 63 F0 80         [24] 1775 	xrl	b,#0x80
      0007F2 95 F0            [12] 1776 	subb	a,b
      0007F4 50 30            [24] 1777 	jnc	00107$
      0007F6 8A 01            [24] 1778 	mov	ar1,r2
      0007F8 8C 00            [24] 1779 	mov	ar0,r4
      0007FA E9               [12] 1780 	mov	a,r1
      0007FB C3               [12] 1781 	clr	c
      0007FC 98               [12] 1782 	subb	a,r0
      0007FD 14               [12] 1783 	dec	a
      0007FE F8               [12] 1784 	mov	r0,a
      0007FF 33               [12] 1785 	rlc	a
      000800 95 E0            [12] 1786 	subb	a,acc
      000802 F9               [12] 1787 	mov	r1,a
      000803 E8               [12] 1788 	mov	a,r0
      000804 24r47            [12] 1789 	add	a,#_handle_radio_request_payload_262144_84
      000806 F5*0E            [12] 1790 	mov	_handle_radio_request_sloc1_1_0,a
      000808 E9               [12] 1791 	mov	a,r1
      000809 34s00            [12] 1792 	addc	a,#(_handle_radio_request_payload_262144_84 >> 8)
      00080B F5*0F            [12] 1793 	mov	(_handle_radio_request_sloc1_1_0 + 1),a
      00080D EC               [12] 1794 	mov	a,r4
      00080E 24r04            [12] 1795 	add	a,#_pm_prefix
      000810 F5 82            [12] 1796 	mov	dpl,a
      000812 ED               [12] 1797 	mov	a,r5
      000813 34s00            [12] 1798 	addc	a,#(_pm_prefix >> 8)
      000815 F5 83            [12] 1799 	mov	dph,a
      000817 E0               [24] 1800 	movx	a,@dptr
      000818 85*0E 82         [24] 1801 	mov	dpl,_handle_radio_request_sloc1_1_0
      00081B 85*0F 83         [24] 1802 	mov	dph,(_handle_radio_request_sloc1_1_0 + 1)
      00081E F0               [24] 1803 	movx	@dptr,a
      00081F 0C               [12] 1804 	inc	r4
      000820 BC 00 BC         [24] 1805 	cjne	r4,#0x00,00228$
      000823 0D               [12] 1806 	inc	r5
      000824 80 B9            [24] 1807 	sjmp	00228$
      000826                       1808 00107$:
                                   1809 ;	src/radio.c:290: read_register(R_RX_PAYLOAD, &payload[pm_prefix_length], pm_payload_length);
      000826 EA               [12] 1810 	mov	a,r2
      000827 24r47            [12] 1811 	add	a,#_handle_radio_request_payload_262144_84
      000829 FA               [12] 1812 	mov	r2,a
      00082A EB               [12] 1813 	mov	a,r3
      00082B 34s00            [12] 1814 	addc	a,#(_handle_radio_request_payload_262144_84 >> 8)
      00082D FB               [12] 1815 	mov	r3,a
      00082E 7D 00            [12] 1816 	mov	r5,#0x00
      000830 90r00r09         [24] 1817 	mov	dptr,#_pm_payload_length
      000833 E0               [24] 1818 	movx	a,@dptr
      000834 FC               [12] 1819 	mov	r4,a
      000835 90r00r28         [24] 1820 	mov	dptr,#_spi_read_PARM_2
      000838 EA               [12] 1821 	mov	a,r2
      000839 F0               [24] 1822 	movx	@dptr,a
      00083A EB               [12] 1823 	mov	a,r3
      00083B A3               [24] 1824 	inc	dptr
      00083C F0               [24] 1825 	movx	@dptr,a
      00083D ED               [12] 1826 	mov	a,r5
      00083E A3               [24] 1827 	inc	dptr
      00083F F0               [24] 1828 	movx	@dptr,a
      000840 90r00r2B         [24] 1829 	mov	dptr,#_spi_read_PARM_3
      000843 EC               [12] 1830 	mov	a,r4
      000844 F0               [24] 1831 	movx	@dptr,a
      000845 75 82 61         [24] 1832 	mov	dpl,#0x61
      000848 12r04r0F         [24] 1833 	lcall	_spi_read
                                   1834 ;	src/radio.c:297: for(offset = 0; offset < 2; offset++)
      00084B 7C 00            [12] 1835 	mov	r4,#0x00
      00084D 7D 00            [12] 1836 	mov	r5,#0x00
      00084F                       1837 00238$:
                                   1838 ;	src/radio.c:300: if(offset == 1)
      00084F BC 01 74         [24] 1839 	cjne	r4,#0x01,00113$
      000852 BD 00 71         [24] 1840 	cjne	r5,#0x00,00113$
                                   1841 ;	src/radio.c:302: for(x = 31; x >= 0; x--)
      000855 7A 1F            [12] 1842 	mov	r2,#0x1f
      000857 7B 00            [12] 1843 	mov	r3,#0x00
      000859                       1844 00230$:
                                   1845 ;	src/radio.c:304: if(x > 0) payload[x] = payload[x - 1] << 7 | payload[x] >> 1;
      000859 C3               [12] 1846 	clr	c
      00085A E4               [12] 1847 	clr	a
      00085B 9A               [12] 1848 	subb	a,r2
      00085C 74 80            [12] 1849 	mov	a,#(0x00 ^ 0x80)
      00085E 8B F0            [24] 1850 	mov	b,r3
      000860 63 F0 80         [24] 1851 	xrl	b,#0x80
      000863 95 F0            [12] 1852 	subb	a,b
      000865 50 3A            [24] 1853 	jnc	00109$
      000867 C0 04            [24] 1854 	push	ar4
      000869 C0 05            [24] 1855 	push	ar5
      00086B EA               [12] 1856 	mov	a,r2
      00086C 24r47            [12] 1857 	add	a,#_handle_radio_request_payload_262144_84
      00086E F8               [12] 1858 	mov	r0,a
      00086F EB               [12] 1859 	mov	a,r3
      000870 34s00            [12] 1860 	addc	a,#(_handle_radio_request_payload_262144_84 >> 8)
      000872 F9               [12] 1861 	mov	r1,a
      000873 8A 05            [24] 1862 	mov	ar5,r2
      000875 1D               [12] 1863 	dec	r5
      000876 ED               [12] 1864 	mov	a,r5
      000877 33               [12] 1865 	rlc	a
      000878 95 E0            [12] 1866 	subb	a,acc
      00087A FC               [12] 1867 	mov	r4,a
      00087B ED               [12] 1868 	mov	a,r5
      00087C 24r47            [12] 1869 	add	a,#_handle_radio_request_payload_262144_84
      00087E F5 82            [12] 1870 	mov	dpl,a
      000880 EC               [12] 1871 	mov	a,r4
      000881 34s00            [12] 1872 	addc	a,#(_handle_radio_request_payload_262144_84 >> 8)
      000883 F5 83            [12] 1873 	mov	dph,a
      000885 E0               [24] 1874 	movx	a,@dptr
      000886 03               [12] 1875 	rr	a
      000887 54 80            [12] 1876 	anl	a,#0x80
      000889 FD               [12] 1877 	mov	r5,a
      00088A 88 82            [24] 1878 	mov	dpl,r0
      00088C 89 83            [24] 1879 	mov	dph,r1
      00088E E0               [24] 1880 	movx	a,@dptr
      00088F C3               [12] 1881 	clr	c
      000890 13               [12] 1882 	rrc	a
      000891 FC               [12] 1883 	mov	r4,a
      000892 ED               [12] 1884 	mov	a,r5
      000893 42 04            [12] 1885 	orl	ar4,a
      000895 88 82            [24] 1886 	mov	dpl,r0
      000897 89 83            [24] 1887 	mov	dph,r1
      000899 EC               [12] 1888 	mov	a,r4
      00089A F0               [24] 1889 	movx	@dptr,a
      00089B D0 05            [24] 1890 	pop	ar5
      00089D D0 04            [24] 1891 	pop	ar4
      00089F 80 1C            [24] 1892 	sjmp	00231$
      0008A1                       1893 00109$:
                                   1894 ;	src/radio.c:305: else payload[x] = payload[x] >> 1;
      0008A1 C0 04            [24] 1895 	push	ar4
      0008A3 C0 05            [24] 1896 	push	ar5
      0008A5 EA               [12] 1897 	mov	a,r2
      0008A6 24r47            [12] 1898 	add	a,#_handle_radio_request_payload_262144_84
      0008A8 F8               [12] 1899 	mov	r0,a
      0008A9 EB               [12] 1900 	mov	a,r3
      0008AA 34s00            [12] 1901 	addc	a,#(_handle_radio_request_payload_262144_84 >> 8)
      0008AC F9               [12] 1902 	mov	r1,a
      0008AD 88 82            [24] 1903 	mov	dpl,r0
      0008AF 89 83            [24] 1904 	mov	dph,r1
      0008B1 E0               [24] 1905 	movx	a,@dptr
      0008B2 C3               [12] 1906 	clr	c
      0008B3 13               [12] 1907 	rrc	a
      0008B4 88 82            [24] 1908 	mov	dpl,r0
      0008B6 89 83            [24] 1909 	mov	dph,r1
      0008B8 F0               [24] 1910 	movx	@dptr,a
                                   1911 ;	src/radio.c:583: in1bc = 1;
      0008B9 D0 05            [24] 1912 	pop	ar5
      0008BB D0 04            [24] 1913 	pop	ar4
                                   1914 ;	src/radio.c:305: else payload[x] = payload[x] >> 1;
      0008BD                       1915 00231$:
                                   1916 ;	src/radio.c:302: for(x = 31; x >= 0; x--)
      0008BD 1A               [12] 1917 	dec	r2
      0008BE BA FF 01         [24] 1918 	cjne	r2,#0xff,00540$
      0008C1 1B               [12] 1919 	dec	r3
      0008C2                       1920 00540$:
      0008C2 EB               [12] 1921 	mov	a,r3
      0008C3 30 E7 93         [24] 1922 	jnb	acc.7,00230$
      0008C6                       1923 00113$:
                                   1924 ;	src/radio.c:310: payload_length = payload[5] >> 2;
      0008C6 C0 04            [24] 1925 	push	ar4
      0008C8 C0 05            [24] 1926 	push	ar5
      0008CA 90r00r4C         [24] 1927 	mov	dptr,#(_handle_radio_request_payload_262144_84 + 0x0005)
      0008CD E0               [24] 1928 	movx	a,@dptr
      0008CE 03               [12] 1929 	rr	a
      0008CF 03               [12] 1930 	rr	a
      0008D0 54 3F            [12] 1931 	anl	a,#0x3f
      0008D2 FB               [12] 1932 	mov	r3,a
                                   1933 ;	src/radio.c:315: if(payload_length <= (pm_payload_length-9) + pm_prefix_length)
      0008D3 90r00r09         [24] 1934 	mov	dptr,#_pm_payload_length
      0008D6 E0               [24] 1935 	movx	a,@dptr
      0008D7 7A 00            [12] 1936 	mov	r2,#0x00
      0008D9 24 F7            [12] 1937 	add	a,#0xf7
      0008DB F9               [12] 1938 	mov	r1,a
      0008DC EA               [12] 1939 	mov	a,r2
      0008DD 34 FF            [12] 1940 	addc	a,#0xff
      0008DF FA               [12] 1941 	mov	r2,a
      0008E0 90r00r02         [24] 1942 	mov	dptr,#_pm_prefix_length
      0008E3 E0               [24] 1943 	movx	a,@dptr
      0008E4 F8               [12] 1944 	mov	r0,a
      0008E5 A3               [24] 1945 	inc	dptr
      0008E6 E0               [24] 1946 	movx	a,@dptr
      0008E7 FD               [12] 1947 	mov	r5,a
      0008E8 E8               [12] 1948 	mov	a,r0
      0008E9 29               [12] 1949 	add	a,r1
      0008EA F9               [12] 1950 	mov	r1,a
      0008EB ED               [12] 1951 	mov	a,r5
      0008EC 3A               [12] 1952 	addc	a,r2
      0008ED FA               [12] 1953 	mov	r2,a
      0008EE 8B*0E            [24] 1954 	mov	_handle_radio_request_sloc1_1_0,r3
      0008F0 75*0F 00         [24] 1955 	mov	(_handle_radio_request_sloc1_1_0 + 1),#0x00
      0008F3 C3               [12] 1956 	clr	c
      0008F4 E9               [12] 1957 	mov	a,r1
      0008F5 95*0E            [12] 1958 	subb	a,_handle_radio_request_sloc1_1_0
      0008F7 EA               [12] 1959 	mov	a,r2
      0008F8 64 80            [12] 1960 	xrl	a,#0x80
      0008FA 85*0F F0         [24] 1961 	mov	b,(_handle_radio_request_sloc1_1_0 + 1)
      0008FD 63 F0 80         [24] 1962 	xrl	b,#0x80
      000900 95 F0            [12] 1963 	subb	a,b
      000902 D0 05            [24] 1964 	pop	ar5
      000904 D0 04            [24] 1965 	pop	ar4
      000906 50 03            [24] 1966 	jnc	00542$
      000908 02r0Br17         [24] 1967 	ljmp	00239$
      00090B                       1968 00542$:
                                   1969 ;	src/radio.c:318: crc_given = (payload[6 + payload_length] << 9) | ((payload[7 + payload_length]) << 1);
      00090B C0 04            [24] 1970 	push	ar4
      00090D C0 05            [24] 1971 	push	ar5
      00090F 74 06            [12] 1972 	mov	a,#0x06
      000911 2B               [12] 1973 	add	a,r3
      000912 F9               [12] 1974 	mov	r1,a
      000913 33               [12] 1975 	rlc	a
      000914 95 E0            [12] 1976 	subb	a,acc
      000916 FA               [12] 1977 	mov	r2,a
      000917 E9               [12] 1978 	mov	a,r1
      000918 24r47            [12] 1979 	add	a,#_handle_radio_request_payload_262144_84
      00091A F5 82            [12] 1980 	mov	dpl,a
      00091C EA               [12] 1981 	mov	a,r2
      00091D 34s00            [12] 1982 	addc	a,#(_handle_radio_request_payload_262144_84 >> 8)
      00091F F5 83            [12] 1983 	mov	dph,a
      000921 E0               [24] 1984 	movx	a,@dptr
      000922 F9               [12] 1985 	mov	r1,a
      000923 7A 00            [12] 1986 	mov	r2,#0x00
      000925 29               [12] 1987 	add	a,r1
      000926 CA               [12] 1988 	xch	a,r2
      000927 79 00            [12] 1989 	mov	r1,#0x00
      000929 74 07            [12] 1990 	mov	a,#0x07
      00092B 2B               [12] 1991 	add	a,r3
      00092C F8               [12] 1992 	mov	r0,a
      00092D 33               [12] 1993 	rlc	a
      00092E 95 E0            [12] 1994 	subb	a,acc
      000930 FD               [12] 1995 	mov	r5,a
      000931 E8               [12] 1996 	mov	a,r0
      000932 24r47            [12] 1997 	add	a,#_handle_radio_request_payload_262144_84
      000934 F5 82            [12] 1998 	mov	dpl,a
      000936 ED               [12] 1999 	mov	a,r5
      000937 34s00            [12] 2000 	addc	a,#(_handle_radio_request_payload_262144_84 >> 8)
      000939 F5 83            [12] 2001 	mov	dph,a
      00093B E0               [24] 2002 	movx	a,@dptr
      00093C 7C 00            [12] 2003 	mov	r4,#0x00
      00093E 25 E0            [12] 2004 	add	a,acc
      000940 FD               [12] 2005 	mov	r5,a
      000941 EC               [12] 2006 	mov	a,r4
      000942 33               [12] 2007 	rlc	a
      000943 FC               [12] 2008 	mov	r4,a
      000944 ED               [12] 2009 	mov	a,r5
      000945 42 01            [12] 2010 	orl	ar1,a
      000947 EC               [12] 2011 	mov	a,r4
      000948 42 02            [12] 2012 	orl	ar2,a
                                   2013 ;	src/radio.c:319: crc_given = (crc_given << 8) | (crc_given >> 8);
      00094A 8A*11            [24] 2014 	mov	_handle_radio_request_sloc2_1_0,r2
      00094C 89*12            [24] 2015 	mov	(_handle_radio_request_sloc2_1_0 + 1),r1
      00094E 90r00r45         [24] 2016 	mov	dptr,#_handle_radio_request_crc_given_262144_84
      000951 E5*11            [12] 2017 	mov	a,_handle_radio_request_sloc2_1_0
      000953 F0               [24] 2018 	movx	@dptr,a
      000954 E5*12            [12] 2019 	mov	a,(_handle_radio_request_sloc2_1_0 + 1)
      000956 A3               [24] 2020 	inc	dptr
      000957 F0               [24] 2021 	movx	@dptr,a
                                   2022 ;	src/radio.c:320: if(payload[8 + payload_length] & 0x80) crc_given |= 0x100;
      000958 74 08            [12] 2023 	mov	a,#0x08
      00095A 2B               [12] 2024 	add	a,r3
      00095B FD               [12] 2025 	mov	r5,a
      00095C 33               [12] 2026 	rlc	a
      00095D 95 E0            [12] 2027 	subb	a,acc
      00095F FC               [12] 2028 	mov	r4,a
      000960 ED               [12] 2029 	mov	a,r5
      000961 24r47            [12] 2030 	add	a,#_handle_radio_request_payload_262144_84
      000963 F5 82            [12] 2031 	mov	dpl,a
      000965 EC               [12] 2032 	mov	a,r4
      000966 34s00            [12] 2033 	addc	a,#(_handle_radio_request_payload_262144_84 >> 8)
      000968 F5 83            [12] 2034 	mov	dph,a
      00096A E0               [24] 2035 	movx	a,@dptr
      00096B D0 05            [24] 2036 	pop	ar5
      00096D D0 04            [24] 2037 	pop	ar4
      00096F 30 E7 0F         [24] 2038 	jnb	acc.7,00115$
      000972 A9*11            [24] 2039 	mov	r1,_handle_radio_request_sloc2_1_0
      000974 AA*12            [24] 2040 	mov	r2,(_handle_radio_request_sloc2_1_0 + 1)
      000976 43 02 01         [24] 2041 	orl	ar2,#0x01
      000979 90r00r45         [24] 2042 	mov	dptr,#_handle_radio_request_crc_given_262144_84
      00097C E9               [12] 2043 	mov	a,r1
      00097D F0               [24] 2044 	movx	@dptr,a
      00097E EA               [12] 2045 	mov	a,r2
      00097F A3               [24] 2046 	inc	dptr
      000980 F0               [24] 2047 	movx	@dptr,a
      000981                       2048 00115$:
                                   2049 ;	src/radio.c:323: crc = 0xFFFF;
      000981 90r00r43         [24] 2050 	mov	dptr,#_handle_radio_request_crc_262144_84
      000984 74 FF            [12] 2051 	mov	a,#0xff
      000986 F0               [24] 2052 	movx	@dptr,a
      000987 A3               [24] 2053 	inc	dptr
      000988 F0               [24] 2054 	movx	@dptr,a
                                   2055 ;	src/radio.c:324: for(x = 0; x < 6 + payload_length; x++) crc = crc_update(crc, payload[x], 8);
      000989 74 06            [12] 2056 	mov	a,#0x06
      00098B 25*0E            [12] 2057 	add	a,_handle_radio_request_sloc1_1_0
      00098D F9               [12] 2058 	mov	r1,a
      00098E E4               [12] 2059 	clr	a
      00098F 35*0F            [12] 2060 	addc	a,(_handle_radio_request_sloc1_1_0 + 1)
      000991 FA               [12] 2061 	mov	r2,a
      000992 E4               [12] 2062 	clr	a
      000993 F5*11            [12] 2063 	mov	_handle_radio_request_sloc2_1_0,a
      000995 F5*12            [12] 2064 	mov	(_handle_radio_request_sloc2_1_0 + 1),a
      000997                       2065 00233$:
      000997 C3               [12] 2066 	clr	c
      000998 E5*11            [12] 2067 	mov	a,_handle_radio_request_sloc2_1_0
      00099A 99               [12] 2068 	subb	a,r1
      00099B E5*12            [12] 2069 	mov	a,(_handle_radio_request_sloc2_1_0 + 1)
      00099D 64 80            [12] 2070 	xrl	a,#0x80
      00099F 8A F0            [24] 2071 	mov	b,r2
      0009A1 63 F0 80         [24] 2072 	xrl	b,#0x80
      0009A4 95 F0            [12] 2073 	subb	a,b
      0009A6 50 5A            [24] 2074 	jnc	00116$
      0009A8 C0 04            [24] 2075 	push	ar4
      0009AA C0 05            [24] 2076 	push	ar5
      0009AC 90r00r43         [24] 2077 	mov	dptr,#_handle_radio_request_crc_262144_84
      0009AF E0               [24] 2078 	movx	a,@dptr
      0009B0 F8               [12] 2079 	mov	r0,a
      0009B1 A3               [24] 2080 	inc	dptr
      0009B2 E0               [24] 2081 	movx	a,@dptr
      0009B3 FD               [12] 2082 	mov	r5,a
      0009B4 E5*11            [12] 2083 	mov	a,_handle_radio_request_sloc2_1_0
      0009B6 24r47            [12] 2084 	add	a,#_handle_radio_request_payload_262144_84
      0009B8 F5 82            [12] 2085 	mov	dpl,a
      0009BA E5*12            [12] 2086 	mov	a,(_handle_radio_request_sloc2_1_0 + 1)
      0009BC 34s00            [12] 2087 	addc	a,#(_handle_radio_request_payload_262144_84 >> 8)
      0009BE F5 83            [12] 2088 	mov	dph,a
      0009C0 E0               [24] 2089 	movx	a,@dptr
      0009C1 FC               [12] 2090 	mov	r4,a
      0009C2 90r00r31         [24] 2091 	mov	dptr,#_crc_update_PARM_2
      0009C5 F0               [24] 2092 	movx	@dptr,a
      0009C6 90r00r32         [24] 2093 	mov	dptr,#_crc_update_PARM_3
      0009C9 74 08            [12] 2094 	mov	a,#0x08
      0009CB F0               [24] 2095 	movx	@dptr,a
      0009CC 88 82            [24] 2096 	mov	dpl,r0
      0009CE 8D 83            [24] 2097 	mov	dph,r5
      0009D0 C0 05            [24] 2098 	push	ar5
      0009D2 C0 04            [24] 2099 	push	ar4
      0009D4 C0 03            [24] 2100 	push	ar3
      0009D6 C0 02            [24] 2101 	push	ar2
      0009D8 C0 01            [24] 2102 	push	ar1
      0009DA 12r04rCF         [24] 2103 	lcall	_crc_update
      0009DD E5 82            [12] 2104 	mov	a,dpl
      0009DF 85 83 F0         [24] 2105 	mov	b,dph
      0009E2 D0 01            [24] 2106 	pop	ar1
      0009E4 D0 02            [24] 2107 	pop	ar2
      0009E6 D0 03            [24] 2108 	pop	ar3
      0009E8 D0 04            [24] 2109 	pop	ar4
      0009EA D0 05            [24] 2110 	pop	ar5
      0009EC 90r00r43         [24] 2111 	mov	dptr,#_handle_radio_request_crc_262144_84
      0009EF F0               [24] 2112 	movx	@dptr,a
      0009F0 E5 F0            [12] 2113 	mov	a,b
      0009F2 A3               [24] 2114 	inc	dptr
      0009F3 F0               [24] 2115 	movx	@dptr,a
      0009F4 05*11            [12] 2116 	inc	_handle_radio_request_sloc2_1_0
      0009F6 E4               [12] 2117 	clr	a
      0009F7 B5*11 02         [24] 2118 	cjne	a,_handle_radio_request_sloc2_1_0,00545$
      0009FA 05*12            [12] 2119 	inc	(_handle_radio_request_sloc2_1_0 + 1)
      0009FC                       2120 00545$:
      0009FC D0 05            [24] 2121 	pop	ar5
      0009FE D0 04            [24] 2122 	pop	ar4
      000A00 80 95            [24] 2123 	sjmp	00233$
      000A02                       2124 00116$:
                                   2125 ;	src/radio.c:325: crc = crc_update(crc, payload[6 + payload_length] & 0x80, 1);
      000A02 C0 04            [24] 2126 	push	ar4
      000A04 C0 05            [24] 2127 	push	ar5
      000A06 90r00r43         [24] 2128 	mov	dptr,#_handle_radio_request_crc_262144_84
      000A09 E0               [24] 2129 	movx	a,@dptr
      000A0A F9               [12] 2130 	mov	r1,a
      000A0B A3               [24] 2131 	inc	dptr
      000A0C E0               [24] 2132 	movx	a,@dptr
      000A0D FA               [12] 2133 	mov	r2,a
      000A0E 74 06            [12] 2134 	mov	a,#0x06
      000A10 2B               [12] 2135 	add	a,r3
      000A11 F8               [12] 2136 	mov	r0,a
      000A12 33               [12] 2137 	rlc	a
      000A13 95 E0            [12] 2138 	subb	a,acc
      000A15 FD               [12] 2139 	mov	r5,a
      000A16 E8               [12] 2140 	mov	a,r0
      000A17 24r47            [12] 2141 	add	a,#_handle_radio_request_payload_262144_84
      000A19 F5 82            [12] 2142 	mov	dpl,a
      000A1B ED               [12] 2143 	mov	a,r5
      000A1C 34s00            [12] 2144 	addc	a,#(_handle_radio_request_payload_262144_84 >> 8)
      000A1E F5 83            [12] 2145 	mov	dph,a
      000A20 E0               [24] 2146 	movx	a,@dptr
      000A21 FD               [12] 2147 	mov	r5,a
      000A22 90r00r31         [24] 2148 	mov	dptr,#_crc_update_PARM_2
      000A25 74 80            [12] 2149 	mov	a,#0x80
      000A27 5D               [12] 2150 	anl	a,r5
      000A28 F0               [24] 2151 	movx	@dptr,a
      000A29 90r00r32         [24] 2152 	mov	dptr,#_crc_update_PARM_3
      000A2C 74 01            [12] 2153 	mov	a,#0x01
      000A2E F0               [24] 2154 	movx	@dptr,a
      000A2F 89 82            [24] 2155 	mov	dpl,r1
      000A31 8A 83            [24] 2156 	mov	dph,r2
      000A33 C0 03            [24] 2157 	push	ar3
      000A35 12r04rCF         [24] 2158 	lcall	_crc_update
      000A38 AC 82            [24] 2159 	mov	r4,dpl
      000A3A AD 83            [24] 2160 	mov	r5,dph
      000A3C D0 03            [24] 2161 	pop	ar3
                                   2162 ;	src/radio.c:326: crc = (crc << 8) | (crc >> 8);
      000A3E EC               [12] 2163 	mov	a,r4
      000A3F 8D 04            [24] 2164 	mov	ar4,r5
      000A41 FD               [12] 2165 	mov	r5,a
                                   2166 ;	src/radio.c:329: if(crc == crc_given)
      000A42 90r00r45         [24] 2167 	mov	dptr,#_handle_radio_request_crc_given_262144_84
      000A45 E0               [24] 2168 	movx	a,@dptr
      000A46 F9               [12] 2169 	mov	r1,a
      000A47 A3               [24] 2170 	inc	dptr
      000A48 E0               [24] 2171 	movx	a,@dptr
      000A49 FA               [12] 2172 	mov	r2,a
      000A4A EC               [12] 2173 	mov	a,r4
      000A4B B5 01 06         [24] 2174 	cjne	a,ar1,00546$
      000A4E ED               [12] 2175 	mov	a,r5
      000A4F B5 02 02         [24] 2176 	cjne	a,ar2,00546$
      000A52 80 07            [24] 2177 	sjmp	00547$
      000A54                       2178 00546$:
      000A54 D0 05            [24] 2179 	pop	ar5
      000A56 D0 04            [24] 2180 	pop	ar4
      000A58 02r0Br17         [24] 2181 	ljmp	00239$
      000A5B                       2182 00547$:
      000A5B D0 05            [24] 2183 	pop	ar5
      000A5D D0 04            [24] 2184 	pop	ar4
                                   2185 ;	src/radio.c:332: memcpy(in1buf, payload, 5);
      000A5F 90r00r00         [24] 2186 	mov	dptr,#___memcpy_PARM_2
      000A62 74r47            [12] 2187 	mov	a,#_handle_radio_request_payload_262144_84
      000A64 F0               [24] 2188 	movx	@dptr,a
      000A65 74s00            [12] 2189 	mov	a,#(_handle_radio_request_payload_262144_84 >> 8)
      000A67 A3               [24] 2190 	inc	dptr
      000A68 F0               [24] 2191 	movx	@dptr,a
      000A69 E4               [12] 2192 	clr	a
      000A6A A3               [24] 2193 	inc	dptr
      000A6B F0               [24] 2194 	movx	@dptr,a
      000A6C 90r00r00         [24] 2195 	mov	dptr,#___memcpy_PARM_3
      000A6F 74 05            [12] 2196 	mov	a,#0x05
      000A71 F0               [24] 2197 	movx	@dptr,a
      000A72 E4               [12] 2198 	clr	a
      000A73 A3               [24] 2199 	inc	dptr
      000A74 F0               [24] 2200 	movx	@dptr,a
      000A75 90 C6 80         [24] 2201 	mov	dptr,#_in1buf
      000A78 75 F0 00         [24] 2202 	mov	b,#0x00
      000A7B C0 03            [24] 2203 	push	ar3
      000A7D 12r00r00         [24] 2204 	lcall	___memcpy
      000A80 D0 03            [24] 2205 	pop	ar3
                                   2206 ;	src/radio.c:335: for(x = 0; x < payload_length + 3; x++)
      000A82 74 03            [12] 2207 	mov	a,#0x03
      000A84 25*0E            [12] 2208 	add	a,_handle_radio_request_sloc1_1_0
      000A86 F9               [12] 2209 	mov	r1,a
      000A87 E4               [12] 2210 	clr	a
      000A88 35*0F            [12] 2211 	addc	a,(_handle_radio_request_sloc1_1_0 + 1)
      000A8A FA               [12] 2212 	mov	r2,a
      000A8B E4               [12] 2213 	clr	a
      000A8C F5*11            [12] 2214 	mov	_handle_radio_request_sloc2_1_0,a
      000A8E F5*12            [12] 2215 	mov	(_handle_radio_request_sloc2_1_0 + 1),a
      000A90                       2216 00236$:
      000A90 C3               [12] 2217 	clr	c
      000A91 E5*11            [12] 2218 	mov	a,_handle_radio_request_sloc2_1_0
      000A93 99               [12] 2219 	subb	a,r1
      000A94 E5*12            [12] 2220 	mov	a,(_handle_radio_request_sloc2_1_0 + 1)
      000A96 64 80            [12] 2221 	xrl	a,#0x80
      000A98 8A F0            [24] 2222 	mov	b,r2
      000A9A 63 F0 80         [24] 2223 	xrl	b,#0x80
      000A9D 95 F0            [12] 2224 	subb	a,b
      000A9F 50 5C            [24] 2225 	jnc	00117$
                                   2226 ;	src/radio.c:336: in1buf[5+x] = ((payload[6 + x] << 1) & 0xFF) | (payload[7 + x] >> 7);
      000AA1 C0 01            [24] 2227 	push	ar1
      000AA3 C0 02            [24] 2228 	push	ar2
      000AA5 A8*11            [24] 2229 	mov	r0,_handle_radio_request_sloc2_1_0
      000AA7 74 05            [12] 2230 	mov	a,#0x05
      000AA9 28               [12] 2231 	add	a,r0
      000AAA F9               [12] 2232 	mov	r1,a
      000AAB 33               [12] 2233 	rlc	a
      000AAC 95 E0            [12] 2234 	subb	a,acc
      000AAE FA               [12] 2235 	mov	r2,a
      000AAF E9               [12] 2236 	mov	a,r1
      000AB0 24 80            [12] 2237 	add	a,#_in1buf
      000AB2 F5*0E            [12] 2238 	mov	_handle_radio_request_sloc1_1_0,a
      000AB4 EA               [12] 2239 	mov	a,r2
      000AB5 34 C6            [12] 2240 	addc	a,#(_in1buf >> 8)
      000AB7 F5*0F            [12] 2241 	mov	(_handle_radio_request_sloc1_1_0 + 1),a
      000AB9 74 06            [12] 2242 	mov	a,#0x06
      000ABB 28               [12] 2243 	add	a,r0
      000ABC F9               [12] 2244 	mov	r1,a
      000ABD 33               [12] 2245 	rlc	a
      000ABE 95 E0            [12] 2246 	subb	a,acc
      000AC0 FA               [12] 2247 	mov	r2,a
      000AC1 E9               [12] 2248 	mov	a,r1
      000AC2 24r47            [12] 2249 	add	a,#_handle_radio_request_payload_262144_84
      000AC4 F5 82            [12] 2250 	mov	dpl,a
      000AC6 EA               [12] 2251 	mov	a,r2
      000AC7 34s00            [12] 2252 	addc	a,#(_handle_radio_request_payload_262144_84 >> 8)
      000AC9 F5 83            [12] 2253 	mov	dph,a
      000ACB E0               [24] 2254 	movx	a,@dptr
      000ACC 25 E0            [12] 2255 	add	a,acc
      000ACE FA               [12] 2256 	mov	r2,a
      000ACF 74 07            [12] 2257 	mov	a,#0x07
      000AD1 28               [12] 2258 	add	a,r0
      000AD2 F8               [12] 2259 	mov	r0,a
      000AD3 33               [12] 2260 	rlc	a
      000AD4 95 E0            [12] 2261 	subb	a,acc
      000AD6 F9               [12] 2262 	mov	r1,a
      000AD7 E8               [12] 2263 	mov	a,r0
      000AD8 24r47            [12] 2264 	add	a,#_handle_radio_request_payload_262144_84
      000ADA F5 82            [12] 2265 	mov	dpl,a
      000ADC E9               [12] 2266 	mov	a,r1
      000ADD 34s00            [12] 2267 	addc	a,#(_handle_radio_request_payload_262144_84 >> 8)
      000ADF F5 83            [12] 2268 	mov	dph,a
      000AE1 E0               [24] 2269 	movx	a,@dptr
      000AE2 23               [12] 2270 	rl	a
      000AE3 54 01            [12] 2271 	anl	a,#0x01
      000AE5 42 02            [12] 2272 	orl	ar2,a
      000AE7 85*0E 82         [24] 2273 	mov	dpl,_handle_radio_request_sloc1_1_0
      000AEA 85*0F 83         [24] 2274 	mov	dph,(_handle_radio_request_sloc1_1_0 + 1)
      000AED EA               [12] 2275 	mov	a,r2
      000AEE F0               [24] 2276 	movx	@dptr,a
                                   2277 ;	src/radio.c:335: for(x = 0; x < payload_length + 3; x++)
      000AEF 05*11            [12] 2278 	inc	_handle_radio_request_sloc2_1_0
      000AF1 E4               [12] 2279 	clr	a
      000AF2 B5*11 02         [24] 2280 	cjne	a,_handle_radio_request_sloc2_1_0,00549$
      000AF5 05*12            [12] 2281 	inc	(_handle_radio_request_sloc2_1_0 + 1)
      000AF7                       2282 00549$:
      000AF7 D0 02            [24] 2283 	pop	ar2
      000AF9 D0 01            [24] 2284 	pop	ar1
      000AFB 80 93            [24] 2285 	sjmp	00236$
      000AFD                       2286 00117$:
                                   2287 ;	src/radio.c:337: in1bc = 5 + payload_length;
      000AFD 74 05            [12] 2288 	mov	a,#0x05
      000AFF 2B               [12] 2289 	add	a,r3
      000B00 90 C7 B7         [24] 2290 	mov	dptr,#0xc7b7
      000B03 F0               [24] 2291 	movx	@dptr,a
                                   2292 ;	src/radio.c:338: flush_rx();
      000B04 90r00r23         [24] 2293 	mov	dptr,#_spi_write_PARM_2
      000B07 E4               [12] 2294 	clr	a
      000B08 F0               [24] 2295 	movx	@dptr,a
      000B09 A3               [24] 2296 	inc	dptr
      000B0A F0               [24] 2297 	movx	@dptr,a
      000B0B A3               [24] 2298 	inc	dptr
      000B0C F0               [24] 2299 	movx	@dptr,a
      000B0D 90r00r26         [24] 2300 	mov	dptr,#_spi_write_PARM_3
      000B10 F0               [24] 2301 	movx	@dptr,a
      000B11 75 82 E2         [24] 2302 	mov	dpl,#0xe2
                                   2303 ;	src/radio.c:339: return;
      000B14 02r03r9B         [24] 2304 	ljmp	_spi_write
      000B17                       2305 00239$:
                                   2306 ;	src/radio.c:297: for(offset = 0; offset < 2; offset++)
      000B17 0C               [12] 2307 	inc	r4
      000B18 BC 00 01         [24] 2308 	cjne	r4,#0x00,00550$
      000B1B 0D               [12] 2309 	inc	r5
      000B1C                       2310 00550$:
      000B1C C3               [12] 2311 	clr	c
      000B1D EC               [12] 2312 	mov	a,r4
      000B1E 94 02            [12] 2313 	subb	a,#0x02
      000B20 ED               [12] 2314 	mov	a,r5
      000B21 64 80            [12] 2315 	xrl	a,#0x80
      000B23 94 80            [12] 2316 	subb	a,#0x80
      000B25 50 03            [24] 2317 	jnc	00551$
      000B27 02r08r4F         [24] 2318 	ljmp	00238$
      000B2A                       2319 00551$:
      000B2A 02r0BrE5         [24] 2320 	ljmp	00133$
      000B2D                       2321 00127$:
                                   2322 ;	src/radio.c:346: else if(radio_mode == promiscuous_generic)
      000B2D BE 02 02         [24] 2323 	cjne	r6,#0x02,00552$
      000B30 80 03            [24] 2324 	sjmp	00553$
      000B32                       2325 00552$:
      000B32 02r0BrE5         [24] 2326 	ljmp	00133$
      000B35                       2327 00553$:
                                   2328 ;	src/radio.c:352: for(x = 0; x < pm_prefix_length; x++) payload[pm_prefix_length - x - 1] = pm_prefix[x];
      000B35 7D 00            [12] 2329 	mov	r5,#0x00
      000B37 7E 00            [12] 2330 	mov	r6,#0x00
      000B39                       2331 00241$:
      000B39 90r00r02         [24] 2332 	mov	dptr,#_pm_prefix_length
      000B3C E0               [24] 2333 	movx	a,@dptr
      000B3D FB               [12] 2334 	mov	r3,a
      000B3E A3               [24] 2335 	inc	dptr
      000B3F E0               [24] 2336 	movx	a,@dptr
      000B40 FC               [12] 2337 	mov	r4,a
      000B41 C3               [12] 2338 	clr	c
      000B42 ED               [12] 2339 	mov	a,r5
      000B43 9B               [12] 2340 	subb	a,r3
      000B44 EE               [12] 2341 	mov	a,r6
      000B45 64 80            [12] 2342 	xrl	a,#0x80
      000B47 8C F0            [24] 2343 	mov	b,r4
      000B49 63 F0 80         [24] 2344 	xrl	b,#0x80
      000B4C 95 F0            [12] 2345 	subb	a,b
      000B4E 50 2C            [24] 2346 	jnc	00123$
      000B50 8B 02            [24] 2347 	mov	ar2,r3
      000B52 8D 01            [24] 2348 	mov	ar1,r5
      000B54 EA               [12] 2349 	mov	a,r2
      000B55 C3               [12] 2350 	clr	c
      000B56 99               [12] 2351 	subb	a,r1
      000B57 14               [12] 2352 	dec	a
      000B58 F9               [12] 2353 	mov	r1,a
      000B59 33               [12] 2354 	rlc	a
      000B5A 95 E0            [12] 2355 	subb	a,acc
      000B5C FA               [12] 2356 	mov	r2,a
      000B5D E9               [12] 2357 	mov	a,r1
      000B5E 24r6C            [12] 2358 	add	a,#_handle_radio_request_payload_262144_95
      000B60 F9               [12] 2359 	mov	r1,a
      000B61 EA               [12] 2360 	mov	a,r2
      000B62 34s00            [12] 2361 	addc	a,#(_handle_radio_request_payload_262144_95 >> 8)
      000B64 FA               [12] 2362 	mov	r2,a
      000B65 ED               [12] 2363 	mov	a,r5
      000B66 24r04            [12] 2364 	add	a,#_pm_prefix
      000B68 F5 82            [12] 2365 	mov	dpl,a
      000B6A EE               [12] 2366 	mov	a,r6
      000B6B 34s00            [12] 2367 	addc	a,#(_pm_prefix >> 8)
      000B6D F5 83            [12] 2368 	mov	dph,a
      000B6F E0               [24] 2369 	movx	a,@dptr
      000B70 89 82            [24] 2370 	mov	dpl,r1
      000B72 8A 83            [24] 2371 	mov	dph,r2
      000B74 F0               [24] 2372 	movx	@dptr,a
      000B75 0D               [12] 2373 	inc	r5
      000B76 BD 00 C0         [24] 2374 	cjne	r5,#0x00,00241$
      000B79 0E               [12] 2375 	inc	r6
      000B7A 80 BD            [24] 2376 	sjmp	00241$
      000B7C                       2377 00123$:
                                   2378 ;	src/radio.c:353: read_register(R_RX_PAYLOAD, &payload[pm_prefix_length], pm_payload_length);
      000B7C EB               [12] 2379 	mov	a,r3
      000B7D 24r6C            [12] 2380 	add	a,#_handle_radio_request_payload_262144_95
      000B7F FB               [12] 2381 	mov	r3,a
      000B80 EC               [12] 2382 	mov	a,r4
      000B81 34s00            [12] 2383 	addc	a,#(_handle_radio_request_payload_262144_95 >> 8)
      000B83 FC               [12] 2384 	mov	r4,a
      000B84 7E 00            [12] 2385 	mov	r6,#0x00
      000B86 90r00r09         [24] 2386 	mov	dptr,#_pm_payload_length
      000B89 E0               [24] 2387 	movx	a,@dptr
      000B8A FD               [12] 2388 	mov	r5,a
      000B8B 90r00r28         [24] 2389 	mov	dptr,#_spi_read_PARM_2
      000B8E EB               [12] 2390 	mov	a,r3
      000B8F F0               [24] 2391 	movx	@dptr,a
      000B90 EC               [12] 2392 	mov	a,r4
      000B91 A3               [24] 2393 	inc	dptr
      000B92 F0               [24] 2394 	movx	@dptr,a
      000B93 EE               [12] 2395 	mov	a,r6
      000B94 A3               [24] 2396 	inc	dptr
      000B95 F0               [24] 2397 	movx	@dptr,a
      000B96 90r00r2B         [24] 2398 	mov	dptr,#_spi_read_PARM_3
      000B99 ED               [12] 2399 	mov	a,r5
      000B9A F0               [24] 2400 	movx	@dptr,a
      000B9B 75 82 61         [24] 2401 	mov	dpl,#0x61
      000B9E 12r04r0F         [24] 2402 	lcall	_spi_read
                                   2403 ;	src/radio.c:356: memcpy(in1buf, payload, pm_prefix_length + pm_payload_length);
      000BA1 90r00r09         [24] 2404 	mov	dptr,#_pm_payload_length
      000BA4 E0               [24] 2405 	movx	a,@dptr
      000BA5 FE               [12] 2406 	mov	r6,a
      000BA6 7D 00            [12] 2407 	mov	r5,#0x00
      000BA8 90r00r02         [24] 2408 	mov	dptr,#_pm_prefix_length
      000BAB E0               [24] 2409 	movx	a,@dptr
      000BAC FB               [12] 2410 	mov	r3,a
      000BAD A3               [24] 2411 	inc	dptr
      000BAE E0               [24] 2412 	movx	a,@dptr
      000BAF FC               [12] 2413 	mov	r4,a
      000BB0 EE               [12] 2414 	mov	a,r6
      000BB1 2B               [12] 2415 	add	a,r3
      000BB2 FE               [12] 2416 	mov	r6,a
      000BB3 ED               [12] 2417 	mov	a,r5
      000BB4 3C               [12] 2418 	addc	a,r4
      000BB5 FD               [12] 2419 	mov	r5,a
      000BB6 90r00r00         [24] 2420 	mov	dptr,#___memcpy_PARM_2
      000BB9 74r6C            [12] 2421 	mov	a,#_handle_radio_request_payload_262144_95
      000BBB F0               [24] 2422 	movx	@dptr,a
      000BBC 74s00            [12] 2423 	mov	a,#(_handle_radio_request_payload_262144_95 >> 8)
      000BBE A3               [24] 2424 	inc	dptr
      000BBF F0               [24] 2425 	movx	@dptr,a
      000BC0 E4               [12] 2426 	clr	a
      000BC1 A3               [24] 2427 	inc	dptr
      000BC2 F0               [24] 2428 	movx	@dptr,a
      000BC3 90r00r00         [24] 2429 	mov	dptr,#___memcpy_PARM_3
      000BC6 EE               [12] 2430 	mov	a,r6
      000BC7 F0               [24] 2431 	movx	@dptr,a
      000BC8 ED               [12] 2432 	mov	a,r5
      000BC9 A3               [24] 2433 	inc	dptr
      000BCA F0               [24] 2434 	movx	@dptr,a
      000BCB 90 C6 80         [24] 2435 	mov	dptr,#_in1buf
      000BCE 75 F0 00         [24] 2436 	mov	b,#0x00
      000BD1 12r00r00         [24] 2437 	lcall	___memcpy
                                   2438 ;	src/radio.c:357: in1bc = pm_prefix_length + pm_payload_length;
      000BD4 90r00r02         [24] 2439 	mov	dptr,#_pm_prefix_length
      000BD7 E0               [24] 2440 	movx	a,@dptr
      000BD8 FD               [12] 2441 	mov	r5,a
      000BD9 A3               [24] 2442 	inc	dptr
      000BDA E0               [24] 2443 	movx	a,@dptr
      000BDB 90r00r09         [24] 2444 	mov	dptr,#_pm_payload_length
      000BDE E0               [24] 2445 	movx	a,@dptr
      000BDF 2D               [12] 2446 	add	a,r5
      000BE0 90 C7 B7         [24] 2447 	mov	dptr,#0xc7b7
      000BE3 F0               [24] 2448 	movx	@dptr,a
                                   2449 ;	src/radio.c:359: return;
      000BE4 22               [24] 2450 	ret
      000BE5                       2451 00133$:
                                   2452 ;	src/radio.c:364: in1bc = 1;
      000BE5 90 C7 B7         [24] 2453 	mov	dptr,#0xc7b7
      000BE8 74 01            [12] 2454 	mov	a,#0x01
      000BEA F0               [24] 2455 	movx	@dptr,a
                                   2456 ;	src/radio.c:365: in1buf[0] = 0xFF;
      000BEB 90 C6 80         [24] 2457 	mov	dptr,#_in1buf
      000BEE 74 FF            [12] 2458 	mov	a,#0xff
      000BF0 F0               [24] 2459 	movx	@dptr,a
                                   2460 ;	src/radio.c:366: return;
      000BF1 22               [24] 2461 	ret
      000BF2                       2462 00189$:
                                   2463 ;	src/radio.c:370: else if(request == ENTER_SNIFFER_MODE)
      000BF2 BF 05 02         [24] 2464 	cjne	r7,#0x05,00556$
      000BF5 80 03            [24] 2465 	sjmp	00557$
      000BF7                       2466 00556$:
      000BF7 02r0CrAD         [24] 2467 	ljmp	00186$
      000BFA                       2468 00557$:
                                   2469 ;	src/radio.c:372: radio_mode = sniffer;
      000BFA 90r00r01         [24] 2470 	mov	dptr,#_radio_mode
      000BFD E4               [12] 2471 	clr	a
      000BFE F0               [24] 2472 	movx	@dptr,a
                                   2473 ;	src/radio.c:375: if(data[0] > 5) data[0] = 5;
      000BFF 90r00r35         [24] 2474 	mov	dptr,#_handle_radio_request_PARM_2
      000C02 E0               [24] 2475 	movx	a,@dptr
      000C03 FC               [12] 2476 	mov	r4,a
      000C04 A3               [24] 2477 	inc	dptr
      000C05 E0               [24] 2478 	movx	a,@dptr
      000C06 FD               [12] 2479 	mov	r5,a
      000C07 A3               [24] 2480 	inc	dptr
      000C08 E0               [24] 2481 	movx	a,@dptr
      000C09 FE               [12] 2482 	mov	r6,a
      000C0A 8C 82            [24] 2483 	mov	dpl,r4
      000C0C 8D 83            [24] 2484 	mov	dph,r5
      000C0E 8E F0            [24] 2485 	mov	b,r6
      000C10 12r00r00         [24] 2486 	lcall	__gptrget
      000C13 24 FA            [12] 2487 	add	a,#0xff - 0x05
      000C15 50 0B            [24] 2488 	jnc	00135$
      000C17 8C 82            [24] 2489 	mov	dpl,r4
      000C19 8D 83            [24] 2490 	mov	dph,r5
      000C1B 8E F0            [24] 2491 	mov	b,r6
      000C1D 74 05            [12] 2492 	mov	a,#0x05
      000C1F 12r00r00         [24] 2493 	lcall	__gptrput
      000C22                       2494 00135$:
                                   2495 ;	src/radio.c:376: if(data[0] < 2) data[0] = 2;
      000C22 8C 82            [24] 2496 	mov	dpl,r4
      000C24 8D 83            [24] 2497 	mov	dph,r5
      000C26 8E F0            [24] 2498 	mov	b,r6
      000C28 12r00r00         [24] 2499 	lcall	__gptrget
      000C2B FB               [12] 2500 	mov	r3,a
      000C2C BB 02 00         [24] 2501 	cjne	r3,#0x02,00559$
      000C2F                       2502 00559$:
      000C2F 50 0B            [24] 2503 	jnc	00137$
      000C31 8C 82            [24] 2504 	mov	dpl,r4
      000C33 8D 83            [24] 2505 	mov	dph,r5
      000C35 8E F0            [24] 2506 	mov	b,r6
      000C37 74 02            [12] 2507 	mov	a,#0x02
      000C39 12r00r00         [24] 2508 	lcall	__gptrput
      000C3C                       2509 00137$:
                                   2510 ;	src/radio.c:379: rfce = 0;
                                   2511 ;	assignBit
      000C3C C2 90            [12] 2512 	clr	_rfce
                                   2513 ;	src/radio.c:382: configure_address(&data[1], data[0]);
      000C3E 74 01            [12] 2514 	mov	a,#0x01
      000C40 2C               [12] 2515 	add	a,r4
      000C41 F9               [12] 2516 	mov	r1,a
      000C42 E4               [12] 2517 	clr	a
      000C43 3D               [12] 2518 	addc	a,r5
      000C44 FA               [12] 2519 	mov	r2,a
      000C45 8E 03            [24] 2520 	mov	ar3,r6
      000C47 8C 82            [24] 2521 	mov	dpl,r4
      000C49 8D 83            [24] 2522 	mov	dph,r5
      000C4B 8E F0            [24] 2523 	mov	b,r6
      000C4D 12r00r00         [24] 2524 	lcall	__gptrget
      000C50 90r00r18         [24] 2525 	mov	dptr,#_configure_address_PARM_2
      000C53 F0               [24] 2526 	movx	@dptr,a
      000C54 89 82            [24] 2527 	mov	dpl,r1
      000C56 8A 83            [24] 2528 	mov	dph,r2
      000C58 8B F0            [24] 2529 	mov	b,r3
      000C5A 12r02rB6         [24] 2530 	lcall	_configure_address
                                   2531 ;	src/radio.c:385: configure_mac(EN_DPL | EN_ACK_PAY, DPL_P0, ENAA_NONE);
      000C5D 90r00r1C         [24] 2532 	mov	dptr,#_configure_mac_PARM_2
      000C60 74 01            [12] 2533 	mov	a,#0x01
      000C62 F0               [24] 2534 	movx	@dptr,a
      000C63 90r00r1D         [24] 2535 	mov	dptr,#_configure_mac_PARM_3
      000C66 E4               [12] 2536 	clr	a
      000C67 F0               [24] 2537 	movx	@dptr,a
      000C68 75 82 06         [24] 2538 	mov	dpl,#0x06
      000C6B 12r03r2F         [24] 2539 	lcall	_configure_mac
                                   2540 ;	src/radio.c:388: configure_phy(EN_CRC | CRC0 | PRIM_RX | PWR_UP, RATE_2M, 0);
      000C6E 90r00r1F         [24] 2541 	mov	dptr,#_configure_phy_PARM_2
      000C71 74 08            [12] 2542 	mov	a,#0x08
      000C73 F0               [24] 2543 	movx	@dptr,a
      000C74 90r00r20         [24] 2544 	mov	dptr,#_configure_phy_PARM_3
      000C77 E4               [12] 2545 	clr	a
      000C78 F0               [24] 2546 	movx	@dptr,a
      000C79 75 82 0F         [24] 2547 	mov	dpl,#0x0f
      000C7C 12r03r5C         [24] 2548 	lcall	_configure_phy
                                   2549 ;	src/radio.c:391: rfce = 1;
                                   2550 ;	assignBit
      000C7F D2 90            [12] 2551 	setb	_rfce
                                   2552 ;	src/radio.c:394: flush_rx();
      000C81 90r00r23         [24] 2553 	mov	dptr,#_spi_write_PARM_2
      000C84 E4               [12] 2554 	clr	a
      000C85 F0               [24] 2555 	movx	@dptr,a
      000C86 A3               [24] 2556 	inc	dptr
      000C87 F0               [24] 2557 	movx	@dptr,a
      000C88 A3               [24] 2558 	inc	dptr
      000C89 F0               [24] 2559 	movx	@dptr,a
      000C8A 90r00r26         [24] 2560 	mov	dptr,#_spi_write_PARM_3
      000C8D F0               [24] 2561 	movx	@dptr,a
      000C8E 75 82 E2         [24] 2562 	mov	dpl,#0xe2
      000C91 12r03r9B         [24] 2563 	lcall	_spi_write
                                   2564 ;	src/radio.c:395: flush_tx();
      000C94 90r00r23         [24] 2565 	mov	dptr,#_spi_write_PARM_2
      000C97 E4               [12] 2566 	clr	a
      000C98 F0               [24] 2567 	movx	@dptr,a
      000C99 A3               [24] 2568 	inc	dptr
      000C9A F0               [24] 2569 	movx	@dptr,a
      000C9B A3               [24] 2570 	inc	dptr
      000C9C F0               [24] 2571 	movx	@dptr,a
      000C9D 90r00r26         [24] 2572 	mov	dptr,#_spi_write_PARM_3
      000CA0 F0               [24] 2573 	movx	@dptr,a
      000CA1 75 82 E1         [24] 2574 	mov	dpl,#0xe1
      000CA4 12r03r9B         [24] 2575 	lcall	_spi_write
                                   2576 ;	src/radio.c:396: in1bc = 0;
      000CA7 90 C7 B7         [24] 2577 	mov	dptr,#0xc7b7
      000CAA E4               [12] 2578 	clr	a
      000CAB F0               [24] 2579 	movx	@dptr,a
      000CAC 22               [24] 2580 	ret
      000CAD                       2581 00186$:
                                   2582 ;	src/radio.c:400: else if(request == TRANSMIT_ACK_PAYLOAD)
      000CAD BF 08 02         [24] 2583 	cjne	r7,#0x08,00561$
      000CB0 80 03            [24] 2584 	sjmp	00562$
      000CB2                       2585 00561$:
      000CB2 02r0DrE4         [24] 2586 	ljmp	00183$
      000CB5                       2587 00562$:
                                   2588 ;	src/radio.c:406: if(data[0] > 32) data[0] = 32;
      000CB5 90r00r35         [24] 2589 	mov	dptr,#_handle_radio_request_PARM_2
      000CB8 E0               [24] 2590 	movx	a,@dptr
      000CB9 FC               [12] 2591 	mov	r4,a
      000CBA A3               [24] 2592 	inc	dptr
      000CBB E0               [24] 2593 	movx	a,@dptr
      000CBC FD               [12] 2594 	mov	r5,a
      000CBD A3               [24] 2595 	inc	dptr
      000CBE E0               [24] 2596 	movx	a,@dptr
      000CBF FE               [12] 2597 	mov	r6,a
      000CC0 8C 82            [24] 2598 	mov	dpl,r4
      000CC2 8D 83            [24] 2599 	mov	dph,r5
      000CC4 8E F0            [24] 2600 	mov	b,r6
      000CC6 12r00r00         [24] 2601 	lcall	__gptrget
      000CC9 24 DF            [12] 2602 	add	a,#0xff - 0x20
      000CCB 50 0B            [24] 2603 	jnc	00139$
      000CCD 8C 82            [24] 2604 	mov	dpl,r4
      000CCF 8D 83            [24] 2605 	mov	dph,r5
      000CD1 8E F0            [24] 2606 	mov	b,r6
      000CD3 74 20            [12] 2607 	mov	a,#0x20
      000CD5 12r00r00         [24] 2608 	lcall	__gptrput
      000CD8                       2609 00139$:
                                   2610 ;	src/radio.c:407: if(data[0] < 1) data[0] = 1;
      000CD8 8C 82            [24] 2611 	mov	dpl,r4
      000CDA 8D 83            [24] 2612 	mov	dph,r5
      000CDC 8E F0            [24] 2613 	mov	b,r6
      000CDE 12r00r00         [24] 2614 	lcall	__gptrget
      000CE1 FB               [12] 2615 	mov	r3,a
      000CE2 BB 01 00         [24] 2616 	cjne	r3,#0x01,00564$
      000CE5                       2617 00564$:
      000CE5 50 0B            [24] 2618 	jnc	00141$
      000CE7 8C 82            [24] 2619 	mov	dpl,r4
      000CE9 8D 83            [24] 2620 	mov	dph,r5
      000CEB 8E F0            [24] 2621 	mov	b,r6
      000CED 74 01            [12] 2622 	mov	a,#0x01
      000CEF 12r00r00         [24] 2623 	lcall	__gptrput
      000CF2                       2624 00141$:
                                   2625 ;	src/radio.c:410: rfce = 0;
                                   2626 ;	assignBit
      000CF2 C2 90            [12] 2627 	clr	_rfce
                                   2628 ;	src/radio.c:413: flush_tx();
      000CF4 90r00r23         [24] 2629 	mov	dptr,#_spi_write_PARM_2
      000CF7 E4               [12] 2630 	clr	a
      000CF8 F0               [24] 2631 	movx	@dptr,a
      000CF9 A3               [24] 2632 	inc	dptr
      000CFA F0               [24] 2633 	movx	@dptr,a
      000CFB A3               [24] 2634 	inc	dptr
      000CFC F0               [24] 2635 	movx	@dptr,a
      000CFD 90r00r26         [24] 2636 	mov	dptr,#_spi_write_PARM_3
      000D00 F0               [24] 2637 	movx	@dptr,a
      000D01 75 82 E1         [24] 2638 	mov	dpl,#0xe1
      000D04 C0 06            [24] 2639 	push	ar6
      000D06 C0 05            [24] 2640 	push	ar5
      000D08 C0 04            [24] 2641 	push	ar4
      000D0A 12r03r9B         [24] 2642 	lcall	_spi_write
      000D0D D0 04            [24] 2643 	pop	ar4
      000D0F D0 05            [24] 2644 	pop	ar5
      000D11 D0 06            [24] 2645 	pop	ar6
                                   2646 ;	src/radio.c:414: flush_rx();
      000D13 90r00r23         [24] 2647 	mov	dptr,#_spi_write_PARM_2
      000D16 E4               [12] 2648 	clr	a
      000D17 F0               [24] 2649 	movx	@dptr,a
      000D18 A3               [24] 2650 	inc	dptr
      000D19 F0               [24] 2651 	movx	@dptr,a
      000D1A A3               [24] 2652 	inc	dptr
      000D1B F0               [24] 2653 	movx	@dptr,a
      000D1C 90r00r26         [24] 2654 	mov	dptr,#_spi_write_PARM_3
      000D1F F0               [24] 2655 	movx	@dptr,a
      000D20 75 82 E2         [24] 2656 	mov	dpl,#0xe2
      000D23 C0 06            [24] 2657 	push	ar6
      000D25 C0 05            [24] 2658 	push	ar5
      000D27 C0 04            [24] 2659 	push	ar4
      000D29 12r03r9B         [24] 2660 	lcall	_spi_write
                                   2661 ;	src/radio.c:417: write_register_byte(STATUS, MAX_RT | TX_DS | RX_DR);
      000D2C 90r00r2D         [24] 2662 	mov	dptr,#_write_register_byte_PARM_2
      000D2F 74 70            [12] 2663 	mov	a,#0x70
      000D31 F0               [24] 2664 	movx	@dptr,a
      000D32 75 82 07         [24] 2665 	mov	dpl,#0x07
      000D35 12r04r88         [24] 2666 	lcall	_write_register_byte
                                   2667 ;	src/radio.c:420: write_register_byte(EN_AA, ENAA_P0);
      000D38 90r00r2D         [24] 2668 	mov	dptr,#_write_register_byte_PARM_2
      000D3B 74 01            [12] 2669 	mov	a,#0x01
      000D3D F0               [24] 2670 	movx	@dptr,a
      000D3E 75 82 01         [24] 2671 	mov	dpl,#0x01
      000D41 12r04r88         [24] 2672 	lcall	_write_register_byte
                                   2673 ;	src/radio.c:421: write_register_byte(FEATURE, EN_DPL | EN_ACK_PAY);
      000D44 90r00r2D         [24] 2674 	mov	dptr,#_write_register_byte_PARM_2
      000D47 74 06            [12] 2675 	mov	a,#0x06
      000D49 F0               [24] 2676 	movx	@dptr,a
      000D4A 75 82 1D         [24] 2677 	mov	dpl,#0x1d
      000D4D 12r04r88         [24] 2678 	lcall	_write_register_byte
      000D50 D0 04            [24] 2679 	pop	ar4
      000D52 D0 05            [24] 2680 	pop	ar5
      000D54 D0 06            [24] 2681 	pop	ar6
                                   2682 ;	src/radio.c:424: spi_write(W_ACK_PAYLOAD, &data[1], data[0]);
      000D56 74 01            [12] 2683 	mov	a,#0x01
      000D58 2C               [12] 2684 	add	a,r4
      000D59 F9               [12] 2685 	mov	r1,a
      000D5A E4               [12] 2686 	clr	a
      000D5B 3D               [12] 2687 	addc	a,r5
      000D5C FA               [12] 2688 	mov	r2,a
      000D5D 8E 03            [24] 2689 	mov	ar3,r6
      000D5F 8C 82            [24] 2690 	mov	dpl,r4
      000D61 8D 83            [24] 2691 	mov	dph,r5
      000D63 8E F0            [24] 2692 	mov	b,r6
      000D65 12r00r00         [24] 2693 	lcall	__gptrget
      000D68 FC               [12] 2694 	mov	r4,a
      000D69 90r00r23         [24] 2695 	mov	dptr,#_spi_write_PARM_2
      000D6C E9               [12] 2696 	mov	a,r1
      000D6D F0               [24] 2697 	movx	@dptr,a
      000D6E EA               [12] 2698 	mov	a,r2
      000D6F A3               [24] 2699 	inc	dptr
      000D70 F0               [24] 2700 	movx	@dptr,a
      000D71 EB               [12] 2701 	mov	a,r3
      000D72 A3               [24] 2702 	inc	dptr
      000D73 F0               [24] 2703 	movx	@dptr,a
      000D74 90r00r26         [24] 2704 	mov	dptr,#_spi_write_PARM_3
      000D77 EC               [12] 2705 	mov	a,r4
      000D78 F0               [24] 2706 	movx	@dptr,a
      000D79 75 82 A8         [24] 2707 	mov	dpl,#0xa8
      000D7C 12r03r9B         [24] 2708 	lcall	_spi_write
                                   2709 ;	src/radio.c:427: rfce = 1;
                                   2710 ;	assignBit
      000D7F D2 90            [12] 2711 	setb	_rfce
                                   2712 ;	src/radio.c:431: in1buf[0] = 0;
      000D81 90 C6 80         [24] 2713 	mov	dptr,#_in1buf
      000D84 E4               [12] 2714 	clr	a
      000D85 F0               [24] 2715 	movx	@dptr,a
                                   2716 ;	src/radio.c:432: while(elapsed < 500)
      000D86 7D 00            [12] 2717 	mov	r5,#0x00
      000D88 7E 00            [12] 2718 	mov	r6,#0x00
      000D8A                       2719 00144$:
      000D8A 8D 03            [24] 2720 	mov	ar3,r5
      000D8C 8E 04            [24] 2721 	mov	ar4,r6
      000D8E C3               [12] 2722 	clr	c
      000D8F EB               [12] 2723 	mov	a,r3
      000D90 94 F4            [12] 2724 	subb	a,#0xf4
      000D92 EC               [12] 2725 	mov	a,r4
      000D93 94 01            [12] 2726 	subb	a,#0x01
      000D95 50 3B            [24] 2727 	jnc	00146$
                                   2728 ;	src/radio.c:434: status = read_register_byte(STATUS);
      000D97 75 82 07         [24] 2729 	mov	dpl,#0x07
      000D9A C0 06            [24] 2730 	push	ar6
      000D9C C0 05            [24] 2731 	push	ar5
      000D9E 12r04rA9         [24] 2732 	lcall	_read_register_byte
      000DA1 AC 82            [24] 2733 	mov	r4,dpl
      000DA3 D0 05            [24] 2734 	pop	ar5
      000DA5 D0 06            [24] 2735 	pop	ar6
                                   2736 ;	src/radio.c:435: if((status & RX_DR) == RX_DR)
      000DA7 53 04 40         [24] 2737 	anl	ar4,#0x40
      000DAA 7B 00            [12] 2738 	mov	r3,#0x00
      000DAC BC 40 0B         [24] 2739 	cjne	r4,#0x40,00285$
      000DAF BB 00 08         [24] 2740 	cjne	r3,#0x00,00285$
                                   2741 ;	src/radio.c:437: in1buf[0] = 1;
      000DB2 90 C6 80         [24] 2742 	mov	dptr,#_in1buf
      000DB5 74 01            [12] 2743 	mov	a,#0x01
      000DB7 F0               [24] 2744 	movx	@dptr,a
                                   2745 ;	src/radio.c:438: break;
                                   2746 ;	src/nRF24LU1P.h:35: inline void delay_us(uint16_t us) { do nop_us(); while(--us); }
      000DB8 80 18            [24] 2747 	sjmp	00146$
      000DBA                       2748 00285$:
      000DBA 7B E8            [12] 2749 	mov	r3,#0xe8
      000DBC 7C 03            [12] 2750 	mov	r4,#0x03
      000DBE                       2751 00212$:
      000DBE 00               [12] 2752 	nop 
      000DBF 00               [12] 2753 	nop 
      000DC0 00               [12] 2754 	nop 
      000DC1 00               [12] 2755 	nop 
      000DC2 1B               [12] 2756 	dec	r3
      000DC3 BB FF 01         [24] 2757 	cjne	r3,#0xff,00569$
      000DC6 1C               [12] 2758 	dec	r4
      000DC7                       2759 00569$:
      000DC7 EB               [12] 2760 	mov	a,r3
      000DC8 4C               [12] 2761 	orl	a,r4
      000DC9 70 F3            [24] 2762 	jnz	00212$
                                   2763 ;	src/radio.c:442: elapsed++;
      000DCB 0D               [12] 2764 	inc	r5
      000DCC BD 00 BB         [24] 2765 	cjne	r5,#0x00,00144$
      000DCF 0E               [12] 2766 	inc	r6
      000DD0 80 B8            [24] 2767 	sjmp	00144$
      000DD2                       2768 00146$:
                                   2769 ;	src/radio.c:446: write_register_byte(EN_AA, ENAA_NONE);
      000DD2 90r00r2D         [24] 2770 	mov	dptr,#_write_register_byte_PARM_2
      000DD5 E4               [12] 2771 	clr	a
      000DD6 F0               [24] 2772 	movx	@dptr,a
      000DD7 75 82 01         [24] 2773 	mov	dpl,#0x01
      000DDA 12r04r88         [24] 2774 	lcall	_write_register_byte
                                   2775 ;	src/radio.c:448: in1bc = 1;
      000DDD 90 C7 B7         [24] 2776 	mov	dptr,#0xc7b7
      000DE0 74 01            [12] 2777 	mov	a,#0x01
      000DE2 F0               [24] 2778 	movx	@dptr,a
      000DE3 22               [24] 2779 	ret
      000DE4                       2780 00183$:
                                   2781 ;	src/radio.c:452: else if(request == TRANSMIT_PAYLOAD)
      000DE4 BF 04 02         [24] 2782 	cjne	r7,#0x04,00572$
      000DE7 80 03            [24] 2783 	sjmp	00573$
      000DE9                       2784 00572$:
      000DE9 02r0Fr78         [24] 2785 	ljmp	00180$
      000DEC                       2786 00573$:
                                   2787 ;	src/radio.c:455: if(data[0] > 32) data[0] = 32;
      000DEC 90r00r35         [24] 2788 	mov	dptr,#_handle_radio_request_PARM_2
      000DEF E0               [24] 2789 	movx	a,@dptr
      000DF0 FC               [12] 2790 	mov	r4,a
      000DF1 A3               [24] 2791 	inc	dptr
      000DF2 E0               [24] 2792 	movx	a,@dptr
      000DF3 FD               [12] 2793 	mov	r5,a
      000DF4 A3               [24] 2794 	inc	dptr
      000DF5 E0               [24] 2795 	movx	a,@dptr
      000DF6 FE               [12] 2796 	mov	r6,a
      000DF7 8C 82            [24] 2797 	mov	dpl,r4
      000DF9 8D 83            [24] 2798 	mov	dph,r5
      000DFB 8E F0            [24] 2799 	mov	b,r6
      000DFD 12r00r00         [24] 2800 	lcall	__gptrget
      000E00 24 DF            [12] 2801 	add	a,#0xff - 0x20
      000E02 50 0B            [24] 2802 	jnc	00148$
      000E04 8C 82            [24] 2803 	mov	dpl,r4
      000E06 8D 83            [24] 2804 	mov	dph,r5
      000E08 8E F0            [24] 2805 	mov	b,r6
      000E0A 74 20            [12] 2806 	mov	a,#0x20
      000E0C 12r00r00         [24] 2807 	lcall	__gptrput
      000E0F                       2808 00148$:
                                   2809 ;	src/radio.c:456: if(data[0] < 1) data[0] = 1;
      000E0F 8C 82            [24] 2810 	mov	dpl,r4
      000E11 8D 83            [24] 2811 	mov	dph,r5
      000E13 8E F0            [24] 2812 	mov	b,r6
      000E15 12r00r00         [24] 2813 	lcall	__gptrget
      000E18 FB               [12] 2814 	mov	r3,a
      000E19 BB 01 00         [24] 2815 	cjne	r3,#0x01,00575$
      000E1C                       2816 00575$:
      000E1C 50 0B            [24] 2817 	jnc	00150$
      000E1E 8C 82            [24] 2818 	mov	dpl,r4
      000E20 8D 83            [24] 2819 	mov	dph,r5
      000E22 8E F0            [24] 2820 	mov	b,r6
      000E24 74 01            [12] 2821 	mov	a,#0x01
      000E26 12r00r00         [24] 2822 	lcall	__gptrput
      000E29                       2823 00150$:
                                   2824 ;	src/radio.c:459: rfce = 0;
                                   2825 ;	assignBit
      000E29 C2 90            [12] 2826 	clr	_rfce
                                   2827 ;	src/radio.c:463: write_register_byte(SETUP_RETR, (1 << data[1]) | data[2]);
      000E2B 74 01            [12] 2828 	mov	a,#0x01
      000E2D 2C               [12] 2829 	add	a,r4
      000E2E F9               [12] 2830 	mov	r1,a
      000E2F E4               [12] 2831 	clr	a
      000E30 3D               [12] 2832 	addc	a,r5
      000E31 FA               [12] 2833 	mov	r2,a
      000E32 8E 03            [24] 2834 	mov	ar3,r6
      000E34 89 82            [24] 2835 	mov	dpl,r1
      000E36 8A 83            [24] 2836 	mov	dph,r2
      000E38 8B F0            [24] 2837 	mov	b,r3
      000E3A 12r00r00         [24] 2838 	lcall	__gptrget
      000E3D F9               [12] 2839 	mov	r1,a
      000E3E 89 F0            [24] 2840 	mov	b,r1
      000E40 05 F0            [12] 2841 	inc	b
      000E42 74 01            [12] 2842 	mov	a,#0x01
      000E44 80 02            [24] 2843 	sjmp	00579$
      000E46                       2844 00577$:
      000E46 25 E0            [12] 2845 	add	a,acc
      000E48                       2846 00579$:
      000E48 D5 F0 FB         [24] 2847 	djnz	b,00577$
      000E4B F9               [12] 2848 	mov	r1,a
      000E4C 74 02            [12] 2849 	mov	a,#0x02
      000E4E 2C               [12] 2850 	add	a,r4
      000E4F F8               [12] 2851 	mov	r0,a
      000E50 E4               [12] 2852 	clr	a
      000E51 3D               [12] 2853 	addc	a,r5
      000E52 FA               [12] 2854 	mov	r2,a
      000E53 8E 03            [24] 2855 	mov	ar3,r6
      000E55 88 82            [24] 2856 	mov	dpl,r0
      000E57 8A 83            [24] 2857 	mov	dph,r2
      000E59 8B F0            [24] 2858 	mov	b,r3
      000E5B 12r00r00         [24] 2859 	lcall	__gptrget
      000E5E 90r00r2D         [24] 2860 	mov	dptr,#_write_register_byte_PARM_2
      000E61 49               [12] 2861 	orl	a,r1
      000E62 F0               [24] 2862 	movx	@dptr,a
      000E63 75 82 04         [24] 2863 	mov	dpl,#0x04
      000E66 C0 06            [24] 2864 	push	ar6
      000E68 C0 05            [24] 2865 	push	ar5
      000E6A C0 04            [24] 2866 	push	ar4
      000E6C 12r04r88         [24] 2867 	lcall	_write_register_byte
      000E6F D0 04            [24] 2868 	pop	ar4
      000E71 D0 05            [24] 2869 	pop	ar5
      000E73 D0 06            [24] 2870 	pop	ar6
                                   2871 ;	src/radio.c:466: flush_tx();
      000E75 90r00r23         [24] 2872 	mov	dptr,#_spi_write_PARM_2
      000E78 E4               [12] 2873 	clr	a
      000E79 F0               [24] 2874 	movx	@dptr,a
      000E7A A3               [24] 2875 	inc	dptr
      000E7B F0               [24] 2876 	movx	@dptr,a
      000E7C A3               [24] 2877 	inc	dptr
      000E7D F0               [24] 2878 	movx	@dptr,a
      000E7E 90r00r26         [24] 2879 	mov	dptr,#_spi_write_PARM_3
      000E81 F0               [24] 2880 	movx	@dptr,a
      000E82 75 82 E1         [24] 2881 	mov	dpl,#0xe1
      000E85 C0 06            [24] 2882 	push	ar6
      000E87 C0 05            [24] 2883 	push	ar5
      000E89 C0 04            [24] 2884 	push	ar4
      000E8B 12r03r9B         [24] 2885 	lcall	_spi_write
      000E8E D0 04            [24] 2886 	pop	ar4
      000E90 D0 05            [24] 2887 	pop	ar5
      000E92 D0 06            [24] 2888 	pop	ar6
                                   2889 ;	src/radio.c:467: flush_rx();
      000E94 90r00r23         [24] 2890 	mov	dptr,#_spi_write_PARM_2
      000E97 E4               [12] 2891 	clr	a
      000E98 F0               [24] 2892 	movx	@dptr,a
      000E99 A3               [24] 2893 	inc	dptr
      000E9A F0               [24] 2894 	movx	@dptr,a
      000E9B A3               [24] 2895 	inc	dptr
      000E9C F0               [24] 2896 	movx	@dptr,a
      000E9D 90r00r26         [24] 2897 	mov	dptr,#_spi_write_PARM_3
      000EA0 F0               [24] 2898 	movx	@dptr,a
      000EA1 75 82 E2         [24] 2899 	mov	dpl,#0xe2
      000EA4 C0 06            [24] 2900 	push	ar6
      000EA6 C0 05            [24] 2901 	push	ar5
      000EA8 C0 04            [24] 2902 	push	ar4
      000EAA 12r03r9B         [24] 2903 	lcall	_spi_write
                                   2904 ;	src/radio.c:470: write_register_byte(STATUS, MAX_RT | TX_DS | RX_DR);
      000EAD 90r00r2D         [24] 2905 	mov	dptr,#_write_register_byte_PARM_2
      000EB0 74 70            [12] 2906 	mov	a,#0x70
      000EB2 F0               [24] 2907 	movx	@dptr,a
      000EB3 75 82 07         [24] 2908 	mov	dpl,#0x07
      000EB6 12r04r88         [24] 2909 	lcall	_write_register_byte
                                   2910 ;	src/radio.c:473: write_register_byte(CONFIG, read_register_byte(CONFIG) & ~PRIM_RX);
      000EB9 75 82 00         [24] 2911 	mov	dpl,#0x00
      000EBC 12r04rA9         [24] 2912 	lcall	_read_register_byte
      000EBF E5 82            [12] 2913 	mov	a,dpl
      000EC1 90r00r2D         [24] 2914 	mov	dptr,#_write_register_byte_PARM_2
      000EC4 54 FE            [12] 2915 	anl	a,#0xfe
      000EC6 F0               [24] 2916 	movx	@dptr,a
      000EC7 75 82 00         [24] 2917 	mov	dpl,#0x00
      000ECA 12r04r88         [24] 2918 	lcall	_write_register_byte
                                   2919 ;	src/radio.c:476: write_register_byte(EN_AA, ENAA_P0);
      000ECD 90r00r2D         [24] 2920 	mov	dptr,#_write_register_byte_PARM_2
      000ED0 74 01            [12] 2921 	mov	a,#0x01
      000ED2 F0               [24] 2922 	movx	@dptr,a
      000ED3 75 82 01         [24] 2923 	mov	dpl,#0x01
      000ED6 12r04r88         [24] 2924 	lcall	_write_register_byte
      000ED9 D0 04            [24] 2925 	pop	ar4
      000EDB D0 05            [24] 2926 	pop	ar5
      000EDD D0 06            [24] 2927 	pop	ar6
                                   2928 ;	src/radio.c:479: spi_write(W_TX_PAYLOAD, &data[3], data[0]);
      000EDF 74 03            [12] 2929 	mov	a,#0x03
      000EE1 2C               [12] 2930 	add	a,r4
      000EE2 F9               [12] 2931 	mov	r1,a
      000EE3 E4               [12] 2932 	clr	a
      000EE4 3D               [12] 2933 	addc	a,r5
      000EE5 FA               [12] 2934 	mov	r2,a
      000EE6 8E 03            [24] 2935 	mov	ar3,r6
      000EE8 8C 82            [24] 2936 	mov	dpl,r4
      000EEA 8D 83            [24] 2937 	mov	dph,r5
      000EEC 8E F0            [24] 2938 	mov	b,r6
      000EEE 12r00r00         [24] 2939 	lcall	__gptrget
      000EF1 FC               [12] 2940 	mov	r4,a
      000EF2 90r00r23         [24] 2941 	mov	dptr,#_spi_write_PARM_2
      000EF5 E9               [12] 2942 	mov	a,r1
      000EF6 F0               [24] 2943 	movx	@dptr,a
      000EF7 EA               [12] 2944 	mov	a,r2
      000EF8 A3               [24] 2945 	inc	dptr
      000EF9 F0               [24] 2946 	movx	@dptr,a
      000EFA EB               [12] 2947 	mov	a,r3
      000EFB A3               [24] 2948 	inc	dptr
      000EFC F0               [24] 2949 	movx	@dptr,a
      000EFD 90r00r26         [24] 2950 	mov	dptr,#_spi_write_PARM_3
      000F00 EC               [12] 2951 	mov	a,r4
      000F01 F0               [24] 2952 	movx	@dptr,a
      000F02 75 82 A0         [24] 2953 	mov	dpl,#0xa0
      000F05 12r03r9B         [24] 2954 	lcall	_spi_write
                                   2955 ;	src/radio.c:482: rfce = 1;
                                   2956 ;	assignBit
      000F08 D2 90            [12] 2957 	setb	_rfce
                                   2958 ;	src/nRF24LU1P.h:35: inline void delay_us(uint16_t us) { do nop_us(); while(--us); }
      000F0A 7D 0A            [12] 2959 	mov	r5,#0x0a
      000F0C 7E 00            [12] 2960 	mov	r6,#0x00
      000F0E                       2961 00216$:
      000F0E 00               [12] 2962 	nop 
      000F0F 00               [12] 2963 	nop 
      000F10 00               [12] 2964 	nop 
      000F11 00               [12] 2965 	nop 
      000F12 1D               [12] 2966 	dec	r5
      000F13 BD FF 01         [24] 2967 	cjne	r5,#0xff,00580$
      000F16 1E               [12] 2968 	dec	r6
      000F17                       2969 00580$:
      000F17 ED               [12] 2970 	mov	a,r5
      000F18 4E               [12] 2971 	orl	a,r6
      000F19 70 F3            [24] 2972 	jnz	00216$
                                   2973 ;	src/radio.c:484: rfce = 0;
                                   2974 ;	assignBit
      000F1B C2 90            [12] 2975 	clr	_rfce
                                   2976 ;	src/radio.c:487: while(true)
      000F1D                       2977 00159$:
                                   2978 ;	src/radio.c:490: rfcsn = 0;
                                   2979 ;	assignBit
      000F1D C2 91            [12] 2980 	clr	_rfcsn
                                   2981 ;	src/radio.c:491: RFDAT = _NOP;
      000F1F 75 E5 FF         [24] 2982 	mov	_RFDAT,#0xff
                                   2983 ;	src/radio.c:492: RFRDY = 0;
                                   2984 ;	assignBit
      000F22 C2 C0            [12] 2985 	clr	_RFRDY
                                   2986 ;	src/radio.c:493: while(!RFRDY);
      000F24                       2987 00151$:
      000F24 30 C0 FD         [24] 2988 	jnb	_RFRDY,00151$
                                   2989 ;	src/radio.c:494: rfcsn = 1;
                                   2990 ;	assignBit
      000F27 D2 91            [12] 2991 	setb	_rfcsn
                                   2992 ;	src/radio.c:497: if((RFDAT & 0x10) == 0x10)
      000F29 AD E5            [24] 2993 	mov	r5,_RFDAT
      000F2B 53 05 10         [24] 2994 	anl	ar5,#0x10
      000F2E 7E 00            [12] 2995 	mov	r6,#0x00
      000F30 BD 10 0A         [24] 2996 	cjne	r5,#0x10,00155$
      000F33 BE 00 07         [24] 2997 	cjne	r6,#0x00,00155$
                                   2998 ;	src/radio.c:499: in1buf[0] = 0;
      000F36 90 C6 80         [24] 2999 	mov	dptr,#_in1buf
      000F39 E4               [12] 3000 	clr	a
      000F3A F0               [24] 3001 	movx	@dptr,a
                                   3002 ;	src/radio.c:500: break;
      000F3B 80 13            [24] 3003 	sjmp	00160$
      000F3D                       3004 00155$:
                                   3005 ;	src/radio.c:504: if((RFDAT & 0x20) == 0x20)
      000F3D AD E5            [24] 3006 	mov	r5,_RFDAT
      000F3F 53 05 20         [24] 3007 	anl	ar5,#0x20
      000F42 7E 00            [12] 3008 	mov	r6,#0x00
      000F44 BD 20 D6         [24] 3009 	cjne	r5,#0x20,00159$
      000F47 BE 00 D3         [24] 3010 	cjne	r6,#0x00,00159$
                                   3011 ;	src/radio.c:506: in1buf[0] = 1;
      000F4A 90 C6 80         [24] 3012 	mov	dptr,#_in1buf
      000F4D 74 01            [12] 3013 	mov	a,#0x01
      000F4F F0               [24] 3014 	movx	@dptr,a
                                   3015 ;	src/radio.c:507: break;
      000F50                       3016 00160$:
                                   3017 ;	src/radio.c:512: write_register_byte(EN_AA, ENAA_NONE);
      000F50 90r00r2D         [24] 3018 	mov	dptr,#_write_register_byte_PARM_2
      000F53 E4               [12] 3019 	clr	a
      000F54 F0               [24] 3020 	movx	@dptr,a
      000F55 75 82 01         [24] 3021 	mov	dpl,#0x01
      000F58 12r04r88         [24] 3022 	lcall	_write_register_byte
                                   3023 ;	src/radio.c:515: write_register_byte(CONFIG, read_register_byte(CONFIG) | PRIM_RX);
      000F5B 75 82 00         [24] 3024 	mov	dpl,#0x00
      000F5E 12r04rA9         [24] 3025 	lcall	_read_register_byte
      000F61 E5 82            [12] 3026 	mov	a,dpl
      000F63 90r00r2D         [24] 3027 	mov	dptr,#_write_register_byte_PARM_2
      000F66 44 01            [12] 3028 	orl	a,#0x01
      000F68 F0               [24] 3029 	movx	@dptr,a
      000F69 75 82 00         [24] 3030 	mov	dpl,#0x00
      000F6C 12r04r88         [24] 3031 	lcall	_write_register_byte
                                   3032 ;	src/radio.c:518: rfce = 1;
                                   3033 ;	assignBit
      000F6F D2 90            [12] 3034 	setb	_rfce
                                   3035 ;	src/radio.c:519: in1bc = 1;
      000F71 90 C7 B7         [24] 3036 	mov	dptr,#0xc7b7
      000F74 74 01            [12] 3037 	mov	a,#0x01
      000F76 F0               [24] 3038 	movx	@dptr,a
      000F77 22               [24] 3039 	ret
      000F78                       3040 00180$:
                                   3041 ;	src/radio.c:523: else if(request == TRANSMIT_PAYLOAD_GENERIC)
      000F78 BF 0C 02         [24] 3042 	cjne	r7,#0x0c,00587$
      000F7B 80 01            [24] 3043 	sjmp	00588$
      000F7D                       3044 00587$:
      000F7D 22               [24] 3045 	ret
      000F7E                       3046 00588$:
                                   3047 ;	src/radio.c:525: uint8_t address_start = data[0] + data[1] + 2;
      000F7E 90r00r35         [24] 3048 	mov	dptr,#_handle_radio_request_PARM_2
      000F81 E0               [24] 3049 	movx	a,@dptr
      000F82 FD               [12] 3050 	mov	r5,a
      000F83 A3               [24] 3051 	inc	dptr
      000F84 E0               [24] 3052 	movx	a,@dptr
      000F85 FE               [12] 3053 	mov	r6,a
      000F86 A3               [24] 3054 	inc	dptr
      000F87 E0               [24] 3055 	movx	a,@dptr
      000F88 FF               [12] 3056 	mov	r7,a
      000F89 8D 82            [24] 3057 	mov	dpl,r5
      000F8B 8E 83            [24] 3058 	mov	dph,r6
      000F8D 8F F0            [24] 3059 	mov	b,r7
      000F8F 12r00r00         [24] 3060 	lcall	__gptrget
      000F92 FC               [12] 3061 	mov	r4,a
      000F93 74 01            [12] 3062 	mov	a,#0x01
      000F95 2D               [12] 3063 	add	a,r5
      000F96 F5*0E            [12] 3064 	mov	_handle_radio_request_sloc1_1_0,a
      000F98 E4               [12] 3065 	clr	a
      000F99 3E               [12] 3066 	addc	a,r6
      000F9A F5*0F            [12] 3067 	mov	(_handle_radio_request_sloc1_1_0 + 1),a
      000F9C 8F*10            [24] 3068 	mov	(_handle_radio_request_sloc1_1_0 + 2),r7
      000F9E 85*0E 82         [24] 3069 	mov	dpl,_handle_radio_request_sloc1_1_0
      000FA1 85*0F 83         [24] 3070 	mov	dph,(_handle_radio_request_sloc1_1_0 + 1)
      000FA4 85*10 F0         [24] 3071 	mov	b,(_handle_radio_request_sloc1_1_0 + 2)
      000FA7 12r00r00         [24] 3072 	lcall	__gptrget
      000FAA 2C               [12] 3073 	add	a,r4
      000FAB F8               [12] 3074 	mov	r0,a
      000FAC 08               [12] 3075 	inc	r0
      000FAD 08               [12] 3076 	inc	r0
                                   3077 ;	src/radio.c:528: if(data[0] > 32) data[0] = 32;
      000FAE EC               [12] 3078 	mov	a,r4
      000FAF 24 DF            [12] 3079 	add	a,#0xff - 0x20
      000FB1 50 0B            [24] 3080 	jnc	00162$
      000FB3 8D 82            [24] 3081 	mov	dpl,r5
      000FB5 8E 83            [24] 3082 	mov	dph,r6
      000FB7 8F F0            [24] 3083 	mov	b,r7
      000FB9 74 20            [12] 3084 	mov	a,#0x20
      000FBB 12r00r00         [24] 3085 	lcall	__gptrput
      000FBE                       3086 00162$:
                                   3087 ;	src/radio.c:529: if(data[0] < 1) data[0] = 1;
      000FBE 8D 82            [24] 3088 	mov	dpl,r5
      000FC0 8E 83            [24] 3089 	mov	dph,r6
      000FC2 8F F0            [24] 3090 	mov	b,r7
      000FC4 12r00r00         [24] 3091 	lcall	__gptrget
      000FC7 FC               [12] 3092 	mov	r4,a
      000FC8 BC 01 00         [24] 3093 	cjne	r4,#0x01,00590$
      000FCB                       3094 00590$:
      000FCB 50 0B            [24] 3095 	jnc	00164$
      000FCD 8D 82            [24] 3096 	mov	dpl,r5
      000FCF 8E 83            [24] 3097 	mov	dph,r6
      000FD1 8F F0            [24] 3098 	mov	b,r7
      000FD3 74 01            [12] 3099 	mov	a,#0x01
      000FD5 12r00r00         [24] 3100 	lcall	__gptrput
      000FD8                       3101 00164$:
                                   3102 ;	src/radio.c:532: if(data[1] > 5) data[1] = 5;
      000FD8 85*0E 82         [24] 3103 	mov	dpl,_handle_radio_request_sloc1_1_0
      000FDB 85*0F 83         [24] 3104 	mov	dph,(_handle_radio_request_sloc1_1_0 + 1)
      000FDE 85*10 F0         [24] 3105 	mov	b,(_handle_radio_request_sloc1_1_0 + 2)
      000FE1 12r00r00         [24] 3106 	lcall	__gptrget
      000FE4 24 FA            [12] 3107 	add	a,#0xff - 0x05
      000FE6 50 0E            [24] 3108 	jnc	00166$
      000FE8 85*0E 82         [24] 3109 	mov	dpl,_handle_radio_request_sloc1_1_0
      000FEB 85*0F 83         [24] 3110 	mov	dph,(_handle_radio_request_sloc1_1_0 + 1)
      000FEE 85*10 F0         [24] 3111 	mov	b,(_handle_radio_request_sloc1_1_0 + 2)
      000FF1 74 05            [12] 3112 	mov	a,#0x05
      000FF3 12r00r00         [24] 3113 	lcall	__gptrput
      000FF6                       3114 00166$:
                                   3115 ;	src/radio.c:533: if(data[1] < 1) data[1] = 1;
      000FF6 85*0E 82         [24] 3116 	mov	dpl,_handle_radio_request_sloc1_1_0
      000FF9 85*0F 83         [24] 3117 	mov	dph,(_handle_radio_request_sloc1_1_0 + 1)
      000FFC 85*10 F0         [24] 3118 	mov	b,(_handle_radio_request_sloc1_1_0 + 2)
      000FFF 12r00r00         [24] 3119 	lcall	__gptrget
      001002 FC               [12] 3120 	mov	r4,a
      001003 BC 01 00         [24] 3121 	cjne	r4,#0x01,00593$
      001006                       3122 00593$:
      001006 50 0E            [24] 3123 	jnc	00168$
      001008 85*0E 82         [24] 3124 	mov	dpl,_handle_radio_request_sloc1_1_0
      00100B 85*0F 83         [24] 3125 	mov	dph,(_handle_radio_request_sloc1_1_0 + 1)
      00100E 85*10 F0         [24] 3126 	mov	b,(_handle_radio_request_sloc1_1_0 + 2)
      001011 74 01            [12] 3127 	mov	a,#0x01
      001013 12r00r00         [24] 3128 	lcall	__gptrput
      001016                       3129 00168$:
                                   3130 ;	src/radio.c:536: rfce = 0;
                                   3131 ;	assignBit
      001016 C2 90            [12] 3132 	clr	_rfce
                                   3133 ;	src/radio.c:539: flush_tx();
      001018 90r00r23         [24] 3134 	mov	dptr,#_spi_write_PARM_2
      00101B E4               [12] 3135 	clr	a
      00101C F0               [24] 3136 	movx	@dptr,a
      00101D A3               [24] 3137 	inc	dptr
      00101E F0               [24] 3138 	movx	@dptr,a
      00101F A3               [24] 3139 	inc	dptr
      001020 F0               [24] 3140 	movx	@dptr,a
      001021 90r00r26         [24] 3141 	mov	dptr,#_spi_write_PARM_3
      001024 F0               [24] 3142 	movx	@dptr,a
      001025 75 82 E1         [24] 3143 	mov	dpl,#0xe1
      001028 C0 07            [24] 3144 	push	ar7
      00102A C0 06            [24] 3145 	push	ar6
      00102C C0 05            [24] 3146 	push	ar5
      00102E C0 00            [24] 3147 	push	ar0
      001030 12r03r9B         [24] 3148 	lcall	_spi_write
      001033 D0 00            [24] 3149 	pop	ar0
      001035 D0 05            [24] 3150 	pop	ar5
      001037 D0 06            [24] 3151 	pop	ar6
      001039 D0 07            [24] 3152 	pop	ar7
                                   3153 ;	src/radio.c:540: flush_rx();
      00103B 90r00r23         [24] 3154 	mov	dptr,#_spi_write_PARM_2
      00103E E4               [12] 3155 	clr	a
      00103F F0               [24] 3156 	movx	@dptr,a
      001040 A3               [24] 3157 	inc	dptr
      001041 F0               [24] 3158 	movx	@dptr,a
      001042 A3               [24] 3159 	inc	dptr
      001043 F0               [24] 3160 	movx	@dptr,a
      001044 90r00r26         [24] 3161 	mov	dptr,#_spi_write_PARM_3
      001047 F0               [24] 3162 	movx	@dptr,a
      001048 75 82 E2         [24] 3163 	mov	dpl,#0xe2
      00104B C0 07            [24] 3164 	push	ar7
      00104D C0 06            [24] 3165 	push	ar6
      00104F C0 05            [24] 3166 	push	ar5
      001051 C0 00            [24] 3167 	push	ar0
      001053 12r03r9B         [24] 3168 	lcall	_spi_write
                                   3169 ;	src/radio.c:543: write_register_byte(STATUS, MAX_RT | TX_DS | RX_DR);
      001056 90r00r2D         [24] 3170 	mov	dptr,#_write_register_byte_PARM_2
      001059 74 70            [12] 3171 	mov	a,#0x70
      00105B F0               [24] 3172 	movx	@dptr,a
      00105C 75 82 07         [24] 3173 	mov	dpl,#0x07
      00105F 12r04r88         [24] 3174 	lcall	_write_register_byte
                                   3175 ;	src/radio.c:546: write_register_byte(CONFIG, read_register_byte(CONFIG) & ~PRIM_RX);
      001062 75 82 00         [24] 3176 	mov	dpl,#0x00
      001065 12r04rA9         [24] 3177 	lcall	_read_register_byte
      001068 E5 82            [12] 3178 	mov	a,dpl
      00106A 90r00r2D         [24] 3179 	mov	dptr,#_write_register_byte_PARM_2
      00106D 54 FE            [12] 3180 	anl	a,#0xfe
      00106F F0               [24] 3181 	movx	@dptr,a
      001070 75 82 00         [24] 3182 	mov	dpl,#0x00
      001073 12r04r88         [24] 3183 	lcall	_write_register_byte
      001076 D0 00            [24] 3184 	pop	ar0
      001078 D0 05            [24] 3185 	pop	ar5
      00107A D0 06            [24] 3186 	pop	ar6
      00107C D0 07            [24] 3187 	pop	ar7
                                   3188 ;	src/radio.c:549: configure_address(&data[address_start], data[1]);
      00107E E8               [12] 3189 	mov	a,r0
      00107F 2D               [12] 3190 	add	a,r5
      001080 F8               [12] 3191 	mov	r0,a
      001081 E4               [12] 3192 	clr	a
      001082 3E               [12] 3193 	addc	a,r6
      001083 FB               [12] 3194 	mov	r3,a
      001084 8F 04            [24] 3195 	mov	ar4,r7
      001086 85*0E 82         [24] 3196 	mov	dpl,_handle_radio_request_sloc1_1_0
      001089 85*0F 83         [24] 3197 	mov	dph,(_handle_radio_request_sloc1_1_0 + 1)
      00108C 85*10 F0         [24] 3198 	mov	b,(_handle_radio_request_sloc1_1_0 + 2)
      00108F 12r00r00         [24] 3199 	lcall	__gptrget
      001092 90r00r18         [24] 3200 	mov	dptr,#_configure_address_PARM_2
      001095 F0               [24] 3201 	movx	@dptr,a
      001096 88 82            [24] 3202 	mov	dpl,r0
      001098 8B 83            [24] 3203 	mov	dph,r3
      00109A 8C F0            [24] 3204 	mov	b,r4
      00109C C0 07            [24] 3205 	push	ar7
      00109E C0 06            [24] 3206 	push	ar6
      0010A0 C0 05            [24] 3207 	push	ar5
      0010A2 12r02rB6         [24] 3208 	lcall	_configure_address
      0010A5 D0 05            [24] 3209 	pop	ar5
      0010A7 D0 06            [24] 3210 	pop	ar6
      0010A9 D0 07            [24] 3211 	pop	ar7
                                   3212 ;	src/radio.c:552: spi_write(W_TX_PAYLOAD, &data[2], data[0]);
      0010AB 74 02            [12] 3213 	mov	a,#0x02
      0010AD 2D               [12] 3214 	add	a,r5
      0010AE FA               [12] 3215 	mov	r2,a
      0010AF E4               [12] 3216 	clr	a
      0010B0 3E               [12] 3217 	addc	a,r6
      0010B1 FB               [12] 3218 	mov	r3,a
      0010B2 8F 04            [24] 3219 	mov	ar4,r7
      0010B4 8D 82            [24] 3220 	mov	dpl,r5
      0010B6 8E 83            [24] 3221 	mov	dph,r6
      0010B8 8F F0            [24] 3222 	mov	b,r7
      0010BA 12r00r00         [24] 3223 	lcall	__gptrget
      0010BD FD               [12] 3224 	mov	r5,a
      0010BE 90r00r23         [24] 3225 	mov	dptr,#_spi_write_PARM_2
      0010C1 EA               [12] 3226 	mov	a,r2
      0010C2 F0               [24] 3227 	movx	@dptr,a
      0010C3 EB               [12] 3228 	mov	a,r3
      0010C4 A3               [24] 3229 	inc	dptr
      0010C5 F0               [24] 3230 	movx	@dptr,a
      0010C6 EC               [12] 3231 	mov	a,r4
      0010C7 A3               [24] 3232 	inc	dptr
      0010C8 F0               [24] 3233 	movx	@dptr,a
      0010C9 90r00r26         [24] 3234 	mov	dptr,#_spi_write_PARM_3
      0010CC ED               [12] 3235 	mov	a,r5
      0010CD F0               [24] 3236 	movx	@dptr,a
      0010CE 75 82 A0         [24] 3237 	mov	dpl,#0xa0
      0010D1 12r03r9B         [24] 3238 	lcall	_spi_write
                                   3239 ;	src/radio.c:555: rfce = 1;
                                   3240 ;	assignBit
      0010D4 D2 90            [12] 3241 	setb	_rfce
                                   3242 ;	src/nRF24LU1P.h:35: inline void delay_us(uint16_t us) { do nop_us(); while(--us); }
      0010D6 7E 0A            [12] 3243 	mov	r6,#0x0a
      0010D8 7F 00            [12] 3244 	mov	r7,#0x00
      0010DA                       3245 00220$:
      0010DA 00               [12] 3246 	nop 
      0010DB 00               [12] 3247 	nop 
      0010DC 00               [12] 3248 	nop 
      0010DD 00               [12] 3249 	nop 
      0010DE 1E               [12] 3250 	dec	r6
      0010DF BE FF 01         [24] 3251 	cjne	r6,#0xff,00595$
      0010E2 1F               [12] 3252 	dec	r7
      0010E3                       3253 00595$:
      0010E3 EE               [12] 3254 	mov	a,r6
      0010E4 4F               [12] 3255 	orl	a,r7
      0010E5 70 F3            [24] 3256 	jnz	00220$
                                   3257 ;	src/radio.c:557: rfce = 0;
                                   3258 ;	assignBit
      0010E7 C2 90            [12] 3259 	clr	_rfce
                                   3260 ;	src/radio.c:560: while(true)
      0010E9                       3261 00175$:
                                   3262 ;	src/radio.c:563: rfcsn = 0;
                                   3263 ;	assignBit
      0010E9 C2 91            [12] 3264 	clr	_rfcsn
                                   3265 ;	src/radio.c:564: RFDAT = _NOP;
      0010EB 75 E5 FF         [24] 3266 	mov	_RFDAT,#0xff
                                   3267 ;	src/radio.c:565: RFRDY = 0;
                                   3268 ;	assignBit
      0010EE C2 C0            [12] 3269 	clr	_RFRDY
                                   3270 ;	src/radio.c:566: while(!RFRDY);
      0010F0                       3271 00169$:
      0010F0 30 C0 FD         [24] 3272 	jnb	_RFRDY,00169$
                                   3273 ;	src/radio.c:567: rfcsn = 1;
                                   3274 ;	assignBit
      0010F3 D2 91            [12] 3275 	setb	_rfcsn
                                   3276 ;	src/radio.c:570: if((RFDAT & TX_DS) == TX_DS)
      0010F5 AE E5            [24] 3277 	mov	r6,_RFDAT
      0010F7 53 06 20         [24] 3278 	anl	ar6,#0x20
      0010FA 7F 00            [12] 3279 	mov	r7,#0x00
      0010FC BE 20 EA         [24] 3280 	cjne	r6,#0x20,00175$
      0010FF BF 00 E7         [24] 3281 	cjne	r7,#0x00,00175$
                                   3282 ;	src/radio.c:572: in1buf[0] = 1;
      001102 90 C6 80         [24] 3283 	mov	dptr,#_in1buf
      001105 74 01            [12] 3284 	mov	a,#0x01
      001107 F0               [24] 3285 	movx	@dptr,a
                                   3286 ;	src/radio.c:578: write_register_byte(CONFIG, read_register_byte(CONFIG) | PRIM_RX);
      001108 75 82 00         [24] 3287 	mov	dpl,#0x00
      00110B 12r04rA9         [24] 3288 	lcall	_read_register_byte
      00110E E5 82            [12] 3289 	mov	a,dpl
      001110 90r00r2D         [24] 3290 	mov	dptr,#_write_register_byte_PARM_2
      001113 44 01            [12] 3291 	orl	a,#0x01
      001115 F0               [24] 3292 	movx	@dptr,a
      001116 75 82 00         [24] 3293 	mov	dpl,#0x00
      001119 12r04r88         [24] 3294 	lcall	_write_register_byte
                                   3295 ;	src/radio.c:579: configure_address(pm_prefix, pm_prefix_length);
      00111C 90r00r02         [24] 3296 	mov	dptr,#_pm_prefix_length
      00111F E0               [24] 3297 	movx	a,@dptr
      001120 FE               [12] 3298 	mov	r6,a
      001121 A3               [24] 3299 	inc	dptr
      001122 E0               [24] 3300 	movx	a,@dptr
      001123 90r00r18         [24] 3301 	mov	dptr,#_configure_address_PARM_2
      001126 EE               [12] 3302 	mov	a,r6
      001127 F0               [24] 3303 	movx	@dptr,a
      001128 90r00r04         [24] 3304 	mov	dptr,#_pm_prefix
      00112B 75 F0 00         [24] 3305 	mov	b,#0x00
      00112E 12r02rB6         [24] 3306 	lcall	_configure_address
                                   3307 ;	src/radio.c:582: rfce = 1;
                                   3308 ;	assignBit
      001131 D2 90            [12] 3309 	setb	_rfce
                                   3310 ;	src/radio.c:583: in1bc = 1;
      001133 90 C7 B7         [24] 3311 	mov	dptr,#0xc7b7
      001136 74 01            [12] 3312 	mov	a,#0x01
      001138 F0               [24] 3313 	movx	@dptr,a
                                   3314 ;	src/radio.c:585: }
      001139 22               [24] 3315 	ret
                                   3316 	.area CSEG    (CODE)
                                   3317 	.area CONST   (CODE)
                                   3318 	.area XINIT   (CODE)
      000000                       3319 __xinit__nordic_bootloader:
      000000 00 78                 3320 	.byte #0x00,#0x78
      000002                       3321 __xinit__logitech_bootloader:
      000002 00 74                 3322 	.byte #0x00,#0x74
      000004                       3323 __xinit__promiscuous_address:
      000004 AA                    3324 	.db #0xaa	; 170
      000005 00                    3325 	.db #0x00	; 0
                                   3326 	.area CABS    (ABS,CODE)
